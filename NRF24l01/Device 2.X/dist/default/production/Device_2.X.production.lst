

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Mar  2 22:00:24 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F2550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _SSPBUF	set	4041
    56  0000                     _PORTAbits	set	3968
    57  0000                     _SSPCON1bits	set	4038
    58  0000                     _SSPSTATbits	set	4039
    59  0000                     _RCREG	set	4014
    60  0000                     _SPBRG	set	4015
    61  0000                     _SPBRGH	set	4016
    62  0000                     _TXREG	set	4013
    63  0000                     _ADRESL	set	4035
    64  0000                     _ADRESH	set	4036
    65  0000                     _ADCON0bits	set	4034
    66  0000                     _ADCON2bits	set	4032
    67  0000                     _ADCON1bits	set	4033
    68  0000                     _TRISA2	set	31890
    69  0000                     _SSPOV	set	32310
    70  0000                     _SSPIF	set	31987
    71  0000                     _BF	set	32312
    72  0000                     _SPEN	set	32095
    73  0000                     _SSPIE	set	31979
    74  0000                     _TRISA3	set	31891
    75  0000                     _TRISB1	set	31897
    76  0000                     _TRISB0	set	31896
    77  0000                     _RCIF	set	31989
    78  0000                     _RCIE	set	31981
    79  0000                     _PEIE	set	32662
    80  0000                     _GIE	set	32663
    81  0000                     _BRG16	set	32195
    82  0000                     _BRGH	set	32098
    83  0000                     _TRISC7	set	31911
    84  0000                     _TRISC6	set	31910
    85  0000                     _SENDB	set	32099
    86  0000                     _TX9	set	32102
    87  0000                     _SYNC	set	32100
    88  0000                     _CREN	set	32092
    89  0000                     _TXEN	set	32101
    90  0000                     _TRMT	set	32097
    91  0000                     _GO_DONE	set	32273
    92  0000                     _ADFM	set	32263
    93  0000                     _ADON	set	32272
    94  0000                     _TRISA4	set	31892
    95  0000                     _TRISA5	set	31893
    96                           
    97                           ; #config settings
    98                           
    99                           	psect	cinit
   100  007DD4                     __pcinit:
   101                           	callstack 0
   102  007DD4                     start_initialization:
   103                           	callstack 0
   104  007DD4                     __initialization:
   105                           	callstack 0
   106                           
   107                           ; Clear objects allocated to COMRAM (2 bytes)
   108  007DD4  6A18               	clrf	(__pbssCOMRAM+1)& (0+255),c
   109  007DD6  6A17               	clrf	__pbssCOMRAM& (0+255),c
   110  007DD8                     end_of_initialization:
   111                           	callstack 0
   112  007DD8                     __end_of__initialization:
   113                           	callstack 0
   114  007DD8  0100               	movlb	0
   115  007DDA  EF4A  F03F         	goto	_main	;jump to C main() function
   116                           
   117                           	psect	bssCOMRAM
   118  000017                     __pbssCOMRAM:
   119                           	callstack 0
   120  000017                     _received:
   121                           	callstack 0
   122  000017                     	ds	1
   123  000018                     _uartdata:
   124                           	callstack 0
   125  000018                     	ds	1
   126                           
   127                           	psect	cstackCOMRAM
   128  000001                     __pcstackCOMRAM:
   129                           	callstack 0
   130  000001                     ?___aldiv:
   131                           	callstack 0
   132  000001                     initSPI@freq_mode:
   133                           	callstack 0
   134  000001                     rawSendSPI@data:
   135                           	callstack 0
   136  000001                     ___aldiv@dividend:
   137                           	callstack 0
   138                           
   139                           ; 4 bytes @ 0x0
   140  000001                     	ds	1
   141  000002                     initSPI@mode:
   142                           	callstack 0
   143                           
   144                           ; 1 bytes @ 0x1
   145  000002                     	ds	3
   146  000005                     ___aldiv@divisor:
   147                           	callstack 0
   148                           
   149                           ; 4 bytes @ 0x4
   150  000005                     	ds	4
   151  000009                     ___aldiv@counter:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x8
   155  000009                     	ds	1
   156  00000A                     ___aldiv@sign:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x9
   160  00000A                     	ds	1
   161  00000B                     ___aldiv@quotient:
   162                           	callstack 0
   163                           
   164                           ; 4 bytes @ 0xA
   165  00000B                     	ds	4
   166  00000F                     initUART@baud_rate:
   167                           	callstack 0
   168                           
   169                           ; 4 bytes @ 0xE
   170  00000F                     	ds	4
   171  000013                     initUART@num1:
   172                           	callstack 0
   173                           
   174                           ; 2 bytes @ 0x12
   175  000013                     	ds	2
   176  000015                     ??_main:
   177                           
   178                           ; 1 bytes @ 0x14
   179  000015                     	ds	2
   180                           
   181 ;;
   182 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   183 ;;
   184 ;; *************** function _main *****************
   185 ;; Defined at:
   186 ;;		line 17 in file "main.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;		None
   189 ;; Auto vars:     Size  Location     Type
   190 ;;		None
   191 ;; Return value:  Size  Location     Type
   192 ;;                  1    wreg      void 
   193 ;; Registers used:
   194 ;;		wreg, status,2, status,0, cstack
   195 ;; Tracked objects:
   196 ;;		On entry : 0/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   200 ;;      Params:         0       0       0       0       0       0       0       0       0
   201 ;;      Locals:         0       0       0       0       0       0       0       0       0
   202 ;;      Temps:          2       0       0       0       0       0       0       0       0
   203 ;;      Totals:         2       0       0       0       0       0       0       0       0
   204 ;;Total ram usage:        2 bytes
   205 ;; Hardware stack levels required when called: 2
   206 ;; This function calls:
   207 ;;		_deinitADC
   208 ;;		_initSPI
   209 ;;		_initUART
   210 ;;		_rawSendSPI
   211 ;;		_setGPIO
   212 ;; This function is called by:
   213 ;;		Startup code after reset
   214 ;; This function uses a non-reentrant model
   215 ;;
   216                           
   217                           	psect	text0
   218  007E94                     __ptext0:
   219                           	callstack 0
   220  007E94                     _main:
   221                           	callstack 29
   222  007E94                     
   223                           ;main.c: 20:     setGPIO();
   224  007E94  ECE3  F03E         	call	_setGPIO	;wreg free
   225  007E98                     
   226                           ;main.c: 23:     deinitADC();
   227  007E98  ECE6  F03E         	call	_deinitADC	;wreg free
   228  007E9C                     
   229                           ;main.c: 26:     initUART(115200);
   230  007E9C  0E00               	movlw	0
   231  007E9E  6E0F               	movwf	initUART@baud_rate^0,c
   232  007EA0  0EC2               	movlw	194
   233  007EA2  6E10               	movwf	(initUART@baud_rate+1)^0,c
   234  007EA4  0E01               	movlw	1
   235  007EA6  6E11               	movwf	(initUART@baud_rate+2)^0,c
   236  007EA8  0E00               	movlw	0
   237  007EAA  6E12               	movwf	(initUART@baud_rate+3)^0,c
   238  007EAC  EC1B  F03F         	call	_initUART	;wreg free
   239  007EB0                     
   240                           ;main.c: 29:     initSPI(1, 2);
   241  007EB0  0E02               	movlw	2
   242  007EB2  6E01               	movwf	initSPI@freq_mode^0,c
   243  007EB4  0E01               	movlw	1
   244  007EB6  EC00  F03F         	call	_initSPI
   245  007EBA                     l1117:
   246                           
   247                           ;main.c: 33:         if(PORTAbits.RA4) {
   248  007EBA  A880               	btfss	128,4,c	;volatile
   249  007EBC  EF62  F03F         	goto	u241
   250  007EC0  EF64  F03F         	goto	u240
   251  007EC4                     u241:
   252  007EC4  EF5D  F03F         	goto	l1117
   253  007EC8                     u240:
   254  007EC8                     
   255                           ;main.c: 35:             rawSendSPI(0b00100000 | 0b00000001);
   256  007EC8  0E21               	movlw	33
   257  007ECA  ECEF  F03E         	call	_rawSendSPI
   258                           
   259                           ;main.c: 36:             rawSendSPI(0b00111100);
   260  007ECE  0E3C               	movlw	60
   261  007ED0  ECEF  F03E         	call	_rawSendSPI
   262  007ED4                     
   263                           ;main.c: 38:             _delay((unsigned long)((300)*(48000000/4000.0)));
   264  007ED4  0E13               	movlw	19
   265  007ED6  6E16               	movwf	(??_main+1)^0,c
   266  007ED8  0E44               	movlw	68
   267  007EDA  6E15               	movwf	??_main^0,c
   268  007EDC  0E44               	movlw	68
   269  007EDE                     u257:
   270  007EDE  2EE8               	decfsz	wreg,f,c
   271  007EE0  D7FE               	bra	u257
   272  007EE2  2E15               	decfsz	??_main^0,f,c
   273  007EE4  D7FC               	bra	u257
   274  007EE6  2E16               	decfsz	(??_main+1)^0,f,c
   275  007EE8  D7FA               	bra	u257
   276  007EEA  D000               	nop2	
   277  007EEC  EF5D  F03F         	goto	l1117
   278  007EF0  EF00  F000         	goto	start
   279  007EF4                     __end_of_main:
   280                           	callstack 0
   281                           
   282 ;; *************** function _setGPIO *****************
   283 ;; Defined at:
   284 ;;		line 40 in file "./GPIO.h"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		None
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   298 ;;      Params:         0       0       0       0       0       0       0       0       0
   299 ;;      Locals:         0       0       0       0       0       0       0       0       0
   300 ;;      Temps:          0       0       0       0       0       0       0       0       0
   301 ;;      Totals:         0       0       0       0       0       0       0       0       0
   302 ;;Total ram usage:        0 bytes
   303 ;; Hardware stack levels used: 1
   304 ;; This function calls:
   305 ;;		Nothing
   306 ;; This function is called by:
   307 ;;		_main
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text1
   312  007DC6                     __ptext1:
   313                           	callstack 0
   314  007DC6                     _setGPIO:
   315                           	callstack 30
   316  007DC6                     
   317                           ;./GPIO.h: 44:     TRISA5 = 0;
   318  007DC6  9A92               	bcf	3986,5,c	;volatile
   319                           
   320                           ;./GPIO.h: 45:     TRISA4 = 1;
   321  007DC8  8892               	bsf	3986,4,c	;volatile
   322  007DCA  0012               	return		;funcret
   323  007DCC                     __end_of_setGPIO:
   324                           	callstack 0
   325                           
   326 ;; *************** function _rawSendSPI *****************
   327 ;; Defined at:
   328 ;;		line 41 in file "./SPI.h"
   329 ;; Parameters:    Size  Location     Type
   330 ;;  data            1    wreg     unsigned char 
   331 ;; Auto vars:     Size  Location     Type
   332 ;;  data            1    0[COMRAM] unsigned char 
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   342 ;;      Params:         0       0       0       0       0       0       0       0       0
   343 ;;      Locals:         1       0       0       0       0       0       0       0       0
   344 ;;      Temps:          0       0       0       0       0       0       0       0       0
   345 ;;      Totals:         1       0       0       0       0       0       0       0       0
   346 ;;Total ram usage:        1 bytes
   347 ;; Hardware stack levels used: 1
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		_main
   352 ;;		_initNRF24
   353 ;;		_writeNRF
   354 ;;		_readNRF
   355 ;;		_transmit_data
   356 ;;		_receive_data
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	text2
   361  007DDE                     __ptext2:
   362                           	callstack 0
   363  007DDE                     _rawSendSPI:
   364                           	callstack 30
   365                           
   366                           ;incstack = 0
   367                           ;rawSendSPI@data stored from wreg
   368  007DDE  6E01               	movwf	rawSendSPI@data^0,c
   369  007DE0                     
   370                           ;./SPI.h: 43:     SPEN = 0;
   371  007DE0  9EAB               	bcf	4011,7,c	;volatile
   372                           
   373                           ;./SPI.h: 44:     PORTAbits.RA3 = 0;
   374  007DE2  9680               	bcf	128,3,c	;volatile
   375  007DE4                     
   376                           ;./SPI.h: 45:     SSPBUF = data;
   377  007DE4  C001  FFC9         	movff	rawSendSPI@data,4041	;volatile
   378  007DE8                     l127:
   379                           
   380                           ;./SPI.h: 46:     while(!BF) {
   381  007DE8  A0C7               	btfss	4039,0,c	;volatile
   382  007DEA  EFF9  F03E         	goto	u81
   383  007DEE  EFFB  F03E         	goto	u80
   384  007DF2                     u81:
   385  007DF2  EFF4  F03E         	goto	l127
   386  007DF6                     u80:
   387  007DF6                     
   388                           ;./SPI.h: 48:     PORTAbits.RA3 = 1;
   389  007DF6  8680               	bsf	128,3,c	;volatile
   390  007DF8                     
   391                           ;./SPI.h: 51:     _delay((unsigned long)((10)*(48000000/4000000.0)));
   392  007DF8  0E28               	movlw	40
   393  007DFA                     u267:
   394  007DFA  2EE8               	decfsz	wreg,f,c
   395  007DFC  D7FE               	bra	u267
   396  007DFE  0012               	return		;funcret
   397  007E00                     __end_of_rawSendSPI:
   398                           	callstack 0
   399                           
   400 ;; *************** function _initUART *****************
   401 ;; Defined at:
   402 ;;		line 14 in file "./UART.h"
   403 ;; Parameters:    Size  Location     Type
   404 ;;  baud_rate       4   14[COMRAM] long 
   405 ;; Auto vars:     Size  Location     Type
   406 ;;  num1            2   18[COMRAM] unsigned short 
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, status,2, status,0, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   416 ;;      Params:         4       0       0       0       0       0       0       0       0
   417 ;;      Locals:         2       0       0       0       0       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0       0       0       0       0
   419 ;;      Totals:         6       0       0       0       0       0       0       0       0
   420 ;;Total ram usage:        6 bytes
   421 ;; Hardware stack levels used: 1
   422 ;; Hardware stack levels required when called: 1
   423 ;; This function calls:
   424 ;;		___aldiv
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text3
   431  007E36                     __ptext3:
   432                           	callstack 0
   433  007E36                     _initUART:
   434                           	callstack 29
   435  007E36                     
   436                           ;./UART.h: 15:     TXEN = 1;
   437  007E36  8AAC               	bsf	4012,5,c	;volatile
   438                           
   439                           ;./UART.h: 16:     CREN = 1;
   440  007E38  88AB               	bsf	4011,4,c	;volatile
   441                           
   442                           ;./UART.h: 17:     SYNC = 0;
   443  007E3A  98AC               	bcf	4012,4,c	;volatile
   444                           
   445                           ;./UART.h: 20:     TX9 = 0;
   446  007E3C  9CAC               	bcf	4012,6,c	;volatile
   447                           
   448                           ;./UART.h: 21:     SENDB = 1;
   449  007E3E  86AC               	bsf	4012,3,c	;volatile
   450                           
   451                           ;./UART.h: 23:     TRISC6 = 1;
   452  007E40  8C94               	bsf	3988,6,c	;volatile
   453                           
   454                           ;./UART.h: 24:     TRISC7 = 1;
   455  007E42  8E94               	bsf	3988,7,c	;volatile
   456                           
   457                           ;./UART.h: 26:     BRGH = 1;
   458  007E44  84AC               	bsf	4012,2,c	;volatile
   459                           
   460                           ;./UART.h: 27:     BRG16 = 1;
   461  007E46  86B8               	bsf	4024,3,c	;volatile
   462  007E48                     
   463                           ;./UART.h: 29:     uint16_t num1 = (uint16_t)(48000000/baud_rate)/4 - 1;
   464  007E48  0E00               	movlw	0
   465  007E4A  6E01               	movwf	___aldiv@dividend^0,c
   466  007E4C  0E6C               	movlw	108
   467  007E4E  6E02               	movwf	(___aldiv@dividend+1)^0,c
   468  007E50  0EDC               	movlw	220
   469  007E52  6E03               	movwf	(___aldiv@dividend+2)^0,c
   470  007E54  0E02               	movlw	2
   471  007E56  6E04               	movwf	(___aldiv@dividend+3)^0,c
   472  007E58  C00F  F005         	movff	initUART@baud_rate,___aldiv@divisor
   473  007E5C  C010  F006         	movff	initUART@baud_rate+1,___aldiv@divisor+1
   474  007E60  C011  F007         	movff	initUART@baud_rate+2,___aldiv@divisor+2
   475  007E64  C012  F008         	movff	initUART@baud_rate+3,___aldiv@divisor+3
   476  007E68  EC7A  F03F         	call	___aldiv	;wreg free
   477  007E6C  90D8               	bcf	status,0,c
   478  007E6E  3202               	rrcf	(?___aldiv+1)^0,f,c
   479  007E70  3201               	rrcf	?___aldiv^0,f,c
   480  007E72  90D8               	bcf	status,0,c
   481  007E74  3202               	rrcf	(?___aldiv+1)^0,f,c
   482  007E76  3201               	rrcf	?___aldiv^0,f,c
   483  007E78  0EFF               	movlw	255
   484  007E7A  2401               	addwf	?___aldiv^0,w,c
   485  007E7C  6E13               	movwf	initUART@num1^0,c
   486  007E7E  0EFF               	movlw	255
   487  007E80  2002               	addwfc	(?___aldiv+1)^0,w,c
   488  007E82  6E14               	movwf	(initUART@num1+1)^0,c
   489  007E84                     
   490                           ;./UART.h: 30:     SPBRGH = ((uint16_t)num1 >> 8) & 0xFF;
   491  007E84  5014               	movf	(initUART@num1+1)^0,w,c
   492  007E86  6EB0               	movwf	176,c	;volatile
   493  007E88                     
   494                           ;./UART.h: 31:     SPBRG = ((uint16_t)num1 >> 0) & 0xFF;
   495  007E88  C013  FFAF         	movff	initUART@num1,4015	;volatile
   496  007E8C                     
   497                           ;./UART.h: 40:     GIE = 1;
   498  007E8C  8EF2               	bsf	4082,7,c	;volatile
   499  007E8E                     
   500                           ;./UART.h: 41:     PEIE = 1;
   501  007E8E  8CF2               	bsf	4082,6,c	;volatile
   502  007E90                     
   503                           ;./UART.h: 42:     RCIE = 1;
   504  007E90  8A9D               	bsf	3997,5,c	;volatile
   505  007E92  0012               	return		;funcret
   506  007E94                     __end_of_initUART:
   507                           	callstack 0
   508                           
   509 ;; *************** function ___aldiv *****************
   510 ;; Defined at:
   511 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aldiv.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;  dividend        4    0[COMRAM] long 
   514 ;;  divisor         4    4[COMRAM] long 
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  quotient        4   10[COMRAM] long 
   517 ;;  sign            1    9[COMRAM] unsigned char 
   518 ;;  counter         1    8[COMRAM] unsigned char 
   519 ;; Return value:  Size  Location     Type
   520 ;;                  4    0[COMRAM] long 
   521 ;; Registers used:
   522 ;;		wreg, status,2, status,0
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   528 ;;      Params:         8       0       0       0       0       0       0       0       0
   529 ;;      Locals:         6       0       0       0       0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0       0       0       0       0
   531 ;;      Totals:        14       0       0       0       0       0       0       0       0
   532 ;;Total ram usage:       14 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		_initUART
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text4
   542  007EF4                     __ptext4:
   543                           	callstack 0
   544  007EF4                     ___aldiv:
   545                           	callstack 29
   546  007EF4  0E00               	movlw	0
   547  007EF6  6E0A               	movwf	___aldiv@sign^0,c
   548  007EF8  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
   549  007EFA  EF83  F03F         	goto	u170
   550  007EFE  EF81  F03F         	goto	u171
   551  007F02                     u171:
   552  007F02  EF8D  F03F         	goto	l1037
   553  007F06                     u170:
   554  007F06  1E08               	comf	(___aldiv@divisor+3)^0,f,c
   555  007F08  1E07               	comf	(___aldiv@divisor+2)^0,f,c
   556  007F0A  1E06               	comf	(___aldiv@divisor+1)^0,f,c
   557  007F0C  6C05               	negf	___aldiv@divisor^0,c
   558  007F0E  0E00               	movlw	0
   559  007F10  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
   560  007F12  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
   561  007F14  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
   562  007F16  0E01               	movlw	1
   563  007F18  6E0A               	movwf	___aldiv@sign^0,c
   564  007F1A                     l1037:
   565  007F1A  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
   566  007F1C  EF94  F03F         	goto	u180
   567  007F20  EF92  F03F         	goto	u181
   568  007F24                     u181:
   569  007F24  EF9E  F03F         	goto	l1043
   570  007F28                     u180:
   571  007F28  1E04               	comf	(___aldiv@dividend+3)^0,f,c
   572  007F2A  1E03               	comf	(___aldiv@dividend+2)^0,f,c
   573  007F2C  1E02               	comf	(___aldiv@dividend+1)^0,f,c
   574  007F2E  6C01               	negf	___aldiv@dividend^0,c
   575  007F30  0E00               	movlw	0
   576  007F32  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
   577  007F34  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
   578  007F36  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
   579  007F38  0E01               	movlw	1
   580  007F3A  1A0A               	xorwf	___aldiv@sign^0,f,c
   581  007F3C                     l1043:
   582  007F3C  0E00               	movlw	0
   583  007F3E  6E0B               	movwf	___aldiv@quotient^0,c
   584  007F40  0E00               	movlw	0
   585  007F42  6E0C               	movwf	(___aldiv@quotient+1)^0,c
   586  007F44  0E00               	movlw	0
   587  007F46  6E0D               	movwf	(___aldiv@quotient+2)^0,c
   588  007F48  0E00               	movlw	0
   589  007F4A  6E0E               	movwf	(___aldiv@quotient+3)^0,c
   590  007F4C  5005               	movf	___aldiv@divisor^0,w,c
   591  007F4E  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
   592  007F50  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
   593  007F52  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
   594  007F54  B4D8               	btfsc	status,2,c
   595  007F56  EFAF  F03F         	goto	u191
   596  007F5A  EFB1  F03F         	goto	u190
   597  007F5E                     u191:
   598  007F5E  EFE7  F03F         	goto	l1065
   599  007F62                     u190:
   600  007F62  0E01               	movlw	1
   601  007F64  6E09               	movwf	___aldiv@counter^0,c
   602  007F66  EFBB  F03F         	goto	l1051
   603  007F6A                     l1049:
   604  007F6A  90D8               	bcf	status,0,c
   605  007F6C  3605               	rlcf	___aldiv@divisor^0,f,c
   606  007F6E  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
   607  007F70  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
   608  007F72  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
   609  007F74  2A09               	incf	___aldiv@counter^0,f,c
   610  007F76                     l1051:
   611  007F76  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
   612  007F78  EFC0  F03F         	goto	u201
   613  007F7C  EFC2  F03F         	goto	u200
   614  007F80                     u201:
   615  007F80  EFB5  F03F         	goto	l1049
   616  007F84                     u200:
   617  007F84                     l1053:
   618  007F84  90D8               	bcf	status,0,c
   619  007F86  360B               	rlcf	___aldiv@quotient^0,f,c
   620  007F88  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
   621  007F8A  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
   622  007F8C  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
   623  007F8E  5005               	movf	___aldiv@divisor^0,w,c
   624  007F90  5C01               	subwf	___aldiv@dividend^0,w,c
   625  007F92  5006               	movf	(___aldiv@divisor+1)^0,w,c
   626  007F94  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
   627  007F96  5007               	movf	(___aldiv@divisor+2)^0,w,c
   628  007F98  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
   629  007F9A  5008               	movf	(___aldiv@divisor+3)^0,w,c
   630  007F9C  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
   631  007F9E  A0D8               	btfss	status,0,c
   632  007FA0  EFD4  F03F         	goto	u211
   633  007FA4  EFD6  F03F         	goto	u210
   634  007FA8                     u211:
   635  007FA8  EFDF  F03F         	goto	l1061
   636  007FAC                     u210:
   637  007FAC  5005               	movf	___aldiv@divisor^0,w,c
   638  007FAE  5E01               	subwf	___aldiv@dividend^0,f,c
   639  007FB0  5006               	movf	(___aldiv@divisor+1)^0,w,c
   640  007FB2  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
   641  007FB4  5007               	movf	(___aldiv@divisor+2)^0,w,c
   642  007FB6  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
   643  007FB8  5008               	movf	(___aldiv@divisor+3)^0,w,c
   644  007FBA  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
   645  007FBC  800B               	bsf	___aldiv@quotient^0,0,c
   646  007FBE                     l1061:
   647  007FBE  90D8               	bcf	status,0,c
   648  007FC0  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
   649  007FC2  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
   650  007FC4  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
   651  007FC6  3205               	rrcf	___aldiv@divisor^0,f,c
   652  007FC8  2E09               	decfsz	___aldiv@counter^0,f,c
   653  007FCA  EFC2  F03F         	goto	l1053
   654  007FCE                     l1065:
   655  007FCE  500A               	movf	___aldiv@sign^0,w,c
   656  007FD0  B4D8               	btfsc	status,2,c
   657  007FD2  EFED  F03F         	goto	u221
   658  007FD6  EFEF  F03F         	goto	u220
   659  007FDA                     u221:
   660  007FDA  EFF7  F03F         	goto	l1069
   661  007FDE                     u220:
   662  007FDE  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
   663  007FE0  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
   664  007FE2  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
   665  007FE4  6C0B               	negf	___aldiv@quotient^0,c
   666  007FE6  0E00               	movlw	0
   667  007FE8  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
   668  007FEA  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
   669  007FEC  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
   670  007FEE                     l1069:
   671  007FEE  C00B  F001         	movff	___aldiv@quotient,?___aldiv
   672  007FF2  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
   673  007FF6  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
   674  007FFA  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
   675  007FFE  0012               	return		;funcret
   676  008000                     __end_of___aldiv:
   677                           	callstack 0
   678                           
   679 ;; *************** function _initSPI *****************
   680 ;; Defined at:
   681 ;;		line 4 in file "./SPI.h"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  mode            1    wreg     _Bool 
   684 ;;  freq_mode       1    0[COMRAM] unsigned char 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  mode            1    1[COMRAM] _Bool 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   696 ;;      Params:         1       0       0       0       0       0       0       0       0
   697 ;;      Locals:         1       0       0       0       0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0       0       0       0       0
   699 ;;      Totals:         2       0       0       0       0       0       0       0       0
   700 ;;Total ram usage:        2 bytes
   701 ;; Hardware stack levels used: 1
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text5
   710  007E00                     __ptext5:
   711                           	callstack 0
   712  007E00                     _initSPI:
   713                           	callstack 30
   714                           
   715                           ;incstack = 0
   716                           ;initSPI@mode stored from wreg
   717  007E00  6E02               	movwf	initSPI@mode^0,c
   718  007E02                     
   719                           ;./SPI.h: 13:     if (mode) {
   720  007E02  5002               	movf	initSPI@mode^0,w,c
   721  007E04  B4D8               	btfsc	status,2,c
   722  007E06  EF07  F03F         	goto	u231
   723  007E0A  EF09  F03F         	goto	u230
   724  007E0E                     u231:
   725  007E0E  EF1A  F03F         	goto	l124
   726  007E12                     u230:
   727  007E12                     
   728                           ;./SPI.h: 16:         SSPSTATbits.SMP = 1;
   729  007E12  8EC7               	bsf	199,7,c	;volatile
   730                           
   731                           ;./SPI.h: 17:         SSPSTATbits.CKE = 1;
   732  007E14  8CC7               	bsf	199,6,c	;volatile
   733                           
   734                           ;./SPI.h: 19:         SSPCON1bits.SSPEN = 1;
   735  007E16  8AC6               	bsf	198,5,c	;volatile
   736                           
   737                           ;./SPI.h: 20:         SSPCON1bits.CKP = 0;
   738  007E18  98C6               	bcf	198,4,c	;volatile
   739  007E1A                     
   740                           ;./SPI.h: 21:         SSPCON1bits.SSPM = freq_mode;
   741  007E1A  50C6               	movf	198,w,c	;volatile
   742  007E1C  1801               	xorwf	initSPI@freq_mode^0,w,c
   743  007E1E  0BF0               	andlw	-16
   744  007E20  1801               	xorwf	initSPI@freq_mode^0,w,c
   745  007E22  6EC6               	movwf	198,c	;volatile
   746  007E24                     
   747                           ;./SPI.h: 23:         TRISB0 = 1;
   748  007E24  8093               	bsf	3987,0,c	;volatile
   749  007E26                     
   750                           ;./SPI.h: 24:         TRISC7 = 0;
   751  007E26  9E94               	bcf	3988,7,c	;volatile
   752  007E28                     
   753                           ;./SPI.h: 25:         TRISB1 = 0;
   754  007E28  9293               	bcf	3987,1,c	;volatile
   755  007E2A                     
   756                           ;./SPI.h: 27:         TRISA3 = 0;
   757  007E2A  9692               	bcf	3986,3,c	;volatile
   758  007E2C                     
   759                           ;./SPI.h: 29:         PORTAbits.RA3 = 1;
   760  007E2C  8680               	bsf	128,3,c	;volatile
   761  007E2E                     
   762                           ;./SPI.h: 31:         GIE = 1;
   763  007E2E  8EF2               	bsf	4082,7,c	;volatile
   764  007E30                     
   765                           ;./SPI.h: 32:         PEIE = 1;
   766  007E30  8CF2               	bsf	4082,6,c	;volatile
   767  007E32                     
   768                           ;./SPI.h: 33:         SSPIE = 1;
   769  007E32  869D               	bsf	3997,3,c	;volatile
   770  007E34                     l124:
   771  007E34  0012               	return		;funcret
   772  007E36                     __end_of_initSPI:
   773                           	callstack 0
   774                           
   775 ;; *************** function _deinitADC *****************
   776 ;; Defined at:
   777 ;;		line 2 in file "./ADC.h"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;		None
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   791 ;;      Params:         0       0       0       0       0       0       0       0       0
   792 ;;      Locals:         0       0       0       0       0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0       0       0       0       0
   794 ;;      Totals:         0       0       0       0       0       0       0       0       0
   795 ;;Total ram usage:        0 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text6
   805  007DCC                     __ptext6:
   806                           	callstack 0
   807  007DCC                     _deinitADC:
   808                           	callstack 30
   809  007DCC                     
   810                           ;./ADC.h: 3:     ADON = 0;
   811  007DCC  90C2               	bcf	4034,0,c	;volatile
   812  007DCE                     
   813                           ;./ADC.h: 4:     ADCON1bits.PCFG = 0b1111;
   814  007DCE  0E0F               	movlw	15
   815  007DD0  12C1               	iorwf	193,f,c	;volatile
   816  007DD2  0012               	return		;funcret
   817  007DD4                     __end_of_deinitADC:
   818                           	callstack 0
   819  0000                     
   820                           	psect	rparam
   821  0000                     
   822                           	psect	idloc
   823                           
   824                           ;Config register IDLOC0 @ 0x200000
   825                           ;	unspecified, using default values
   826  200000                     	org	2097152
   827  200000  FF                 	db	255
   828                           
   829                           ;Config register IDLOC1 @ 0x200001
   830                           ;	unspecified, using default values
   831  200001                     	org	2097153
   832  200001  FF                 	db	255
   833                           
   834                           ;Config register IDLOC2 @ 0x200002
   835                           ;	unspecified, using default values
   836  200002                     	org	2097154
   837  200002  FF                 	db	255
   838                           
   839                           ;Config register IDLOC3 @ 0x200003
   840                           ;	unspecified, using default values
   841  200003                     	org	2097155
   842  200003  FF                 	db	255
   843                           
   844                           ;Config register IDLOC4 @ 0x200004
   845                           ;	unspecified, using default values
   846  200004                     	org	2097156
   847  200004  FF                 	db	255
   848                           
   849                           ;Config register IDLOC5 @ 0x200005
   850                           ;	unspecified, using default values
   851  200005                     	org	2097157
   852  200005  FF                 	db	255
   853                           
   854                           ;Config register IDLOC6 @ 0x200006
   855                           ;	unspecified, using default values
   856  200006                     	org	2097158
   857  200006  FF                 	db	255
   858                           
   859                           ;Config register IDLOC7 @ 0x200007
   860                           ;	unspecified, using default values
   861  200007                     	org	2097159
   862  200007  FF                 	db	255
   863                           
   864                           	psect	config
   865                           
   866                           ;Config register CONFIG1L @ 0x300000
   867                           ;	PLL Prescaler Selection bits
   868                           ;	PLLDIV = 4, Divide by 4 (16 MHz oscillator input)
   869                           ;	System Clock Postscaler Selection bits
   870                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   871                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   872                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   873  300000                     	org	3145728
   874  300000  03                 	db	3
   875                           
   876                           ;Config register CONFIG1H @ 0x300001
   877                           ;	Oscillator Selection bits
   878                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   879                           ;	Fail-Safe Clock Monitor Enable bit
   880                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   881                           ;	Internal/External Oscillator Switchover bit
   882                           ;	IESO = OFF, Oscillator Switchover mode disabled
   883  300001                     	org	3145729
   884  300001  0E                 	db	14
   885                           
   886                           ;Config register CONFIG2L @ 0x300002
   887                           ;	Power-up Timer Enable bit
   888                           ;	PWRT = OFF, PWRT disabled
   889                           ;	Brown-out Reset Enable bits
   890                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   891                           ;	Brown-out Reset Voltage bits
   892                           ;	BORV = 3, Minimum setting 2.05V
   893                           ;	USB Voltage Regulator Enable bit
   894                           ;	VREGEN = OFF, USB voltage regulator disabled
   895  300002                     	org	3145730
   896  300002  19                 	db	25
   897                           
   898                           ;Config register CONFIG2H @ 0x300003
   899                           ;	Watchdog Timer Enable bit
   900                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   901                           ;	Watchdog Timer Postscale Select bits
   902                           ;	WDTPS = 32768, 1:32768
   903  300003                     	org	3145731
   904  300003  1E                 	db	30
   905                           
   906                           ; Padding undefined space
   907  300004                     	org	3145732
   908  300004  FF                 	db	255
   909                           
   910                           ;Config register CONFIG3H @ 0x300005
   911                           ;	CCP2 MUX bit
   912                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   913                           ;	PORTB A/D Enable bit
   914                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   915                           ;	Low-Power Timer 1 Oscillator Enable bit
   916                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   917                           ;	MCLR Pin Enable bit
   918                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   919  300005                     	org	3145733
   920  300005  01                 	db	1
   921                           
   922                           ;Config register CONFIG4L @ 0x300006
   923                           ;	Stack Full/Underflow Reset Enable bit
   924                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   925                           ;	Single-Supply ICSP Enable bit
   926                           ;	LVP = OFF, Single-Supply ICSP disabled
   927                           ;	Extended Instruction Set Enable bit
   928                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   929                           ;	Background Debugger Enable bit
   930                           ;	DEBUG = 0x1, unprogrammed default
   931  300006                     	org	3145734
   932  300006  80                 	db	128
   933                           
   934                           ; Padding undefined space
   935  300007                     	org	3145735
   936  300007  FF                 	db	255
   937                           
   938                           ;Config register CONFIG5L @ 0x300008
   939                           ;	Code Protection bit
   940                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   941                           ;	Code Protection bit
   942                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   943                           ;	Code Protection bit
   944                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   945                           ;	Code Protection bit
   946                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   947  300008                     	org	3145736
   948  300008  0F                 	db	15
   949                           
   950                           ;Config register CONFIG5H @ 0x300009
   951                           ;	Boot Block Code Protection bit
   952                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   953                           ;	Data EEPROM Code Protection bit
   954                           ;	CPD = OFF, Data EEPROM is not code-protected
   955  300009                     	org	3145737
   956  300009  C0                 	db	192
   957                           
   958                           ;Config register CONFIG6L @ 0x30000A
   959                           ;	Write Protection bit
   960                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   961                           ;	Write Protection bit
   962                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   963                           ;	Write Protection bit
   964                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   965                           ;	Write Protection bit
   966                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   967  30000A                     	org	3145738
   968  30000A  0F                 	db	15
   969                           
   970                           ;Config register CONFIG6H @ 0x30000B
   971                           ;	Configuration Register Write Protection bit
   972                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   973                           ;	Boot Block Write Protection bit
   974                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   975                           ;	Data EEPROM Write Protection bit
   976                           ;	WRTD = OFF, Data EEPROM is not write-protected
   977  30000B                     	org	3145739
   978  30000B  E0                 	db	224
   979                           
   980                           ;Config register CONFIG7L @ 0x30000C
   981                           ;	Table Read Protection bit
   982                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   983                           ;	Table Read Protection bit
   984                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   985                           ;	Table Read Protection bit
   986                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   987                           ;	Table Read Protection bit
   988                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   989  30000C                     	org	3145740
   990  30000C  0F                 	db	15
   991                           
   992                           ;Config register CONFIG7H @ 0x30000D
   993                           ;	Boot Block Table Read Protection bit
   994                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   995  30000D                     	org	3145741
   996  30000D  40                 	db	64
   997                           tosu	equ	0xFFF
   998                           tosh	equ	0xFFE
   999                           tosl	equ	0xFFD
  1000                           stkptr	equ	0xFFC
  1001                           pclatu	equ	0xFFB
  1002                           pclath	equ	0xFFA
  1003                           pcl	equ	0xFF9
  1004                           tblptru	equ	0xFF8
  1005                           tblptrh	equ	0xFF7
  1006                           tblptrl	equ	0xFF6
  1007                           tablat	equ	0xFF5
  1008                           prodh	equ	0xFF4
  1009                           prodl	equ	0xFF3
  1010                           indf0	equ	0xFEF
  1011                           postinc0	equ	0xFEE
  1012                           postdec0	equ	0xFED
  1013                           preinc0	equ	0xFEC
  1014                           plusw0	equ	0xFEB
  1015                           fsr0h	equ	0xFEA
  1016                           fsr0l	equ	0xFE9
  1017                           wreg	equ	0xFE8
  1018                           indf1	equ	0xFE7
  1019                           postinc1	equ	0xFE6
  1020                           postdec1	equ	0xFE5
  1021                           preinc1	equ	0xFE4
  1022                           plusw1	equ	0xFE3
  1023                           fsr1h	equ	0xFE2
  1024                           fsr1l	equ	0xFE1
  1025                           bsr	equ	0xFE0
  1026                           indf2	equ	0xFDF
  1027                           postinc2	equ	0xFDE
  1028                           postdec2	equ	0xFDD
  1029                           preinc2	equ	0xFDC
  1030                           plusw2	equ	0xFDB
  1031                           fsr2h	equ	0xFDA
  1032                           fsr2l	equ	0xFD9
  1033                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_initUART
    _initUART->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     730
                                             20 COMRAM     2     2      0
                          _deinitADC
                            _initSPI
                           _initUART
                         _rawSendSPI
                            _setGPIO
 ---------------------------------------------------------------------------------
 (1) _setGPIO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rawSendSPI                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             6     2      4     595
                                             14 COMRAM     6     2      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _initSPI                                              2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _deinitADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _deinitADC
   _initSPI
   _initUART
     ___aldiv
   _rawSendSPI
   _setGPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      18       1       25.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      20        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Mar  2 22:00:24 2022

            _SSPSTATbits 000FC7                       _BF 007E38                       l90 7DD2  
                     l87 7DCA                       u80 7DF6                       u81 7DF2  
                    l130 7DFE                      l115 7E92                      l124 7E34  
                    l127 7DE8                      l129 7DF6                      l243 7FFE  
                    l923 7DE0                      l925 7DE4                      l927 7DF8  
                    l881 7DC6                      l883 7DCC                      l885 7DCE  
                    _GIE 007F97                      u200 7F84                      u201 7F80  
                    u210 7FAC                      u211 7FA8                      u220 7FDE  
                    u221 7FDA                      u230 7E12                      u231 7E0E  
                    u240 7EC8                      u241 7EC4                      u170 7F06  
                    u171 7F02                      u180 7F28                      u181 7F24  
                    u190 7F62                      u191 7F5E                      u257 7EDE  
                    u267 7DFA                      _TX9 007D66                      wreg 000FE8  
                   l1101 7E2C                     l1103 7E2E                     l1031 7EF8  
                   l1111 7E98                     l1105 7E30                     l1041 7F38  
                   l1033 7F06                     l1121 7ED4                     l1113 7E9C  
                   l1107 7E32                     l1051 7F76                     l1043 7F3C  
                   l1035 7F16                     l1115 7EB0                     l1061 7FBE  
                   l1053 7F84                     l1045 7F4C                     l1037 7F1A  
                   l1029 7EF4                     l1117 7EBA                     l1109 7E94  
                   l1063 7FC8                     l1055 7F8E                     l1047 7F62  
                   l1039 7F28                     l1119 7EC8                     l1057 7FAC  
                   l1049 7F6A                     l1065 7FCE                     l1081 7E8C  
                   l1073 7E36                     l1091 7E1A                     l1067 7FDE  
                   l1059 7FBC                     l1083 7E8E                     l1075 7E48  
                   l1093 7E24                     l1069 7FEE                     l1085 7E90  
                   l1077 7E84                     l1095 7E26                     l1087 7E02  
                   l1079 7E88                     l1097 7E28                     l1089 7E12  
                   l1099 7E2A                     _ADFM 007E07                     _ADON 007E10  
                   _BRGH 007D62                     _CREN 007D5C                     _PEIE 007F96  
                   _RCIE 007CED                     _RCIF 007CF5                     _SPEN 007D5F  
                   _TRMT 007D61                     _TXEN 007D65                     _SYNC 007D64  
                   _main 7E94                     start 0000             ___param_bank 000000  
        __end_of___aldiv 8000                    ?_main 0001                    _BRG16 007DC3  
                  _RCREG 000FAE                    _SENDB 007D63                    _SPBRG 000FAF  
                  _SSPIE 007CEB                    _SSPIF 007CF3                    _SSPOV 007E36  
                  _TXREG 000FAD          __end_of_initSPI 7E36          __end_of_setGPIO 7DCC  
                  status 000FD8          __initialization 7DD4             __end_of_main 7EF4  
            initSPI@mode 0002                   ??_main 0015            __activetblptr 000000  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _SPBRGH 000FB0  
                 _TRISB0 007C98                   _TRISA2 007C92                   _TRISB1 007C99  
                 _TRISA3 007C93                   _TRISA4 007C94                   _TRISA5 007C95  
                 _TRISC6 007CA6                   _TRISC7 007CA7                   _SSPBUF 000FC9  
              ??___aldiv 0009         __end_of_initUART 7E94                   isa$std 000001  
              ??_initSPI 0002                ??_setGPIO 0001               __accesstop 0060  
__end_of__initialization 7DD8            ___rparam_used 000001             initUART@num1 0013  
         __pcstackCOMRAM 0001       __size_of_deinitADC 0008           rawSendSPI@data 0001  
                _GO_DONE 007E11                ?_initUART 000F        __end_of_deinitADC 7DD4  
                __Hparam 0000                  __Lparam 0000                  ___aldiv 7EF4  
                __pcinit 7DD4                  __ramtop 0800                  __ptext0 7E94  
                __ptext1 7DC6                  __ptext2 7DDE                  __ptext3 7E36  
                __ptext4 7EF4                  __ptext5 7E00                  __ptext6 7DCC  
                _initSPI 7E00                  _setGPIO 7DC6               _rawSendSPI 7DDE  
       ___aldiv@dividend 0001     end_of_initialization 7DD8               ??_initUART 0013  
       ___aldiv@quotient 000B        initUART@baud_rate 000F         initSPI@freq_mode 0001  
              _PORTAbits 000F80              ?_rawSendSPI 0001      start_initialization 7DD4  
            __pbssCOMRAM 0017        __size_of_initUART 005E                _deinitADC 7DCC  
    __size_of_rawSendSPI 0022                 ?___aldiv 0001                 ?_initSPI 0001  
               ?_setGPIO 0001          ___aldiv@divisor 0005          ___aldiv@counter 0009  
             ?_deinitADC 0001               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___aldiv 010C             ??_rawSendSPI 0001         __size_of_initSPI 0036  
       __size_of_setGPIO 0006                 _initUART 7E36            __size_of_main 0060  
               _received 0017              ??_deinitADC 0001                 isa$xinst 000000  
               _uartdata 0018       __end_of_rawSendSPI 7E00             ___aldiv@sign 000A  
            _SSPCON1bits 000FC6  
