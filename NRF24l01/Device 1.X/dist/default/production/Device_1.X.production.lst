

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Feb 28 22:36:31 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F45K22 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _ANSC7	set	31191
    55  0000                     _ANSC6	set	31190
    56  0000                     _ANSA5	set	31173
    57  0000                     _PORTAbits	set	3968
    58  0000                     _RCREG2	set	3956
    59  0000                     _SPBRG2	set	3957
    60  0000                     _SPBRGH2	set	3958
    61  0000                     _TXREG2	set	3955
    62  0000                     _RCREG1	set	4014
    63  0000                     _SPBRG1	set	4015
    64  0000                     _SPBRGH1	set	4016
    65  0000                     _TXREG1	set	4013
    66  0000                     _OSCCONbits	set	4051
    67  0000                     _RC2IF	set	32037
    68  0000                     _RC2IE	set	32029
    69  0000                     _BRG162	set	31619
    70  0000                     _BRGH2	set	31634
    71  0000                     _SENDB2	set	31635
    72  0000                     _TX92	set	31638
    73  0000                     _SPEN2	set	31631
    74  0000                     _SYNC2	set	31636
    75  0000                     _CREN2	set	31628
    76  0000                     _TXEN2	set	31637
    77  0000                     _TRMT2	set	31633
    78  0000                     _RC1IF	set	31989
    79  0000                     _RC1IE	set	31981
    80  0000                     _PEIE	set	32662
    81  0000                     _GIE	set	32663
    82  0000                     _BRG161	set	32195
    83  0000                     _BRGH1	set	32098
    84  0000                     _TRISC7	set	31911
    85  0000                     _TRISC6	set	31910
    86  0000                     _SENDB1	set	32099
    87  0000                     _TX91	set	32102
    88  0000                     _SPEN1	set	32095
    89  0000                     _SYNC1	set	32100
    90  0000                     _CREN1	set	32092
    91  0000                     _TXEN1	set	32101
    92  0000                     _TRMT1	set	32097
    93  0000                     _TRISA5	set	31893
    94  0000                     _PLLEN	set	31966
    95                           
    96                           ; #config settings
    97                           
    98                           	psect	cinit
    99  007DEA                     __pcinit:
   100                           	callstack 0
   101  007DEA                     start_initialization:
   102                           	callstack 0
   103  007DEA                     __initialization:
   104                           	callstack 0
   105                           
   106                           ; Clear objects allocated to COMRAM (4 bytes)
   107  007DEA  6A1D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   108  007DEC  6A1C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   109  007DEE  6A1B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   110  007DF0  6A1A               	clrf	__pbssCOMRAM& (0+255),c
   111  007DF2                     end_of_initialization:
   112                           	callstack 0
   113  007DF2                     __end_of__initialization:
   114                           	callstack 0
   115  007DF2  0100               	movlb	0
   116  007DF4  EF07  F03F         	goto	_main	;jump to C main() function
   117                           
   118                           	psect	bssCOMRAM
   119  00001A                     __pbssCOMRAM:
   120                           	callstack 0
   121  00001A                     _received2:
   122                           	callstack 0
   123  00001A                     	ds	1
   124  00001B                     _uartdata2:
   125                           	callstack 0
   126  00001B                     	ds	1
   127  00001C                     _received:
   128                           	callstack 0
   129  00001C                     	ds	1
   130  00001D                     _uartdata:
   131                           	callstack 0
   132  00001D                     	ds	1
   133                           
   134                           	psect	cstackCOMRAM
   135  000001                     __pcstackCOMRAM:
   136                           	callstack 0
   137  000001                     ?___aldiv:
   138                           	callstack 0
   139  000001                     print@value:
   140                           	callstack 0
   141  000001                     ___aldiv@dividend:
   142                           	callstack 0
   143                           
   144                           ; 4 bytes @ 0x0
   145  000001                     	ds	4
   146  000005                     ___aldiv@divisor:
   147                           	callstack 0
   148                           
   149                           ; 4 bytes @ 0x4
   150  000005                     	ds	4
   151  000009                     ___aldiv@counter:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x8
   155  000009                     	ds	1
   156  00000A                     ___aldiv@sign:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x9
   160  00000A                     	ds	1
   161  00000B                     ___aldiv@quotient:
   162                           	callstack 0
   163                           
   164                           ; 4 bytes @ 0xA
   165  00000B                     	ds	4
   166  00000F                     initUART1@baud_rate:
   167                           	callstack 0
   168                           
   169                           ; 4 bytes @ 0xE
   170  00000F                     	ds	4
   171  000013                     _initUART1$912:
   172                           	callstack 0
   173                           
   174                           ; 4 bytes @ 0x12
   175  000013                     	ds	4
   176  000017                     initUART1@num1:
   177                           	callstack 0
   178                           
   179                           ; 2 bytes @ 0x16
   180  000017                     	ds	2
   181  000019                     ??_main:
   182                           
   183                           ; 1 bytes @ 0x18
   184  000019                     	ds	1
   185                           
   186 ;;
   187 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   188 ;;
   189 ;; *************** function _main *****************
   190 ;; Defined at:
   191 ;;		line 16 in file "main.c"
   192 ;; Parameters:    Size  Location     Type
   193 ;;		None
   194 ;; Auto vars:     Size  Location     Type
   195 ;;		None
   196 ;; Return value:  Size  Location     Type
   197 ;;                  1    wreg      void 
   198 ;; Registers used:
   199 ;;		wreg, status,2, status,0, cstack
   200 ;; Tracked objects:
   201 ;;		On entry : 0/0
   202 ;;		On exit  : 0/0
   203 ;;		Unchanged: 0/0
   204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   205 ;;      Params:         0       0       0       0       0       0       0
   206 ;;      Locals:         0       0       0       0       0       0       0
   207 ;;      Temps:          1       0       0       0       0       0       0
   208 ;;      Totals:         1       0       0       0       0       0       0
   209 ;;Total ram usage:        1 bytes
   210 ;; Hardware stack levels required when called: 2
   211 ;; This function calls:
   212 ;;		_initUART1
   213 ;;		_print
   214 ;;		_setGPIO
   215 ;;		_set_internal_oscillator_with_PLL
   216 ;; This function is called by:
   217 ;;		Startup code after reset
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           	psect	text0
   222  007E0E                     __ptext0:
   223                           	callstack 0
   224  007E0E                     _main:
   225                           	callstack 29
   226  007E0E                     
   227                           ;main.c: 19:     set_internal_oscillator_with_PLL();
   228  007E0E  ECEF  F03E         	call	_set_internal_oscillator_with_PLL	;wreg free
   229  007E12                     
   230                           ;main.c: 22:     setGPIO();
   231  007E12  ECEB  F03E         	call	_setGPIO	;wreg free
   232  007E16                     
   233                           ;main.c: 25:     initUART1(115200);
   234  007E16  0E00               	movlw	0
   235  007E18  6E0F               	movwf	initUART1@baud_rate^0,c
   236  007E1A  0EC2               	movlw	194
   237  007E1C  6E10               	movwf	(initUART1@baud_rate+1)^0,c
   238  007E1E  0E01               	movlw	1
   239  007E20  6E11               	movwf	(initUART1@baud_rate+2)^0,c
   240  007E22  0E00               	movlw	0
   241  007E24  6E12               	movwf	(initUART1@baud_rate+3)^0,c
   242  007E26  EC33  F03F         	call	_initUART1	;wreg free
   243  007E2A                     l1005:
   244                           
   245                           ;main.c: 29:         if (PORTAbits.RA4) {
   246  007E2A  A880               	btfss	128,4,c	;volatile
   247  007E2C  EF1A  F03F         	goto	u181
   248  007E30  EF1C  F03F         	goto	u180
   249  007E34                     u181:
   250  007E34  EF15  F03F         	goto	l1005
   251  007E38                     u180:
   252  007E38                     
   253                           ;main.c: 30:             PORTAbits.RA5 = 1;
   254  007E38  8A80               	bsf	128,5,c	;volatile
   255  007E3A                     
   256                           ;main.c: 31:             _delay((unsigned long)((10)*(64000000/4000.0)));
   257  007E3A  0ED0               	movlw	208
   258  007E3C  6E19               	movwf	??_main^0,c
   259  007E3E  0ECA               	movlw	202
   260  007E40                     u197:
   261  007E40  2EE8               	decfsz	wreg,f,c
   262  007E42  D7FE               	bra	u197
   263  007E44  2E19               	decfsz	??_main^0,f,c
   264  007E46  D7FC               	bra	u197
   265  007E48                     
   266                           ;main.c: 32:             PORTAbits.RA5 = 0;
   267  007E48  9A80               	bcf	128,5,c	;volatile
   268                           
   269                           ;main.c: 33:             _delay((unsigned long)((10)*(64000000/4000.0)));
   270  007E4A  0ED0               	movlw	208
   271  007E4C  6E19               	movwf	??_main^0,c
   272  007E4E  0ECA               	movlw	202
   273  007E50                     u207:
   274  007E50  2EE8               	decfsz	wreg,f,c
   275  007E52  D7FE               	bra	u207
   276  007E54  2E19               	decfsz	??_main^0,f,c
   277  007E56  D7FC               	bra	u207
   278  007E58                     
   279                           ;main.c: 34:             print(3);
   280  007E58  0E03               	movlw	3
   281  007E5A  ECFC  F03E         	call	_print
   282  007E5E  EF15  F03F         	goto	l1005
   283  007E62  EF00  F000         	goto	start
   284  007E66                     __end_of_main:
   285                           	callstack 0
   286                           
   287 ;; *************** function _set_internal_oscillator_with_PLL *****************
   288 ;; Defined at:
   289 ;;		line 11 in file "./oscillator.h"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, status,2
   298 ;; Tracked objects:
   299 ;;		On entry : 0/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   303 ;;      Params:         0       0       0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0       0       0
   306 ;;      Totals:         0       0       0       0       0       0       0
   307 ;;Total ram usage:        0 bytes
   308 ;; Hardware stack levels used: 1
   309 ;; This function calls:
   310 ;;		Nothing
   311 ;; This function is called by:
   312 ;;		_main
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text1
   317  007DDE                     __ptext1:
   318                           	callstack 0
   319  007DDE                     _set_internal_oscillator_with_PLL:
   320                           	callstack 30
   321  007DDE                     
   322                           ;./oscillator.h: 14:     OSCCONbits.IRCF = 0b111;
   323  007DDE  0E70               	movlw	112
   324  007DE0  12D3               	iorwf	211,f,c	;volatile
   325                           
   326                           ;./oscillator.h: 15:     OSCCONbits.SCS = 0b00;
   327  007DE2  0EFC               	movlw	-4
   328  007DE4  16D3               	andwf	211,f,c	;volatile
   329  007DE6                     
   330                           ;./oscillator.h: 17:     PLLEN = 1;
   331  007DE6  8C9B               	bsf	3995,6,c	;volatile
   332  007DE8  0012               	return		;funcret
   333  007DEA                     __end_of_set_internal_oscillator_with_PLL:
   334                           	callstack 0
   335                           
   336 ;; *************** function _setGPIO *****************
   337 ;; Defined at:
   338 ;;		line 21 in file "./GPIO.h"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;                  1    wreg      void 
   345 ;; Registers used:
   346 ;;		None
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   352 ;;      Params:         0       0       0       0       0       0       0
   353 ;;      Locals:         0       0       0       0       0       0       0
   354 ;;      Temps:          0       0       0       0       0       0       0
   355 ;;      Totals:         0       0       0       0       0       0       0
   356 ;;Total ram usage:        0 bytes
   357 ;; Hardware stack levels used: 1
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_main
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text2
   366  007DD6                     __ptext2:
   367                           	callstack 0
   368  007DD6                     _setGPIO:
   369                           	callstack 30
   370  007DD6                     
   371                           ;./GPIO.h: 24:     TRISA5 = 0;
   372  007DD6  9A92               	bcf	3986,5,c	;volatile
   373                           
   374                           ;./GPIO.h: 27:     ANSA5 = 1;
   375  007DD8  010F               	movlb	15	; () banked
   376  007DDA  8B38               	bsf	56,5,b	;volatile
   377  007DDC                     
   378                           ; BSR set to: 15
   379  007DDC  0012               	return		;funcret
   380  007DDE                     __end_of_setGPIO:
   381                           	callstack 0
   382                           
   383 ;; *************** function _print *****************
   384 ;; Defined at:
   385 ;;		line 7 in file "./UART.h"
   386 ;; Parameters:    Size  Location     Type
   387 ;;  value           1    wreg     unsigned char 
   388 ;; Auto vars:     Size  Location     Type
   389 ;;  value           1    0[COMRAM] unsigned char 
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   399 ;;      Params:         0       0       0       0       0       0       0
   400 ;;      Locals:         1       0       0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0       0       0
   402 ;;      Totals:         1       0       0       0       0       0       0
   403 ;;Total ram usage:        1 bytes
   404 ;; Hardware stack levels used: 1
   405 ;; This function calls:
   406 ;;		Nothing
   407 ;; This function is called by:
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text3
   413  007DF8                     __ptext3:
   414                           	callstack 0
   415  007DF8                     _print:
   416                           	callstack 30
   417                           
   418                           ; BSR set to: 15
   419                           ;incstack = 0
   420                           ;print@value stored from wreg
   421  007DF8  6E01               	movwf	print@value^0,c
   422  007DFA                     l97:
   423  007DFA  A2AC               	btfss	4012,1,c	;volatile
   424  007DFC  EF02  F03F         	goto	u71
   425  007E00  EF04  F03F         	goto	u70
   426  007E04                     u71:
   427  007E04  EFFD  F03E         	goto	l97
   428  007E08                     u70:
   429  007E08                     
   430                           ;./UART.h: 9:     TXREG1 = value;
   431  007E08  C001  FFAD         	movff	print@value,4013	;volatile
   432  007E0C  0012               	return		;funcret
   433  007E0E                     __end_of_print:
   434                           	callstack 0
   435                           
   436 ;; *************** function _initUART1 *****************
   437 ;; Defined at:
   438 ;;		line 13 in file "./UART.h"
   439 ;; Parameters:    Size  Location     Type
   440 ;;  baud_rate       4   14[COMRAM] long 
   441 ;; Auto vars:     Size  Location     Type
   442 ;;  num1            2   22[COMRAM] unsigned short 
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, status,2, status,0, cstack
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   452 ;;      Params:         4       0       0       0       0       0       0
   453 ;;      Locals:         6       0       0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0       0       0
   455 ;;      Totals:        10       0       0       0       0       0       0
   456 ;;Total ram usage:       10 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; Hardware stack levels required when called: 1
   459 ;; This function calls:
   460 ;;		___aldiv
   461 ;; This function is called by:
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text4
   467  007E66                     __ptext4:
   468                           	callstack 0
   469  007E66                     _initUART1:
   470                           	callstack 29
   471  007E66                     
   472                           ;./UART.h: 14:     TXEN1 = 1;
   473  007E66  8AAC               	bsf	4012,5,c	;volatile
   474                           
   475                           ;./UART.h: 15:     CREN1 = 1;
   476  007E68  88AB               	bsf	4011,4,c	;volatile
   477                           
   478                           ;./UART.h: 16:     SYNC1 = 0;
   479  007E6A  98AC               	bcf	4012,4,c	;volatile
   480                           
   481                           ;./UART.h: 17:     SPEN1 = 1;
   482  007E6C  8EAB               	bsf	4011,7,c	;volatile
   483                           
   484                           ;./UART.h: 19:     TX91 = 0;
   485  007E6E  9CAC               	bcf	4012,6,c	;volatile
   486                           
   487                           ;./UART.h: 20:     SENDB1 = 1;
   488  007E70  86AC               	bsf	4012,3,c	;volatile
   489                           
   490                           ;./UART.h: 22:     TRISC6 = 1;
   491  007E72  8C94               	bsf	3988,6,c	;volatile
   492                           
   493                           ;./UART.h: 23:     TRISC7 = 1;
   494  007E74  8E94               	bsf	3988,7,c	;volatile
   495                           
   496                           ;./UART.h: 24:     ANSC6 = 0;
   497  007E76  010F               	movlb	15	; () banked
   498  007E78  9D3A               	bcf	58,6,b	;volatile
   499                           
   500                           ;./UART.h: 25:     ANSC7 = 0;
   501  007E7A  9F3A               	bcf	58,7,b	;volatile
   502                           
   503                           ;./UART.h: 27:     BRGH1 = 1;
   504  007E7C  84AC               	bsf	4012,2,c	;volatile
   505                           
   506                           ;./UART.h: 28:     BRG161 = 1;
   507  007E7E  86B8               	bsf	4024,3,c	;volatile
   508  007E80                     
   509                           ; BSR set to: 15
   510                           ;./UART.h: 30:     uint16_t num1 = (uint16_t)((64000000/baud_rate)/4 - 1);
   511  007E80  C00F  F005         	movff	initUART1@baud_rate,___aldiv@divisor
   512  007E84  C010  F006         	movff	initUART1@baud_rate+1,___aldiv@divisor+1
   513  007E88  C011  F007         	movff	initUART1@baud_rate+2,___aldiv@divisor+2
   514  007E8C  C012  F008         	movff	initUART1@baud_rate+3,___aldiv@divisor+3
   515  007E90  0E00               	movlw	0
   516  007E92  6E01               	movwf	___aldiv@dividend^0,c
   517  007E94  0E90               	movlw	144
   518  007E96  6E02               	movwf	(___aldiv@dividend+1)^0,c
   519  007E98  0ED0               	movlw	208
   520  007E9A  6E03               	movwf	(___aldiv@dividend+2)^0,c
   521  007E9C  0E03               	movlw	3
   522  007E9E  6E04               	movwf	(___aldiv@dividend+3)^0,c
   523  007EA0  EC7A  F03F         	call	___aldiv	;wreg free
   524  007EA4  C001  F013         	movff	?___aldiv,_initUART1$912
   525  007EA8  C002  F014         	movff	?___aldiv+1,_initUART1$912+1
   526  007EAC  C003  F015         	movff	?___aldiv+2,_initUART1$912+2
   527  007EB0  C004  F016         	movff	?___aldiv+3,_initUART1$912+3
   528                           
   529                           ;./UART.h: 30:     uint16_t num1 = (uint16_t)((64000000/baud_rate)/4 - 1);
   530  007EB4  C013  F001         	movff	_initUART1$912,___aldiv@dividend
   531  007EB8  C014  F002         	movff	_initUART1$912+1,___aldiv@dividend+1
   532  007EBC  C015  F003         	movff	_initUART1$912+2,___aldiv@dividend+2
   533  007EC0  C016  F004         	movff	_initUART1$912+3,___aldiv@dividend+3
   534  007EC4  0E04               	movlw	4
   535  007EC6  6E05               	movwf	___aldiv@divisor^0,c
   536  007EC8  0E00               	movlw	0
   537  007ECA  6E06               	movwf	(___aldiv@divisor+1)^0,c
   538  007ECC  0E00               	movlw	0
   539  007ECE  6E07               	movwf	(___aldiv@divisor+2)^0,c
   540  007ED0  0E00               	movlw	0
   541  007ED2  6E08               	movwf	(___aldiv@divisor+3)^0,c
   542  007ED4  EC7A  F03F         	call	___aldiv	;wreg free
   543  007ED8  0EFF               	movlw	255
   544  007EDA  2401               	addwf	?___aldiv^0,w,c
   545  007EDC  6E17               	movwf	initUART1@num1^0,c
   546  007EDE  0EFF               	movlw	255
   547  007EE0  2002               	addwfc	(?___aldiv+1)^0,w,c
   548  007EE2  6E18               	movwf	(initUART1@num1+1)^0,c
   549  007EE4                     
   550                           ;./UART.h: 31:     SPBRGH1 = ((uint16_t)num1 >> 8) & 0xFF;
   551  007EE4  5018               	movf	(initUART1@num1+1)^0,w,c
   552  007EE6  6EB0               	movwf	176,c	;volatile
   553  007EE8                     
   554                           ;./UART.h: 32:     SPBRG1 = ((uint16_t)num1 >> 0) & 0xFF;
   555  007EE8  C017  FFAF         	movff	initUART1@num1,4015	;volatile
   556  007EEC                     
   557                           ;./UART.h: 41:     GIE = 1;
   558  007EEC  8EF2               	bsf	4082,7,c	;volatile
   559  007EEE                     
   560                           ;./UART.h: 42:     PEIE = 1;
   561  007EEE  8CF2               	bsf	4082,6,c	;volatile
   562  007EF0                     
   563                           ;./UART.h: 43:     RC1IE = 1;
   564  007EF0  8A9D               	bsf	3997,5,c	;volatile
   565  007EF2  0012               	return		;funcret
   566  007EF4                     __end_of_initUART1:
   567                           	callstack 0
   568                           
   569 ;; *************** function ___aldiv *****************
   570 ;; Defined at:
   571 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aldiv.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;  dividend        4    0[COMRAM] long 
   574 ;;  divisor         4    4[COMRAM] long 
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  quotient        4   10[COMRAM] long 
   577 ;;  sign            1    9[COMRAM] unsigned char 
   578 ;;  counter         1    8[COMRAM] unsigned char 
   579 ;; Return value:  Size  Location     Type
   580 ;;                  4    0[COMRAM] long 
   581 ;; Registers used:
   582 ;;		wreg, status,2, status,0
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   588 ;;      Params:         8       0       0       0       0       0       0
   589 ;;      Locals:         6       0       0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0       0       0
   591 ;;      Totals:        14       0       0       0       0       0       0
   592 ;;Total ram usage:       14 bytes
   593 ;; Hardware stack levels used: 1
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_initUART1
   598 ;;		_initUART2
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text5
   603  007EF4                     __ptext5:
   604                           	callstack 0
   605  007EF4                     ___aldiv:
   606                           	callstack 29
   607  007EF4  0E00               	movlw	0
   608  007EF6  6E0A               	movwf	___aldiv@sign^0,c
   609  007EF8  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
   610  007EFA  EF83  F03F         	goto	u120
   611  007EFE  EF81  F03F         	goto	u121
   612  007F02                     u121:
   613  007F02  EF8D  F03F         	goto	l935
   614  007F06                     u120:
   615  007F06  1E08               	comf	(___aldiv@divisor+3)^0,f,c
   616  007F08  1E07               	comf	(___aldiv@divisor+2)^0,f,c
   617  007F0A  1E06               	comf	(___aldiv@divisor+1)^0,f,c
   618  007F0C  6C05               	negf	___aldiv@divisor^0,c
   619  007F0E  0E00               	movlw	0
   620  007F10  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
   621  007F12  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
   622  007F14  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
   623  007F16  0E01               	movlw	1
   624  007F18  6E0A               	movwf	___aldiv@sign^0,c
   625  007F1A                     l935:
   626  007F1A  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
   627  007F1C  EF94  F03F         	goto	u130
   628  007F20  EF92  F03F         	goto	u131
   629  007F24                     u131:
   630  007F24  EF9E  F03F         	goto	l941
   631  007F28                     u130:
   632  007F28  1E04               	comf	(___aldiv@dividend+3)^0,f,c
   633  007F2A  1E03               	comf	(___aldiv@dividend+2)^0,f,c
   634  007F2C  1E02               	comf	(___aldiv@dividend+1)^0,f,c
   635  007F2E  6C01               	negf	___aldiv@dividend^0,c
   636  007F30  0E00               	movlw	0
   637  007F32  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
   638  007F34  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
   639  007F36  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
   640  007F38  0E01               	movlw	1
   641  007F3A  1A0A               	xorwf	___aldiv@sign^0,f,c
   642  007F3C                     l941:
   643  007F3C  0E00               	movlw	0
   644  007F3E  6E0B               	movwf	___aldiv@quotient^0,c
   645  007F40  0E00               	movlw	0
   646  007F42  6E0C               	movwf	(___aldiv@quotient+1)^0,c
   647  007F44  0E00               	movlw	0
   648  007F46  6E0D               	movwf	(___aldiv@quotient+2)^0,c
   649  007F48  0E00               	movlw	0
   650  007F4A  6E0E               	movwf	(___aldiv@quotient+3)^0,c
   651  007F4C  5005               	movf	___aldiv@divisor^0,w,c
   652  007F4E  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
   653  007F50  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
   654  007F52  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
   655  007F54  B4D8               	btfsc	status,2,c
   656  007F56  EFAF  F03F         	goto	u141
   657  007F5A  EFB1  F03F         	goto	u140
   658  007F5E                     u141:
   659  007F5E  EFE7  F03F         	goto	l963
   660  007F62                     u140:
   661  007F62  0E01               	movlw	1
   662  007F64  6E09               	movwf	___aldiv@counter^0,c
   663  007F66  EFBB  F03F         	goto	l949
   664  007F6A                     l947:
   665  007F6A  90D8               	bcf	status,0,c
   666  007F6C  3605               	rlcf	___aldiv@divisor^0,f,c
   667  007F6E  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
   668  007F70  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
   669  007F72  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
   670  007F74  2A09               	incf	___aldiv@counter^0,f,c
   671  007F76                     l949:
   672  007F76  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
   673  007F78  EFC0  F03F         	goto	u151
   674  007F7C  EFC2  F03F         	goto	u150
   675  007F80                     u151:
   676  007F80  EFB5  F03F         	goto	l947
   677  007F84                     u150:
   678  007F84                     l951:
   679  007F84  90D8               	bcf	status,0,c
   680  007F86  360B               	rlcf	___aldiv@quotient^0,f,c
   681  007F88  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
   682  007F8A  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
   683  007F8C  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
   684  007F8E  5005               	movf	___aldiv@divisor^0,w,c
   685  007F90  5C01               	subwf	___aldiv@dividend^0,w,c
   686  007F92  5006               	movf	(___aldiv@divisor+1)^0,w,c
   687  007F94  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
   688  007F96  5007               	movf	(___aldiv@divisor+2)^0,w,c
   689  007F98  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
   690  007F9A  5008               	movf	(___aldiv@divisor+3)^0,w,c
   691  007F9C  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
   692  007F9E  A0D8               	btfss	status,0,c
   693  007FA0  EFD4  F03F         	goto	u161
   694  007FA4  EFD6  F03F         	goto	u160
   695  007FA8                     u161:
   696  007FA8  EFDF  F03F         	goto	l959
   697  007FAC                     u160:
   698  007FAC  5005               	movf	___aldiv@divisor^0,w,c
   699  007FAE  5E01               	subwf	___aldiv@dividend^0,f,c
   700  007FB0  5006               	movf	(___aldiv@divisor+1)^0,w,c
   701  007FB2  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
   702  007FB4  5007               	movf	(___aldiv@divisor+2)^0,w,c
   703  007FB6  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
   704  007FB8  5008               	movf	(___aldiv@divisor+3)^0,w,c
   705  007FBA  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
   706  007FBC  800B               	bsf	___aldiv@quotient^0,0,c
   707  007FBE                     l959:
   708  007FBE  90D8               	bcf	status,0,c
   709  007FC0  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
   710  007FC2  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
   711  007FC4  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
   712  007FC6  3205               	rrcf	___aldiv@divisor^0,f,c
   713  007FC8  2E09               	decfsz	___aldiv@counter^0,f,c
   714  007FCA  EFC2  F03F         	goto	l951
   715  007FCE                     l963:
   716  007FCE  500A               	movf	___aldiv@sign^0,w,c
   717  007FD0  B4D8               	btfsc	status,2,c
   718  007FD2  EFED  F03F         	goto	u171
   719  007FD6  EFEF  F03F         	goto	u170
   720  007FDA                     u171:
   721  007FDA  EFF7  F03F         	goto	l967
   722  007FDE                     u170:
   723  007FDE  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
   724  007FE0  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
   725  007FE2  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
   726  007FE4  6C0B               	negf	___aldiv@quotient^0,c
   727  007FE6  0E00               	movlw	0
   728  007FE8  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
   729  007FEA  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
   730  007FEC  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
   731  007FEE                     l967:
   732  007FEE  C00B  F001         	movff	___aldiv@quotient,?___aldiv
   733  007FF2  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
   734  007FF6  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
   735  007FFA  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
   736  007FFE  0012               	return		;funcret
   737  008000                     __end_of___aldiv:
   738                           	callstack 0
   739  0000                     
   740                           	psect	rparam
   741  0000                     
   742                           	psect	idloc
   743                           
   744                           ;Config register IDLOC0 @ 0x200000
   745                           ;	unspecified, using default values
   746  200000                     	org	2097152
   747  200000  FF                 	db	255
   748                           
   749                           ;Config register IDLOC1 @ 0x200001
   750                           ;	unspecified, using default values
   751  200001                     	org	2097153
   752  200001  FF                 	db	255
   753                           
   754                           ;Config register IDLOC2 @ 0x200002
   755                           ;	unspecified, using default values
   756  200002                     	org	2097154
   757  200002  FF                 	db	255
   758                           
   759                           ;Config register IDLOC3 @ 0x200003
   760                           ;	unspecified, using default values
   761  200003                     	org	2097155
   762  200003  FF                 	db	255
   763                           
   764                           ;Config register IDLOC4 @ 0x200004
   765                           ;	unspecified, using default values
   766  200004                     	org	2097156
   767  200004  FF                 	db	255
   768                           
   769                           ;Config register IDLOC5 @ 0x200005
   770                           ;	unspecified, using default values
   771  200005                     	org	2097157
   772  200005  FF                 	db	255
   773                           
   774                           ;Config register IDLOC6 @ 0x200006
   775                           ;	unspecified, using default values
   776  200006                     	org	2097158
   777  200006  FF                 	db	255
   778                           
   779                           ;Config register IDLOC7 @ 0x200007
   780                           ;	unspecified, using default values
   781  200007                     	org	2097159
   782  200007  FF                 	db	255
   783                           
   784                           	psect	config
   785                           
   786                           ; Padding undefined space
   787  300000                     	org	3145728
   788  300000  FF                 	db	255
   789                           
   790                           ;Config register CONFIG1H @ 0x300001
   791                           ;	Oscillator Selection bits
   792                           ;	FOSC = INTIO67, Internal oscillator block
   793                           ;	4X PLL Enable
   794                           ;	PLLCFG = 0x0, unprogrammed default
   795                           ;	Primary clock enable bit
   796                           ;	PRICLKEN = OFF, Primary clock can be disabled by software
   797                           ;	Fail-Safe Clock Monitor Enable bit
   798                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   799                           ;	Internal/External Oscillator Switchover bit
   800                           ;	IESO = ON, Oscillator Switchover mode enabled
   801  300001                     	org	3145729
   802  300001  88                 	db	136
   803                           
   804                           ;Config register CONFIG2L @ 0x300002
   805                           ;	Power-up Timer Enable bit
   806                           ;	PWRTEN = ON, Power up timer enabled
   807                           ;	Brown-out Reset Enable bits
   808                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
   809                           ;	Brown Out Reset Voltage bits
   810                           ;	BORV = 190, VBOR set to 1.90 V nominal
   811  300002                     	org	3145730
   812  300002  1A                 	db	26
   813                           
   814                           ;Config register CONFIG2H @ 0x300003
   815                           ;	Watchdog Timer Enable bits
   816                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   817                           ;	Watchdog Timer Postscale Select bits
   818                           ;	WDTPS = 32768, 1:32768
   819  300003                     	org	3145731
   820  300003  3C                 	db	60
   821                           
   822                           ; Padding undefined space
   823  300004                     	org	3145732
   824  300004  FF                 	db	255
   825                           
   826                           ;Config register CONFIG3H @ 0x300005
   827                           ;	CCP2 MUX bit
   828                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   829                           ;	PORTB A/D Enable bit
   830                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
   831                           ;	P3A/CCP3 Mux bit
   832                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   833                           ;	HFINTOSC Fast Start-up
   834                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   835                           ;	Timer3 Clock input mux bit
   836                           ;	T3CMX = PORTC0, T3CKI is on RC0
   837                           ;	ECCP2 B output mux bit
   838                           ;	P2BMX = PORTD2, P2B is on RD2
   839                           ;	MCLR Pin Enable bit
   840                           ;	MCLRE = INTMCLR, RE3 input pin enabled; MCLR disabled
   841  300005                     	org	3145733
   842  300005  3D                 	db	61
   843                           
   844                           ;Config register CONFIG4L @ 0x300006
   845                           ;	Stack Full/Underflow Reset Enable bit
   846                           ;	STVREN = ON, Stack full/underflow will cause Reset
   847                           ;	Single-Supply ICSP Enable bit
   848                           ;	LVP = OFF, Single-Supply ICSP disabled
   849                           ;	Extended Instruction Set Enable bit
   850                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   851                           ;	Background Debug
   852                           ;	DEBUG = 0x1, unprogrammed default
   853  300006                     	org	3145734
   854  300006  81                 	db	129
   855                           
   856                           ; Padding undefined space
   857  300007                     	org	3145735
   858  300007  FF                 	db	255
   859                           
   860                           ;Config register CONFIG5L @ 0x300008
   861                           ;	Code Protection Block 0
   862                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   863                           ;	Code Protection Block 1
   864                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   865                           ;	Code Protection Block 2
   866                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   867                           ;	Code Protection Block 3
   868                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   869  300008                     	org	3145736
   870  300008  0F                 	db	15
   871                           
   872                           ;Config register CONFIG5H @ 0x300009
   873                           ;	Boot Block Code Protection bit
   874                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   875                           ;	Data EEPROM Code Protection bit
   876                           ;	CPD = OFF, Data EEPROM not code-protected
   877  300009                     	org	3145737
   878  300009  C0                 	db	192
   879                           
   880                           ;Config register CONFIG6L @ 0x30000A
   881                           ;	Write Protection Block 0
   882                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   883                           ;	Write Protection Block 1
   884                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   885                           ;	Write Protection Block 2
   886                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   887                           ;	Write Protection Block 3
   888                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   889  30000A                     	org	3145738
   890  30000A  0F                 	db	15
   891                           
   892                           ;Config register CONFIG6H @ 0x30000B
   893                           ;	Configuration Register Write Protection bit
   894                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   895                           ;	Boot Block Write Protection bit
   896                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   897                           ;	Data EEPROM Write Protection bit
   898                           ;	WRTD = OFF, Data EEPROM not write-protected
   899  30000B                     	org	3145739
   900  30000B  E0                 	db	224
   901                           
   902                           ;Config register CONFIG7L @ 0x30000C
   903                           ;	Table Read Protection Block 0
   904                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   905                           ;	Table Read Protection Block 1
   906                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   907                           ;	Table Read Protection Block 2
   908                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   909                           ;	Table Read Protection Block 3
   910                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   911  30000C                     	org	3145740
   912  30000C  0F                 	db	15
   913                           
   914                           ;Config register CONFIG7H @ 0x30000D
   915                           ;	Boot Block Table Read Protection bit
   916                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   917  30000D                     	org	3145741
   918  30000D  40                 	db	64
   919                           tosu	equ	0xFFF
   920                           tosh	equ	0xFFE
   921                           tosl	equ	0xFFD
   922                           stkptr	equ	0xFFC
   923                           pclatu	equ	0xFFB
   924                           pclath	equ	0xFFA
   925                           pcl	equ	0xFF9
   926                           tblptru	equ	0xFF8
   927                           tblptrh	equ	0xFF7
   928                           tblptrl	equ	0xFF6
   929                           tablat	equ	0xFF5
   930                           prodh	equ	0xFF4
   931                           prodl	equ	0xFF3
   932                           indf0	equ	0xFEF
   933                           postinc0	equ	0xFEE
   934                           postdec0	equ	0xFED
   935                           preinc0	equ	0xFEC
   936                           plusw0	equ	0xFEB
   937                           fsr0h	equ	0xFEA
   938                           fsr0l	equ	0xFE9
   939                           wreg	equ	0xFE8
   940                           indf1	equ	0xFE7
   941                           postinc1	equ	0xFE6
   942                           postdec1	equ	0xFE5
   943                           preinc1	equ	0xFE4
   944                           plusw1	equ	0xFE3
   945                           fsr1h	equ	0xFE2
   946                           fsr1l	equ	0xFE1
   947                           bsr	equ	0xFE0
   948                           indf2	equ	0xFDF
   949                           postinc2	equ	0xFDE
   950                           postdec2	equ	0xFDD
   951                           preinc2	equ	0xFDC
   952                           plusw2	equ	0xFDB
   953                           fsr2h	equ	0xFDA
   954                           fsr2l	equ	0xFD9
   955                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_initUART1
    _initUART1->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1089
                                             24 COMRAM     1     1      0
                          _initUART1
                              _print
                            _setGPIO
   _set_internal_oscillator_with_PLL
 ---------------------------------------------------------------------------------
 (1) _set_internal_oscillator_with_PLL                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setGPIO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUART1                                           10     6      4    1074
                                             14 COMRAM    10     6      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     908
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initUART1
     ___aldiv
   _print
   _setGPIO
   _set_internal_oscillator_with_PLL

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     19      1D       1       30.5%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1D       9        0.0%
DATA                 0      0      1D      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Feb 28 22:36:31 2022

                                       l90 7DDC                                         l87 7DE8  
                                       l97 7DFA                                         u70 7E08  
                                       u71 7E04                                        l100 7E0C  
                                      l103 7EF2                                        l215 7FFE  
                                      l931 7F06                                        l941 7F3C  
                                      l933 7F16                                        l861 7E08  
                                      l853 7DDE                                        l951 7F84  
                                      l943 7F4C                                        l935 7F1A  
                                      l927 7EF4                                        l855 7DE6  
                                      l961 7FC8                                        l953 7F8E  
                                      l945 7F62                                        l937 7F28  
                                      l929 7EF8                                        l857 7DD6  
                                      l955 7FAC                                        l947 7F6A  
                                      l963 7FCE                                        l939 7F38  
                                      l971 7E66                                        l859 7DFA  
                                      l965 7FDE                                        l957 7FBC  
                                      l949 7F76                                        l981 7EEE  
                                      l973 7E80                                        l967 7FEE  
                                      l959 7FBE                                        l983 7EF0  
                                      l975 7EE4                                        l977 7EE8  
                                      l979 7EEC                                        _GIE 007F97  
                                      l999 7E0E                                        u120 7F06  
                                      u121 7F02                                        u130 7F28  
                                      u131 7F24                                        u140 7F62  
                                      u141 7F5E                                        u150 7F84  
                                      u151 7F80                                        u207 7E50  
                                      u160 7FAC                                        u161 7FA8  
                                      u170 7FDE                                        u171 7FDA  
                                      u180 7E38                                        u181 7E34  
                                      u197 7E40                                        wreg 000FE8  
                                     l1001 7E12                                       l1011 7E48  
                                     l1003 7E16                                       l1013 7E58  
                                     l1005 7E2A                                       l1007 7E38  
                                     l1009 7E3A                                       _PEIE 007F96  
                                     _TX91 007D66                                       _TX92 007B96  
                                     _main 7E0E                                       start 0000  
                             ___param_bank 000000                            __end_of___aldiv 8000  
                                    ?_main 0001                                      _ANSA5 0079C5  
                                    _ANSC6 0079D6                                      _ANSC7 0079D7  
                                    _BRGH1 007D62                                      _BRGH2 007B92  
                                    _CREN1 007D5C                                      _CREN2 007B8C  
                                    _RC1IE 007CED                                      _RC1IF 007CF5  
                                    _RC2IE 007D1D                                      _RC2IF 007D25  
                                    _PLLEN 007CDE                                      _SPEN1 007D5F  
                                    _SPEN2 007B8F                                      _TRMT1 007D61  
                                    _TRMT2 007B91                                      _TXEN1 007D65  
                                    _TXEN2 007B95                                      _SYNC1 007D64  
                                    _SYNC2 007B94                            __end_of_setGPIO 7DDE  
                                    _print 7DF8                              _initUART1$912 0013  
                                    status 000FD8                            __initialization 7DEA  
                             __end_of_main 7E66                                     ??_main 0019  
                            __activetblptr 000000                                     _BRG161 007DC3  
                                   _BRG162 007B83                                     ?_print 0001  
                                   _RCREG1 000FAE                                     _RCREG2 000F74  
                                   _SENDB1 007D63                                     _SENDB2 007B93  
                                   _SPBRG1 000FAF                                     _SPBRG2 000F75  
                                   _TRISA5 007C95                                     _TRISC6 007CA6  
                                   _TRISC7 007CA7                                     _TXREG1 000FAD  
                                   _TXREG2 000F73                                  ??___aldiv 0009  
                                   isa$std 000001                                  ??_setGPIO 0001  
                               __accesstop 0060                    __end_of__initialization 7DF2  
                            ___rparam_used 000001                             __pcstackCOMRAM 0001  
                            __end_of_print 7E0E                                    ??_print 0001  
                       __size_of_initUART1 008E                                    _SPBRGH1 000FB0  
                                  _SPBRGH2 000F76                         initUART1@baud_rate 000F  
                                  __Hparam 0000                                    __Lparam 0000  
                                  ___aldiv 7EF4                                    __pcinit 7DEA  
                        __end_of_initUART1 7EF4                                    __ramtop 0600  
                                  __ptext0 7E0E                                    __ptext1 7DDE  
                                  __ptext2 7DD6                                    __ptext3 7DF8  
                                  __ptext4 7E66                                    __ptext5 7EF4  
                                  _setGPIO 7DD6                           ___aldiv@dividend 0001  
                     end_of_initialization 7DF2                           ___aldiv@quotient 000B  
                                _PORTAbits 000F80                              initUART1@num1 0017  
                      start_initialization 7DEA   __end_of_set_internal_oscillator_with_PLL 7DEA  
__size_of_set_internal_oscillator_with_PLL 000C         ??_set_internal_oscillator_with_PLL 0001  
        ?_set_internal_oscillator_with_PLL 0001           _set_internal_oscillator_with_PLL 7DDE  
                              __pbssCOMRAM 001A                                   ?___aldiv 0001  
                                 ?_setGPIO 0001                                  _initUART1 7E66  
                           __size_of_print 0016                                  _received2 001A  
                          ___aldiv@divisor 0005                            ___aldiv@counter 0009  
                                _uartdata2 001B                                 print@value 0001  
                               ?_initUART1 000F                                   __Hrparam 0000  
                                 __Lrparam 0000                           __size_of___aldiv 010C  
                         __size_of_setGPIO 0008                              __size_of_main 0058  
                                 _received 001C                                   isa$xinst 000000  
                                 _uartdata 001D                                ??_initUART1 0013  
                               _OSCCONbits 000FD3                               ___aldiv@sign 000A  
