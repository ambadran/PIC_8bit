

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Mar 14 09:42:57 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77  0000                     
    78                           ; Version 2.40
    79                           ; Generated 17/11/2021 GMT
    80                           ; 
    81                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F45K22 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK0
   115  003DCC                     __pidataBANK0:
   116                           	callstack 0
   117                           
   118                           ;initializer for send_ACCEL@F6416
   119  003DCC  58                 	db	88
   120  003DCD  59                 	db	89
   121  003DCE  5A                 	db	90
   122                           
   123                           ;initializer for send_GYRO@F6410
   124  003DCF  58                 	db	88
   125  003DD0  59                 	db	89
   126  003DD1  5A                 	db	90
   127                           
   128                           	psect	idataBANK1
   129  003D00                     __pidataBANK1:
   130                           	callstack 0
   131                           
   132                           ;initializer for _accel_sensitivity
   133  003D00  0000               	dw	0
   134  003D02  4680               	dw	18048
   135  003D04  0000               	dw	0
   136  003D06  4600               	dw	17920
   137  003D08  0000               	dw	0
   138  003D0A  4580               	dw	17792
   139  003D0C  0000               	dw	0
   140  003D0E  4500               	dw	17664
   141                           
   142                           ;initializer for _gyro_sensitivity
   143  003D10  0000               	dw	0
   144  003D12  4303               	dw	17155
   145  003D14  0000               	dw	0
   146  003D16  4283               	dw	17027
   147  003D18  3333               	dw	13107
   148  003D1A  4203               	dw	16899
   149  003D1C  3333               	dw	13107
   150  003D1E  4183               	dw	16771
   151                           
   152                           	psect	nvBANK0
   153  0000EF                     __pnvBANK0:
   154                           	callstack 0
   155  0000EF                     _gyro_range:
   156                           	callstack 0
   157  0000EF                     	ds	1
   158  0000F0                     _accel_range:
   159                           	callstack 0
   160  0000F0                     	ds	1
   161  0000                     _ANSELA	set	3896
   162  0000                     _ANSD0	set	31192
   163  0000                     _ANSC4	set	31188
   164  0000                     _ANSC3	set	31187
   165  0000                     _ANSC7	set	31191
   166  0000                     _ANSC6	set	31190
   167  0000                     _ANSD2	set	31194
   168  0000                     _ANSD1	set	31193
   169  0000                     _SSP2STATbits	set	3949
   170  0000                     _SSP2BUF	set	3951
   171  0000                     _SSP2ADD	set	3950
   172  0000                     _SSP2STAT	set	3949
   173  0000                     _SSP2CON2	set	3947
   174  0000                     _SSP2CON1bits	set	3948
   175  0000                     _SSP1STATbits	set	4039
   176  0000                     _SSP1BUF	set	4041
   177  0000                     _SSP1ADD	set	4040
   178  0000                     _SSP1STAT	set	4039
   179  0000                     _SSP1CON2	set	4037
   180  0000                     _SSP1CON1bits	set	4038
   181  0000                     _RCREG2	set	3956
   182  0000                     _SPBRG2	set	3957
   183  0000                     _SPBRGH2	set	3958
   184  0000                     _TXREG2	set	3955
   185  0000                     _RCREG1	set	4014
   186  0000                     _SPBRG1	set	4015
   187  0000                     _SPBRGH1	set	4016
   188  0000                     _TXREG1	set	4013
   189  0000                     _PORTDbits	set	3971
   190  0000                     _OSCCONbits	set	4051
   191  0000                     _SSP2IF	set	32039
   192  0000                     _SSP2IE	set	32031
   193  0000                     _RCEN2	set	31579
   194  0000                     _ACKSTAT2	set	31582
   195  0000                     _ACKEN2	set	31580
   196  0000                     _ACKDT2	set	31581
   197  0000                     _RSEN2	set	31577
   198  0000                     _PEN2	set	31578
   199  0000                     _SEN2	set	31576
   200  0000                     _TRISD0	set	31912
   201  0000                     _SSP1IF	set	31987
   202  0000                     _SSP1IE	set	31979
   203  0000                     _RCEN1	set	32299
   204  0000                     _ACKSTAT1	set	32302
   205  0000                     _ACKEN1	set	32300
   206  0000                     _ACKDT1	set	32301
   207  0000                     _RSEN1	set	32297
   208  0000                     _PEN1	set	32298
   209  0000                     _SEN1	set	32296
   210  0000                     _TRISC4	set	31908
   211  0000                     _TRISC3	set	31907
   212  0000                     _RC2IF	set	32037
   213  0000                     _RC2IE	set	32029
   214  0000                     _BRG162	set	31619
   215  0000                     _BRGH2	set	31634
   216  0000                     _SENDB2	set	31635
   217  0000                     _TX92	set	31638
   218  0000                     _SPEN2	set	31631
   219  0000                     _SYNC2	set	31636
   220  0000                     _CREN2	set	31628
   221  0000                     _TXEN2	set	31637
   222  0000                     _TRMT2	set	31633
   223  0000                     _RC1IF	set	31989
   224  0000                     _RC1IE	set	31981
   225  0000                     _PEIE	set	32662
   226  0000                     _GIE	set	32663
   227  0000                     _BRG161	set	32195
   228  0000                     _BRGH1	set	32098
   229  0000                     _TRISC7	set	31911
   230  0000                     _TRISC6	set	31910
   231  0000                     _SENDB1	set	32099
   232  0000                     _TX91	set	32102
   233  0000                     _SPEN1	set	32095
   234  0000                     _SYNC1	set	32100
   235  0000                     _CREN1	set	32092
   236  0000                     _TXEN1	set	32101
   237  0000                     _TRMT1	set	32097
   238  0000                     _TRISD2	set	31914
   239  0000                     _TRISD1	set	31913
   240  0000                     _PLLEN	set	31966
   241                           
   242                           	psect	smallconst
   243  000600                     __psmallconst:
   244                           	callstack 0
   245  000600  00                 	db	0
   246  000601                     STR_2:
   247  000601  41                 	db	65	;'A'
   248  000602  5F                 	db	95	;'_'
   249  000603  25                 	db	37
   250  000604  63                 	db	99	;'c'
   251  000605  3A                 	db	58	;':'
   252  000606  20                 	db	32
   253  000607  25                 	db	37
   254  000608  2E                 	db	46
   255  000609  32                 	db	50	;'2'
   256  00060A  66                 	db	102	;'f'
   257  00060B  0A                 	db	10
   258  00060C  00                 	db	0
   259  00060D                     STR_1:
   260  00060D  47                 	db	71	;'G'
   261  00060E  5F                 	db	95	;'_'
   262  00060F  25                 	db	37
   263  000610  63                 	db	99	;'c'
   264  000611  3A                 	db	58	;':'
   265  000612  20                 	db	32
   266  000613  25                 	db	37
   267  000614  2E                 	db	46
   268  000615  32                 	db	50	;'2'
   269  000616  66                 	db	102	;'f'
   270  000617  0A                 	db	10
   271  000618  00                 	db	0
   272  000619                     STR_3:
   273  000619  54                 	db	84	;'T'
   274  00061A  45                 	db	69	;'E'
   275  00061B  4D                 	db	77	;'M'
   276  00061C  50                 	db	80	;'P'
   277  00061D  3A                 	db	58	;':'
   278  00061E  20                 	db	32
   279  00061F  25                 	db	37
   280  000620  2E                 	db	46
   281  000621  32                 	db	50	;'2'
   282  000622  6C                 	db	108	;'l'
   283  000623  66                 	db	102	;'f'
   284  000624  00                 	db	0
   285  000625                     STR_4:
   286  000625  49                 	db	73	;'I'
   287  000626  4E                 	db	78	;'N'
   288  000627  46                 	db	70	;'F'
   289  000628  00                 	db	0
   290  000629                     STR_8:
   291  000629  4E                 	db	78	;'N'
   292  00062A  41                 	db	65	;'A'
   293  00062B  4E                 	db	78	;'N'
   294  00062C  00                 	db	0
   295  00062D                     STR_5:
   296  00062D  69                 	db	105	;'i'
   297  00062E  6E                 	db	110	;'n'
   298  00062F  66                 	db	102	;'f'
   299  000630  00                 	db	0
   300  000631                     STR_9:
   301  000631  6E                 	db	110	;'n'
   302  000632  61                 	db	97	;'a'
   303  000633  6E                 	db	110	;'n'
   304  000634  00                 	db	0
   305  000635  00                 	db	0	; dummy byte at the end
   306  0000                     
   307                           ; #config settings
   308                           
   309                           	psect	cinit
   310  00378E                     __pcinit:
   311                           	callstack 0
   312  00378E                     start_initialization:
   313                           	callstack 0
   314  00378E                     __initialization:
   315                           	callstack 0
   316                           
   317                           ; Initialize objects allocated to BANK1 (32 bytes)
   318                           ; load TBLPTR registers with __pidataBANK1
   319  00378E  0E00               	movlw	low __pidataBANK1
   320  003790  6EF6               	movwf	tblptrl,c
   321  003792  0E3D               	movlw	high __pidataBANK1
   322  003794  6EF7               	movwf	tblptrh,c
   323  003796  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   324  003798  6EF8               	movwf	tblptru,c
   325  00379A  EE01  F050         	lfsr	0,__pdataBANK1
   326  00379E  EE10 F020          	lfsr	1,32
   327  0037A2                     copy_data0:
   328  0037A2  0009               	tblrd		*+
   329  0037A4  CFF5 FFEE          	movff	tablat,postinc0
   330  0037A8  50E5               	movf	postdec1,w,c
   331  0037AA  50E1               	movf	fsr1l,w,c
   332  0037AC  E1FA               	bnz	copy_data0
   333                           
   334                           ; Initialize objects allocated to BANK0 (6 bytes)
   335                           ; load TBLPTR registers with __pidataBANK0
   336  0037AE  0ECC               	movlw	low __pidataBANK0
   337  0037B0  6EF6               	movwf	tblptrl,c
   338  0037B2  0E3D               	movlw	high __pidataBANK0
   339  0037B4  6EF7               	movwf	tblptrh,c
   340  0037B6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   341  0037B8  6EF8               	movwf	tblptru,c
   342  0037BA  EE00  F0E9         	lfsr	0,__pdataBANK0
   343  0037BE  EE10 F006          	lfsr	1,6
   344  0037C2                     copy_data1:
   345  0037C2  0009               	tblrd		*+
   346  0037C4  CFF5 FFEE          	movff	tablat,postinc0
   347  0037C8  50E5               	movf	postdec1,w,c
   348  0037CA  50E1               	movf	fsr1l,w,c
   349  0037CC  E1FA               	bnz	copy_data1
   350                           
   351                           ; Clear objects allocated to BANK1 (80 bytes)
   352  0037CE  EE01  F000         	lfsr	0,__pbssBANK1
   353  0037D2  0E50               	movlw	80
   354  0037D4                     clear_0:
   355  0037D4  6AEE               	clrf	postinc0,c
   356  0037D6  06E8               	decf	wreg,f,c
   357  0037D8  E1FD               	bnz	clear_0
   358                           
   359                           ; Clear objects allocated to BANK0 (36 bytes)
   360  0037DA  EE00  F0C5         	lfsr	0,__pbssBANK0
   361  0037DE  0E24               	movlw	36
   362  0037E0                     clear_1:
   363  0037E0  6AEE               	clrf	postinc0,c
   364  0037E2  06E8               	decf	wreg,f,c
   365  0037E4  E1FD               	bnz	clear_1
   366                           
   367                           ; Clear objects allocated to COMRAM (1 bytes)
   368  0037E6  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   369  0037E8                     end_of_initialization:
   370                           	callstack 0
   371  0037E8                     __end_of__initialization:
   372                           	callstack 0
   373  0037E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   374  0037EA  6EF8               	movwf	tblptru,c
   375  0037EC  0100               	movlb	0
   376  0037EE  EF20  F01A         	goto	_main	;jump to C main() function
   377                           
   378                           	psect	bssCOMRAM
   379  00005F                     __pbssCOMRAM:
   380                           	callstack 0
   381  00005F                     _uartdata:
   382                           	callstack 0
   383  00005F                     	ds	1
   384                           
   385                           	psect	bssBANK0
   386  0000C5                     __pbssBANK0:
   387                           	callstack 0
   388  0000C5                     _gyro:
   389                           	callstack 0
   390  0000C5                     	ds	6
   391  0000CB                     _accel:
   392                           	callstack 0
   393  0000CB                     	ds	6
   394  0000D1                     floorf@F527:
   395                           	callstack 0
   396  0000D1                     	ds	4
   397  0000D5                     ___fpclassifyf@F465:
   398                           	callstack 0
   399  0000D5                     	ds	4
   400  0000D9                     _nout:
   401                           	callstack 0
   402  0000D9                     	ds	2
   403  0000DB                     _width:
   404                           	callstack 0
   405  0000DB                     	ds	2
   406  0000DD                     _prec:
   407                           	callstack 0
   408  0000DD                     	ds	2
   409  0000DF                     _flags:
   410                           	callstack 0
   411  0000DF                     	ds	2
   412  0000E1                     _temp:
   413                           	callstack 0
   414  0000E1                     	ds	2
   415  0000E3                     _test:
   416                           	callstack 0
   417  0000E3                     	ds	2
   418  0000E5                     _start:
   419                           	callstack 0
   420  0000E5                     	ds	1
   421  0000E6                     _received2:
   422                           	callstack 0
   423  0000E6                     	ds	1
   424  0000E7                     _uartdata2:
   425                           	callstack 0
   426  0000E7                     	ds	1
   427  0000E8                     _received:
   428                           	callstack 0
   429  0000E8                     	ds	1
   430                           
   431                           	psect	dataBANK0
   432  0000E9                     __pdataBANK0:
   433                           	callstack 0
   434  0000E9                     send_ACCEL@F6416:
   435                           	callstack 0
   436  0000E9                     	ds	3
   437  0000EC                     send_GYRO@F6410:
   438                           	callstack 0
   439  0000EC                     	ds	3
   440                           
   441                           	psect	bssBANK1
   442  000100                     __pbssBANK1:
   443                           	callstack 0
   444  000100                     _dbuf:
   445                           	callstack 0
   446  000100                     	ds	80
   447                           
   448                           	psect	dataBANK1
   449  000150                     __pdataBANK1:
   450                           	callstack 0
   451  000150                     _accel_sensitivity:
   452                           	callstack 0
   453  000150                     	ds	16
   454  000160                     _gyro_sensitivity:
   455                           	callstack 0
   456  000160                     	ds	16
   457                           
   458                           	psect	cstackBANK0
   459  000060                     __pcstackBANK0:
   460                           	callstack 0
   461  000060                     _efgtoa$1528:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x0
   465  000060                     	ds	2
   466  000062                     _efgtoa$1529:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x2
   470  000062                     	ds	2
   471  000064                     _efgtoa$1534:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x4
   475  000064                     	ds	2
   476  000066                     _efgtoa$1538:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x6
   480  000066                     	ds	2
   481  000068                     _efgtoa$1539:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x8
   485  000068                     	ds	2
   486  00006A                     _efgtoa$1540:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0xA
   490  00006A                     	ds	2
   491  00006C                     efgtoa@t:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0xC
   495  00006C                     	ds	2
   496  00006E                     efgtoa@pp:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0xE
   500  00006E                     	ds	2
   501  000070                     efgtoa@ne:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x10
   505  000070                     	ds	2
   506  000072                     efgtoa@m:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x12
   510  000072                     	ds	2
   511  000074                     efgtoa@ou:
   512                           	callstack 0
   513                           
   514                           ; 4 bytes @ 0x14
   515  000074                     	ds	4
   516  000078                     efgtoa@d:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x18
   520  000078                     	ds	2
   521  00007A                     efgtoa@sign:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x1A
   525  00007A                     	ds	2
   526  00007C                     efgtoa@p:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x1C
   530  00007C                     	ds	2
   531  00007E                     efgtoa@w:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x1E
   535  00007E                     	ds	2
   536  000080                     efgtoa@nmode:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x20
   540  000080                     	ds	1
   541  000081                     efgtoa@mode:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x21
   545  000081                     	ds	1
   546  000082                     efgtoa@h:
   547                           	callstack 0
   548                           
   549                           ; 4 bytes @ 0x22
   550  000082                     	ds	4
   551  000086                     efgtoa@l:
   552                           	callstack 0
   553                           
   554                           ; 4 bytes @ 0x26
   555  000086                     	ds	4
   556  00008A                     efgtoa@i:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x2A
   560  00008A                     	ds	2
   561  00008C                     efgtoa@g:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x2C
   565  00008C                     	ds	4
   566  000090                     efgtoa@e:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x30
   570  000090                     	ds	2
   571  000092                     efgtoa@n:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x32
   575  000092                     	ds	2
   576  000094                     efgtoa@u:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x34
   580  000094                     	ds	4
   581  000098                     _vfpfcnvrt$1554:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x38
   585  000098                     	ds	2
   586  00009A                     _vfpfcnvrt$1559:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x3A
   590  00009A                     	ds	2
   591  00009C                     vfpfcnvrt@f:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0x3C
   595  00009C                     	ds	4
   596  0000A0                     vfpfcnvrt@ct:
   597                           	callstack 0
   598                           
   599                           ; 3 bytes @ 0x40
   600  0000A0                     	ds	3
   601  0000A3                     vfpfcnvrt@c:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x43
   605  0000A3                     	ds	1
   606  0000A4                     ?_sprintf:
   607                           	callstack 0
   608  0000A4                     sprintf@s:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x44
   612  0000A4                     	ds	2
   613  0000A6                     sprintf@fmt:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x46
   617  0000A6                     	ds	8
   618  0000AE                     sprintf@ap:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x4E
   622  0000AE                     	ds	2
   623  0000B0                     sprintf@f:
   624                           	callstack 0
   625                           
   626                           ; 6 bytes @ 0x50
   627  0000B0                     	ds	6
   628  0000B6                     send_GYRO@message:
   629                           	callstack 0
   630  0000B6                     send_ACCEL@message:
   631                           	callstack 0
   632  0000B6                     send_TEMP@message:
   633                           	callstack 0
   634                           
   635                           ; 9 bytes @ 0x56
   636  0000B6                     	ds	9
   637  0000BF                     send_GYRO@axes:
   638                           	callstack 0
   639  0000BF                     send_ACCEL@axes:
   640                           	callstack 0
   641                           
   642                           ; 3 bytes @ 0x5F
   643  0000BF                     	ds	3
   644  0000C2                     send_GYRO@axe:
   645                           	callstack 0
   646  0000C2                     send_ACCEL@axe:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x62
   650  0000C2                     	ds	1
   651  0000C3                     ??_main:
   652                           
   653                           ; 1 bytes @ 0x63
   654  0000C3                     	ds	2
   655                           
   656                           	psect	cstackCOMRAM
   657  000001                     __pcstackCOMRAM:
   658                           	callstack 0
   659  000001                     ??_wait1:
   660  000001                     ?_strlen:
   661                           	callstack 0
   662  000001                     ?___fpclassifyf:
   663                           	callstack 0
   664  000001                     ?_isupper:
   665                           	callstack 0
   666  000001                     ?_isdigit:
   667                           	callstack 0
   668  000001                     ?_strncmp:
   669                           	callstack 0
   670  000001                     ?_isspace:
   671                           	callstack 0
   672  000001                     ?___wmul:
   673                           	callstack 0
   674  000001                     ?___awdiv:
   675                           	callstack 0
   676  000001                     ?___awmod:
   677                           	callstack 0
   678  000001                     ?___flmul:
   679                           	callstack 0
   680  000001                     ?___aldiv:
   681                           	callstack 0
   682  000001                     ?___flneg:
   683                           	callstack 0
   684  000001                     ?___fltol:
   685                           	callstack 0
   686  000001                     ?___xxtofl:
   687                           	callstack 0
   688  000001                     print@value:
   689                           	callstack 0
   690  000001                     ___wmul@multiplier:
   691                           	callstack 0
   692  000001                     ___awdiv@dividend:
   693                           	callstack 0
   694  000001                     ___awmod@dividend:
   695                           	callstack 0
   696  000001                     isdigit@c:
   697                           	callstack 0
   698  000001                     isspace@c:
   699                           	callstack 0
   700  000001                     isupper@c:
   701                           	callstack 0
   702  000001                     fputc@c:
   703                           	callstack 0
   704  000001                     strcpy@dest:
   705                           	callstack 0
   706  000001                     strlen@s:
   707                           	callstack 0
   708  000001                     strncmp@_l:
   709                           	callstack 0
   710  000001                     ___aldiv@dividend:
   711                           	callstack 0
   712  000001                     ___fleq@ff1:
   713                           	callstack 0
   714  000001                     ___flneg@f1:
   715                           	callstack 0
   716  000001                     ___fltol@f1:
   717                           	callstack 0
   718  000001                     ___flmul@b:
   719                           	callstack 0
   720  000001                     ___xxtofl@val:
   721                           	callstack 0
   722  000001                     ___fpclassifyf@x:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x0
   726  000001                     	ds	1
   727  000002                     rawSendI2C1@data:
   728                           	callstack 0
   729  000002                     rawReadI2C1@Data:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x1
   733  000002                     	ds	1
   734  000003                     ??_isupper:
   735  000003                     ??_isdigit:
   736  000003                     ??_isspace:
   737  000003                     sendI2C1@address:
   738                           	callstack 0
   739  000003                     readI2C1@address:
   740                           	callstack 0
   741  000003                     ___wmul@multiplicand:
   742                           	callstack 0
   743  000003                     ___awdiv@divisor:
   744                           	callstack 0
   745  000003                     ___awmod@divisor:
   746                           	callstack 0
   747  000003                     fputc@fp:
   748                           	callstack 0
   749  000003                     strcpy@src:
   750                           	callstack 0
   751  000003                     strlen@a:
   752                           	callstack 0
   753  000003                     strncmp@_r:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x2
   757  000003                     	ds	1
   758  000004                     sendI2C1@data:
   759                           	callstack 0
   760  000004                     readI2C1@data:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0x3
   764  000004                     	ds	1
   765  000005                     ??_fputc:
   766  000005                     ??___fpclassifyf:
   767  000005                     ??_strcpy:
   768  000005                     ??___fltol:
   769  000005                     ??___xxtofl:
   770  000005                     sendI2C1@module_address:
   771                           	callstack 0
   772  000005                     readI2C1@module_address:
   773                           	callstack 0
   774  000005                     ___awdiv@counter:
   775                           	callstack 0
   776  000005                     ___awmod@counter:
   777                           	callstack 0
   778  000005                     ___wmul@product:
   779                           	callstack 0
   780  000005                     strncmp@n:
   781                           	callstack 0
   782  000005                     ___aldiv@divisor:
   783                           	callstack 0
   784  000005                     ___fleq@ff2:
   785                           	callstack 0
   786  000005                     ___flmul@a:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x4
   790  000005                     	ds	1
   791  000006                     init_MPU6050@gyro_range_input:
   792                           	callstack 0
   793  000006                     ___awdiv@sign:
   794                           	callstack 0
   795  000006                     ___awmod@sign:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x5
   799  000006                     	ds	1
   800  000007                     ??_strncmp:
   801  000007                     ??_init_MPU6050:
   802  000007                     ?_tolower:
   803                           	callstack 0
   804  000007                     _isspace$1624:
   805                           	callstack 0
   806  000007                     ___awdiv@quotient:
   807                           	callstack 0
   808  000007                     strcpy@s:
   809                           	callstack 0
   810  000007                     tolower@c:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x6
   814  000007                     	ds	1
   815  000008                     ?_atoi:
   816                           	callstack 0
   817  000008                     atoi@s:
   818                           	callstack 0
   819  000008                     strncmp@l:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x7
   823  000008                     	ds	1
   824  000009                     ??___flmul:
   825  000009                     ??_tolower:
   826  000009                     ??___fleq:
   827  000009                     init_MPU6050@accel_range_input:
   828                           	callstack 0
   829  000009                     ___aldiv@counter:
   830                           	callstack 0
   831  000009                     ___fltol@sign1:
   832                           	callstack 0
   833  000009                     ___xxtofl@sign:
   834                           	callstack 0
   835  000009                     ___fpclassifyf@e:
   836                           	callstack 0
   837  000009                     strcpy@d:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x8
   841  000009                     	ds	1
   842  00000A                     ??_atoi:
   843  00000A                     ?_ctoa:
   844                           	callstack 0
   845  00000A                     init_MPU6050@value:
   846                           	callstack 0
   847  00000A                     ___aldiv@sign:
   848                           	callstack 0
   849  00000A                     ___fltol@exp1:
   850                           	callstack 0
   851  00000A                     ___xxtofl@exp:
   852                           	callstack 0
   853  00000A                     ctoa@fp:
   854                           	callstack 0
   855  00000A                     fputs@s:
   856                           	callstack 0
   857  00000A                     strncmp@r:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x9
   861  00000A                     	ds	1
   862  00000B                     init_MPU6050@value2:
   863                           	callstack 0
   864  00000B                     ___aldiv@quotient:
   865                           	callstack 0
   866  00000B                     ___xxtofl@arg:
   867                           	callstack 0
   868  00000B                     ___fpclassifyf@u:
   869                           	callstack 0
   870                           
   871                           ; 4 bytes @ 0xA
   872  00000B                     	ds	1
   873  00000C                     ctoa@c:
   874                           	callstack 0
   875  00000C                     fputs@fp:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0xB
   879  00000C                     	ds	1
   880  00000D                     ??_ctoa:
   881  00000D                     ___flmul@sign:
   882                           	callstack 0
   883  00000D                     _tolower$1688:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0xC
   887  00000D                     	ds	1
   888  00000E                     fputs@c:
   889                           	callstack 0
   890  00000E                     ctoa@l:
   891                           	callstack 0
   892  00000E                     atoi@neg:
   893                           	callstack 0
   894  00000E                     ___flmul@grs:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0xD
   898  00000E                     	ds	1
   899  00000F                     ?___fldiv:
   900                           	callstack 0
   901  00000F                     fputs@i:
   902                           	callstack 0
   903  00000F                     initUART1@baud_rate:
   904                           	callstack 0
   905  00000F                     init_I2C_Master1@baudRate:
   906                           	callstack 0
   907  00000F                     ___fldiv@b:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0xE
   911  00000F                     	ds	1
   912  000010                     ctoa@w:
   913                           	callstack 0
   914  000010                     _atoi$1593:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0xF
   918  000010                     	ds	1
   919  000011                     ?_pad:
   920                           	callstack 0
   921  000011                     pad@fp:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x10
   925  000011                     	ds	1
   926  000012                     ___flmul@aexp:
   927                           	callstack 0
   928  000012                     _atoi$1595:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x11
   932  000012                     	ds	1
   933  000013                     ___flmul@bexp:
   934                           	callstack 0
   935  000013                     pad@buf:
   936                           	callstack 0
   937  000013                     ___fldiv@a:
   938                           	callstack 0
   939  000013                     _initUART1$2026:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0x12
   943  000013                     	ds	1
   944  000014                     _atoi$1594:
   945                           	callstack 0
   946  000014                     ___flmul@prod:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x13
   950  000014                     	ds	1
   951  000015                     pad@p:
   952                           	callstack 0
   953  000015                     atoi@n:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x14
   957  000015                     	ds	2
   958  000017                     ??___fldiv:
   959  000017                     ??_pad:
   960  000017                     initUART1@num1:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x16
   964  000017                     	ds	1
   965  000018                     ___flmul@temp:
   966                           	callstack 0
   967  000018                     pad@i:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x17
   971  000018                     	ds	2
   972  00001A                     pad@w:
   973                           	callstack 0
   974  00001A                     ___flge@ff1:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x19
   978  00001A                     	ds	1
   979  00001B                     ___fldiv@rem:
   980                           	callstack 0
   981                           
   982                           ; 4 bytes @ 0x1A
   983  00001B                     	ds	3
   984  00001E                     ___flge@ff2:
   985                           	callstack 0
   986                           
   987                           ; 4 bytes @ 0x1D
   988  00001E                     	ds	1
   989  00001F                     ___fldiv@sign:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x1E
   993  00001F                     	ds	1
   994  000020                     ___fldiv@new_exp:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x1F
   998  000020                     	ds	2
   999  000022                     ??___flge:
  1000  000022                     ___fldiv@grs:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x21
  1004  000022                     	ds	4
  1005  000026                     ___fldiv@bexp:
  1006                           	callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x25
  1009  000026                     	ds	1
  1010  000027                     ___fldiv@aexp:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x26
  1014  000027                     	ds	1
  1015  000028                     ?___fladd:
  1016                           	callstack 0
  1017  000028                     ?_floorf:
  1018                           	callstack 0
  1019  000028                     ?_read_GYRO:
  1020                           	callstack 0
  1021  000028                     ?_read_ACCEL:
  1022                           	callstack 0
  1023  000028                     ___fladd@b:
  1024                           	callstack 0
  1025  000028                     floorf@x:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0x27
  1029  000028                     	ds	4
  1030  00002C                     ??_floorf:
  1031  00002C                     ??_read_GYRO:
  1032  00002C                     ??_read_ACCEL:
  1033  00002C                     ___fladd@a:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x2B
  1037  00002C                     	ds	2
  1038  00002E                     read_GYRO@output:
  1039                           	callstack 0
  1040  00002E                     read_ACCEL@output:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x2D
  1044  00002E                     	ds	2
  1045  000030                     ??___fladd:
  1046  000030                     read_GYRO@axis:
  1047                           	callstack 0
  1048  000030                     read_ACCEL@axis:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x2F
  1052  000030                     	ds	1
  1053  000031                     read_GYRO@output_H:
  1054                           	callstack 0
  1055  000031                     read_ACCEL@output_H:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x30
  1059  000031                     	ds	1
  1060  000032                     read_GYRO@output_L:
  1061                           	callstack 0
  1062  000032                     read_ACCEL@output_L:
  1063                           	callstack 0
  1064  000032                     floorf@m:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x31
  1068  000032                     	ds	2
  1069  000034                     ___fladd@signs:
  1070                           	callstack 0
  1071                           
  1072                           ; 1 bytes @ 0x33
  1073  000034                     	ds	1
  1074  000035                     ___fladd@aexp:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x34
  1078  000035                     	ds	1
  1079  000036                     ___fladd@bexp:
  1080                           	callstack 0
  1081  000036                     floorf@e:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x35
  1085  000036                     	ds	1
  1086  000037                     ___fladd@grs:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x36
  1090  000037                     	ds	1
  1091  000038                     ?___flsub:
  1092                           	callstack 0
  1093  000038                     ?_read_TEMPERATURE:
  1094                           	callstack 0
  1095  000038                     ___flsub@b:
  1096                           	callstack 0
  1097  000038                     floorf@u:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x37
  1101  000038                     	ds	4
  1102  00003C                     ??_read_TEMPERATURE:
  1103  00003C                     ___flsub@a:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x3B
  1107  00003C                     	ds	2
  1108  00003E                     read_TEMPERATURE@output:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x3D
  1112  00003E                     	ds	2
  1113  000040                     ?_efgtoa:
  1114                           	callstack 0
  1115  000040                     read_TEMPERATURE@output_H:
  1116                           	callstack 0
  1117  000040                     efgtoa@fp:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x3F
  1121  000040                     	ds	1
  1122  000041                     read_TEMPERATURE@output_L:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x40
  1126  000041                     	ds	1
  1127  000042                     efgtoa@f:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x41
  1131  000042                     	ds	4
  1132  000046                     efgtoa@c:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x45
  1136  000046                     	ds	1
  1137  000047                     ??_efgtoa:
  1138                           
  1139                           ; 1 bytes @ 0x46
  1140  000047                     	ds	5
  1141  00004C                     ?_vfpfcnvrt:
  1142                           	callstack 0
  1143  00004C                     vfpfcnvrt@fp:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x4B
  1147  00004C                     	ds	2
  1148  00004E                     vfpfcnvrt@fmt:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x4D
  1152  00004E                     	ds	2
  1153  000050                     vfpfcnvrt@ap:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x4F
  1157  000050                     	ds	2
  1158  000052                     ??_vfpfcnvrt:
  1159                           
  1160                           ; 1 bytes @ 0x51
  1161  000052                     	ds	4
  1162  000056                     ?_vfprintf:
  1163                           	callstack 0
  1164  000056                     vfprintf@fp:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x55
  1168  000056                     	ds	2
  1169  000058                     vfprintf@fmt:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x57
  1173  000058                     	ds	2
  1174  00005A                     vfprintf@ap:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x59
  1178  00005A                     	ds	2
  1179  00005C                     vfprintf@cfmt:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x5B
  1183  00005C                     	ds	2
  1184  00005E                     ??_send_GYRO:
  1185  00005E                     ??_send_ACCEL:
  1186  00005E                     
  1187                           ; 1 bytes @ 0x5D
  1188  00005E                     	ds	1
  1189  00005F                     
  1190                           ; 1 bytes @ 0x5E
  1191 ;;
  1192 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1193 ;;
  1194 ;; *************** function _main *****************
  1195 ;; Defined at:
  1196 ;;		line 27 in file "main.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1210 ;;      Params:         0       0       0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0       0       0
  1212 ;;      Temps:          0       2       0       0       0       0       0
  1213 ;;      Totals:         0       2       0       0       0       0       0
  1214 ;;Total ram usage:        2 bytes
  1215 ;; Hardware stack levels required when called: 10
  1216 ;; This function calls:
  1217 ;;		_initUART1
  1218 ;;		_init_I2C_Master1
  1219 ;;		_init_MPU6050
  1220 ;;		_send_ACCELS
  1221 ;;		_send_GYROS
  1222 ;;		_send_TEMP
  1223 ;;		_setGPIO
  1224 ;;		_set_internal_oscillator_with_PLL
  1225 ;; This function is called by:
  1226 ;;		Startup code after reset
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text0
  1231  003440                     __ptext0:
  1232                           	callstack 0
  1233  003440                     _main:
  1234                           	callstack 21
  1235  003440                     
  1236                           ;main.c: 30:     set_internal_oscillator_with_PLL();
  1237  003440  ECCF  F01E         	call	_set_internal_oscillator_with_PLL	;wreg free
  1238                           
  1239                           ;main.c: 33:     setGPIO();
  1240  003444  ECBE  F01E         	call	_setGPIO	;wreg free
  1241  003448                     
  1242                           ;main.c: 36:     initUART1(115200);
  1243  003448  0E00               	movlw	0
  1244  00344A  6E0F               	movwf	initUART1@baud_rate^0,c
  1245  00344C  0EC2               	movlw	194
  1246  00344E  6E10               	movwf	(initUART1@baud_rate+1)^0,c
  1247  003450  0E01               	movlw	1
  1248  003452  6E11               	movwf	(initUART1@baud_rate+2)^0,c
  1249  003454  0E00               	movlw	0
  1250  003456  6E12               	movwf	(initUART1@baud_rate+3)^0,c
  1251  003458  EC80  F01B         	call	_initUART1	;wreg free
  1252  00345C                     
  1253                           ;main.c: 39:     init_I2C_Master1(100000);
  1254  00345C  0EA0               	movlw	160
  1255  00345E  6E0F               	movwf	init_I2C_Master1@baudRate^0,c
  1256  003460  0E86               	movlw	134
  1257  003462  6E10               	movwf	(init_I2C_Master1@baudRate+1)^0,c
  1258  003464  0E01               	movlw	1
  1259  003466  6E11               	movwf	(init_I2C_Master1@baudRate+2)^0,c
  1260  003468  0E00               	movlw	0
  1261  00346A  6E12               	movwf	(init_I2C_Master1@baudRate+3)^0,c
  1262  00346C  EC5D  F01D         	call	_init_I2C_Master1	;wreg free
  1263  003470                     
  1264                           ;main.c: 42:     init_MPU6050(2, 0);
  1265  003470  0E00               	movlw	0
  1266  003472  6E06               	movwf	init_MPU6050@gyro_range_input^0,c
  1267  003474  0E02               	movlw	2
  1268  003476  EC8D  F018         	call	_init_MPU6050
  1269  00347A                     l4956:
  1270                           
  1271                           ;main.c: 47:         if(PORTDbits.RD2) {
  1272  00347A  A483               	btfss	131,2,c	;volatile
  1273  00347C  EF42  F01A         	goto	u5501
  1274  003480  EF44  F01A         	goto	u5500
  1275  003484                     u5501:
  1276  003484  EF5D  F01A         	goto	l4962
  1277  003488                     u5500:
  1278  003488                     
  1279                           ;main.c: 48:             start = ~start;
  1280  003488  0100               	movlb	0	; () banked
  1281  00348A  05E5               	decf	_start& (0+255),w,b
  1282  00348C  A4D8               	btfss	status,2,c
  1283  00348E  EF4B  F01A         	goto	u5511
  1284  003492  EF4E  F01A         	goto	u5510
  1285  003496                     u5511:
  1286  003496  0E01               	movlw	1
  1287  003498  EF4F  F01A         	goto	u5520
  1288  00349C                     u5510:
  1289  00349C  0E00               	movlw	0
  1290  00349E                     u5520:
  1291  00349E  6FE5               	movwf	_start& (0+255),b
  1292  0034A0                     
  1293                           ; BSR set to: 0
  1294                           ;main.c: 49:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1295  0034A0  0E19               	movlw	25
  1296  0034A2  0100               	movlb	0	; () banked
  1297  0034A4  6FC4               	movwf	(??_main+1)& (0+255),b
  1298  0034A6  0E5A               	movlw	90
  1299  0034A8  6FC3               	movwf	??_main& (0+255),b
  1300  0034AA  0EB1               	movlw	177
  1301  0034AC                     u5547:
  1302  0034AC  2EE8               	decfsz	wreg,f,c
  1303  0034AE  D7FE               	bra	u5547
  1304  0034B0  2FC3               	decfsz	??_main& (0+255),f,b
  1305  0034B2  D7FC               	bra	u5547
  1306  0034B4  2FC4               	decfsz	(??_main+1)& (0+255),f,b
  1307  0034B6  D7FA               	bra	u5547
  1308  0034B8  D000               	nop2	
  1309  0034BA                     l4962:
  1310                           
  1311                           ;main.c: 52:         if(start) {
  1312  0034BA  0100               	movlb	0	; () banked
  1313  0034BC  51E5               	movf	_start& (0+255),w,b
  1314  0034BE  B4D8               	btfsc	status,2,c
  1315  0034C0  EF64  F01A         	goto	u5531
  1316  0034C4  EF66  F01A         	goto	u5530
  1317  0034C8                     u5531:
  1318  0034C8  EF3D  F01A         	goto	l4956
  1319  0034CC                     u5530:
  1320  0034CC                     
  1321                           ; BSR set to: 0
  1322                           ;main.c: 53:             send_ACCELS();
  1323  0034CC  ECB4  F01E         	call	_send_ACCELS	;wreg free
  1324                           
  1325                           ;main.c: 54:             send_GYROS();
  1326  0034D0  ECAA  F01E         	call	_send_GYROS	;wreg free
  1327                           
  1328                           ;main.c: 55:             send_TEMP();
  1329  0034D4  EC2F  F01E         	call	_send_TEMP	;wreg free
  1330  0034D8                     
  1331                           ;main.c: 57:             _delay((unsigned long)((150)*(64000000/4000.0)));
  1332  0034D8  0E0D               	movlw	13
  1333  0034DA  0100               	movlb	0	; () banked
  1334  0034DC  6FC4               	movwf	(??_main+1)& (0+255),b
  1335  0034DE  0E2D               	movlw	45
  1336  0034E0  6FC3               	movwf	??_main& (0+255),b
  1337  0034E2  0ED7               	movlw	215
  1338  0034E4                     u5557:
  1339  0034E4  2EE8               	decfsz	wreg,f,c
  1340  0034E6  D7FE               	bra	u5557
  1341  0034E8  2FC3               	decfsz	??_main& (0+255),f,b
  1342  0034EA  D7FC               	bra	u5557
  1343  0034EC  2FC4               	decfsz	(??_main+1)& (0+255),f,b
  1344  0034EE  D7FA               	bra	u5557
  1345  0034F0  D000               	nop2	
  1346  0034F2  EF3D  F01A         	goto	l4956
  1347  0034F6  EF00  F000         	goto	start
  1348  0034FA                     __end_of_main:
  1349                           	callstack 0
  1350                           
  1351 ;; *************** function _set_internal_oscillator_with_PLL *****************
  1352 ;; Defined at:
  1353 ;;		line 11 in file "./oscillator.h"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1367 ;;      Params:         0       0       0       0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0       0       0
  1370 ;;      Totals:         0       0       0       0       0       0       0
  1371 ;;Total ram usage:        0 bytes
  1372 ;; Hardware stack levels used: 1
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text1
  1381  003D9E                     __ptext1:
  1382                           	callstack 0
  1383  003D9E                     _set_internal_oscillator_with_PLL:
  1384                           	callstack 30
  1385  003D9E                     
  1386                           ;./oscillator.h: 14:     OSCCONbits.IRCF = 0b111;
  1387  003D9E  0E70               	movlw	112
  1388  003DA0  12D3               	iorwf	211,f,c	;volatile
  1389                           
  1390                           ;./oscillator.h: 15:     OSCCONbits.SCS = 0b00;
  1391  003DA2  0EFC               	movlw	-4
  1392  003DA4  16D3               	andwf	211,f,c	;volatile
  1393  003DA6                     
  1394                           ;./oscillator.h: 17:     PLLEN = 1;
  1395  003DA6  8C9B               	bsf	3995,6,c	;volatile
  1396  003DA8  0012               	return		;funcret
  1397  003DAA                     __end_of_set_internal_oscillator_with_PLL:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _setGPIO *****************
  1401 ;; Defined at:
  1402 ;;		line 20 in file "./GPIO.h"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1416 ;;      Params:         0       0       0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0
  1419 ;;      Totals:         0       0       0       0       0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_main
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text2
  1430  003D7C                     __ptext2:
  1431                           	callstack 0
  1432  003D7C                     _setGPIO:
  1433                           	callstack 30
  1434  003D7C                     
  1435                           ;./GPIO.h: 23:     TRISD1 = 0;
  1436  003D7C  9295               	bcf	3989,1,c	;volatile
  1437                           
  1438                           ;./GPIO.h: 24:     TRISD2 = 1;
  1439  003D7E  8495               	bsf	3989,2,c	;volatile
  1440                           
  1441                           ;./GPIO.h: 27:     ANSD1 = 0;
  1442  003D80  010F               	movlb	15	; () banked
  1443  003D82  933B               	bcf	59,1,b	;volatile
  1444                           
  1445                           ;./GPIO.h: 28:     ANSD2 = 0;
  1446  003D84  953B               	bcf	59,2,b	;volatile
  1447                           
  1448                           ;./GPIO.h: 30:     PORTDbits.RD1 = 0;
  1449  003D86  9283               	bcf	131,1,c	;volatile
  1450  003D88                     
  1451                           ; BSR set to: 15
  1452                           ;./GPIO.h: 32:     ANSELA = 0x00;
  1453  003D88  0E00               	movlw	0
  1454  003D8A  6F38               	movwf	56,b	;volatile
  1455  003D8C                     
  1456                           ; BSR set to: 15
  1457  003D8C  0012               	return		;funcret
  1458  003D8E                     __end_of_setGPIO:
  1459                           	callstack 0
  1460                           
  1461 ;; *************** function _send_TEMP *****************
  1462 ;; Defined at:
  1463 ;;		line 498 in file "./MPU6050.h"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  message         9   86[BANK0 ] unsigned char [9]
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1477 ;;      Params:         0       0       0       0       0       0       0
  1478 ;;      Locals:         0       9       0       0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0       0       0
  1480 ;;      Totals:         0       9       0       0       0       0       0
  1481 ;;Total ram usage:        9 bytes
  1482 ;; Hardware stack levels used: 1
  1483 ;; Hardware stack levels required when called: 8
  1484 ;; This function calls:
  1485 ;;		_read_TEMPERATURE
  1486 ;;		_sprintf
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text3
  1493  003C5E                     __ptext3:
  1494                           	callstack 0
  1495  003C5E                     _send_TEMP:
  1496                           	callstack 22
  1497  003C5E                     
  1498                           ;./MPU6050.h: 499:     char message[9];;./MPU6050.h: 500:     sprintf(message, "TEMP: %.
      +                          2lf", read_TEMPERATURE());
  1499  003C5E  0EB6               	movlw	low send_TEMP@message
  1500  003C60  0100               	movlb	0	; () banked
  1501  003C62  6FA4               	movwf	sprintf@s& (0+255),b
  1502  003C64  0E00               	movlw	high send_TEMP@message
  1503  003C66  6FA5               	movwf	(sprintf@s+1)& (0+255),b
  1504  003C68  0E19               	movlw	low STR_3
  1505  003C6A  6FA6               	movwf	sprintf@fmt& (0+255),b
  1506  003C6C  0E06               	movlw	high STR_3
  1507  003C6E  6FA7               	movwf	(sprintf@fmt+1)& (0+255),b
  1508  003C70  ECD5  F01A         	call	_read_TEMPERATURE	;wreg free
  1509  003C74  C038  F0A8         	movff	?_read_TEMPERATURE,?_sprintf+4
  1510  003C78  C039  F0A9         	movff	?_read_TEMPERATURE+1,?_sprintf+5
  1511  003C7C  C03A  F0AA         	movff	?_read_TEMPERATURE+2,?_sprintf+6
  1512  003C80  C03B  F0AB         	movff	?_read_TEMPERATURE+3,?_sprintf+7
  1513  003C84  ECE8  F01C         	call	_sprintf	;wreg free
  1514  003C88  0012               	return		;funcret
  1515  003C8A                     __end_of_send_TEMP:
  1516                           	callstack 0
  1517                           
  1518 ;; *************** function _read_TEMPERATURE *****************
  1519 ;; Defined at:
  1520 ;;		line 449 in file "./MPU6050.h"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  output          2   61[COMRAM] int 
  1525 ;;  output_L        1   64[COMRAM] unsigned char 
  1526 ;;  output_H        1   63[COMRAM] unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  4   55[COMRAM] unsigned char 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1536 ;;      Params:         4       0       0       0       0       0       0
  1537 ;;      Locals:         4       0       0       0       0       0       0
  1538 ;;      Temps:          2       0       0       0       0       0       0
  1539 ;;      Totals:        10       0       0       0       0       0       0
  1540 ;;Total ram usage:       10 bytes
  1541 ;; Hardware stack levels used: 1
  1542 ;; Hardware stack levels required when called: 4
  1543 ;; This function calls:
  1544 ;;		___fladd
  1545 ;;		___fldiv
  1546 ;;		___xxtofl
  1547 ;;		_readI2C1
  1548 ;; This function is called by:
  1549 ;;		_send_TEMP
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text4
  1554  0035AA                     __ptext4:
  1555                           	callstack 0
  1556  0035AA                     _read_TEMPERATURE:
  1557                           	callstack 25
  1558  0035AA                     
  1559                           ;./MPU6050.h: 451:     uint8_t output_L = 0;
  1560  0035AA  0E00               	movlw	0
  1561  0035AC  6E41               	movwf	read_TEMPERATURE@output_L^0,c
  1562                           
  1563                           ;./MPU6050.h: 452:     int output = 0;
  1564  0035AE  0E00               	movlw	0
  1565  0035B0  6E3F               	movwf	(read_TEMPERATURE@output+1)^0,c
  1566  0035B2  0E00               	movlw	0
  1567  0035B4  6E3E               	movwf	read_TEMPERATURE@output^0,c
  1568  0035B6                     
  1569                           ;./MPU6050.h: 454:     output_H = readI2C1(0b11010000, 0x41);
  1570  0035B6  0E41               	movlw	65
  1571  0035B8  6E03               	movwf	readI2C1@address^0,c
  1572  0035BA  0ED0               	movlw	208
  1573  0035BC  EC45  F01E         	call	_readI2C1
  1574  0035C0  6E40               	movwf	read_TEMPERATURE@output_H^0,c
  1575  0035C2                     
  1576                           ;./MPU6050.h: 455:     output_L = readI2C1(0b11010000, 0x42);
  1577  0035C2  0E42               	movlw	66
  1578  0035C4  6E03               	movwf	readI2C1@address^0,c
  1579  0035C6  0ED0               	movlw	208
  1580  0035C8  EC45  F01E         	call	_readI2C1
  1581  0035CC  6E41               	movwf	read_TEMPERATURE@output_L^0,c
  1582  0035CE                     
  1583                           ;./MPU6050.h: 456:     output = ((int)output_H << 8) | (int)output_L;
  1584  0035CE  5041               	movf	read_TEMPERATURE@output_L^0,w,c
  1585  0035D0  C040  F03C         	movff	read_TEMPERATURE@output_H,??_read_TEMPERATURE
  1586  0035D4  6A3D               	clrf	(??_read_TEMPERATURE+1)^0,c
  1587  0035D6  C03C  F03D         	movff	??_read_TEMPERATURE,??_read_TEMPERATURE+1
  1588  0035DA  6A3C               	clrf	??_read_TEMPERATURE^0,c
  1589  0035DC  103C               	iorwf	??_read_TEMPERATURE^0,w,c
  1590  0035DE  6E3E               	movwf	read_TEMPERATURE@output^0,c
  1591  0035E0  503D               	movf	(??_read_TEMPERATURE+1)^0,w,c
  1592  0035E2  6E3F               	movwf	(read_TEMPERATURE@output+1)^0,c
  1593  0035E4                     
  1594                           ;./MPU6050.h: 458:     return ((double)output/340.0) + 36.53;
  1595  0035E4  0E00               	movlw	0
  1596  0035E6  6E13               	movwf	___fldiv@a^0,c
  1597  0035E8  0E00               	movlw	0
  1598  0035EA  6E14               	movwf	(___fldiv@a+1)^0,c
  1599  0035EC  0EAA               	movlw	170
  1600  0035EE  6E15               	movwf	(___fldiv@a+2)^0,c
  1601  0035F0  0E43               	movlw	67
  1602  0035F2  6E16               	movwf	(___fldiv@a+3)^0,c
  1603  0035F4  C03E  F001         	movff	read_TEMPERATURE@output,___xxtofl@val
  1604  0035F8  C03F  F002         	movff	read_TEMPERATURE@output+1,___xxtofl@val+1
  1605  0035FC  0E00               	movlw	0
  1606  0035FE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1607  003600  0EFF               	movlw	-1
  1608  003602  6E03               	movwf	(___xxtofl@val+2)^0,c
  1609  003604  6E04               	movwf	(___xxtofl@val+3)^0,c
  1610  003606  0E01               	movlw	1
  1611  003608  EC00  F013         	call	___xxtofl
  1612  00360C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1613  003610  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1614  003614  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1615  003618  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1616  00361C  EC2A  F010         	call	___fldiv	;wreg free
  1617  003620  C00F  F028         	movff	?___fldiv,___fladd@b
  1618  003624  C010  F029         	movff	?___fldiv+1,___fladd@b+1
  1619  003628  C011  F02A         	movff	?___fldiv+2,___fladd@b+2
  1620  00362C  C012  F02B         	movff	?___fldiv+3,___fladd@b+3
  1621  003630  0EB8               	movlw	184
  1622  003632  6E2C               	movwf	___fladd@a^0,c
  1623  003634  0E1E               	movlw	30
  1624  003636  6E2D               	movwf	(___fladd@a+1)^0,c
  1625  003638  0E12               	movlw	18
  1626  00363A  6E2E               	movwf	(___fladd@a+2)^0,c
  1627  00363C  0E42               	movlw	66
  1628  00363E  6E2F               	movwf	(___fladd@a+3)^0,c
  1629  003640  ECB5  F00B         	call	___fladd	;wreg free
  1630  003644  C028  F038         	movff	?___fladd,?_read_TEMPERATURE
  1631  003648  C029  F039         	movff	?___fladd+1,?_read_TEMPERATURE+1
  1632  00364C  C02A  F03A         	movff	?___fladd+2,?_read_TEMPERATURE+2
  1633  003650  C02B  F03B         	movff	?___fladd+3,?_read_TEMPERATURE+3
  1634  003654  0012               	return		;funcret
  1635  003656                     __end_of_read_TEMPERATURE:
  1636                           	callstack 0
  1637                           
  1638 ;; *************** function _send_GYROS *****************
  1639 ;; Defined at:
  1640 ;;		line 477 in file "./MPU6050.h"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;		None
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1654 ;;      Params:         0       0       0       0       0       0       0
  1655 ;;      Locals:         0       0       0       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0
  1657 ;;      Totals:         0       0       0       0       0       0       0
  1658 ;;Total ram usage:        0 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; Hardware stack levels required when called: 9
  1661 ;; This function calls:
  1662 ;;		_send_GYRO
  1663 ;; This function is called by:
  1664 ;;		_main
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text5
  1669  003D54                     __ptext5:
  1670                           	callstack 0
  1671  003D54                     _send_GYROS:
  1672                           	callstack 21
  1673  003D54                     
  1674                           ;./MPU6050.h: 478:     send_GYRO(0);
  1675  003D54  0E00               	movlw	0
  1676  003D56  EC2A  F01C         	call	_send_GYRO
  1677                           
  1678                           ;./MPU6050.h: 479:     send_GYRO(1);
  1679  003D5A  0E01               	movlw	1
  1680  003D5C  EC2A  F01C         	call	_send_GYRO
  1681                           
  1682                           ;./MPU6050.h: 480:     send_GYRO(2);
  1683  003D60  0E02               	movlw	2
  1684  003D62  EC2A  F01C         	call	_send_GYRO
  1685  003D66  0012               	return		;funcret
  1686  003D68                     __end_of_send_GYROS:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _send_GYRO *****************
  1690 ;; Defined at:
  1691 ;;		line 469 in file "./MPU6050.h"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  axe             1    wreg     unsigned char 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  axe             1   98[BANK0 ] unsigned char 
  1696 ;;  message         9   86[BANK0 ] unsigned char [9]
  1697 ;;  axes            3   95[BANK0 ] unsigned char [3]
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1707 ;;      Params:         0       0       0       0       0       0       0
  1708 ;;      Locals:         0      13       0       0       0       0       0
  1709 ;;      Temps:          1       0       0       0       0       0       0
  1710 ;;      Totals:         1      13       0       0       0       0       0
  1711 ;;Total ram usage:       14 bytes
  1712 ;; Hardware stack levels used: 1
  1713 ;; Hardware stack levels required when called: 8
  1714 ;; This function calls:
  1715 ;;		_print
  1716 ;;		_read_GYRO
  1717 ;;		_sprintf
  1718 ;; This function is called by:
  1719 ;;		_send_GYROS
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text6
  1724  003854                     __ptext6:
  1725                           	callstack 0
  1726  003854                     _send_GYRO:
  1727                           	callstack 21
  1728                           
  1729                           ;incstack = 0
  1730                           ;send_GYRO@axe stored from wreg
  1731  003854  0100               	movlb	0	; () banked
  1732  003856  6FC2               	movwf	send_GYRO@axe& (0+255),b
  1733  003858                     
  1734                           ;./MPU6050.h: 470:     char message[9];;./MPU6050.h: 471:     char axes[3] = {'X', 'Y', 
      +                          'Z'};
  1735  003858  C0EC  F0BF         	movff	send_GYRO@F6410,send_GYRO@axes
  1736  00385C  C0ED  F0C0         	movff	send_GYRO@F6410+1,send_GYRO@axes+1
  1737  003860  C0EE  F0C1         	movff	send_GYRO@F6410+2,send_GYRO@axes+2
  1738  003864                     
  1739                           ;./MPU6050.h: 473:     sprintf(message, "G_%c: %.2f\n", axes[axe], read_GYRO(axe));
  1740  003864  0EB6               	movlw	low send_GYRO@message
  1741  003866  0100               	movlb	0	; () banked
  1742  003868  6FA4               	movwf	sprintf@s& (0+255),b
  1743  00386A  0E00               	movlw	high send_GYRO@message
  1744  00386C  6FA5               	movwf	(sprintf@s+1)& (0+255),b
  1745  00386E  0E0D               	movlw	low STR_1
  1746  003870  6FA6               	movwf	sprintf@fmt& (0+255),b
  1747  003872  0E06               	movlw	high STR_1
  1748  003874  6FA7               	movwf	(sprintf@fmt+1)& (0+255),b
  1749  003876  0EBF               	movlw	low send_GYRO@axes
  1750  003878  25C2               	addwf	send_GYRO@axe& (0+255),w,b
  1751  00387A  6ED9               	movwf	fsr2l,c
  1752  00387C  6ADA               	clrf	fsr2h,c
  1753  00387E  0E00               	movlw	high send_GYRO@axes
  1754  003880  22DA               	addwfc	fsr2h,f,c
  1755  003882  50DF               	movf	indf2,w,c
  1756  003884  6E5E               	movwf	??_send_GYRO^0,c
  1757  003886  505E               	movf	??_send_GYRO^0,w,c
  1758  003888  6FA8               	movwf	(?_sprintf+4)& (0+255),b
  1759  00388A  6BA9               	clrf	(?_sprintf+5)& (0+255),b
  1760  00388C  51C2               	movf	send_GYRO@axe& (0+255),w,b
  1761  00388E  EC28  F015         	call	_read_GYRO
  1762  003892  C028  F0AA         	movff	?_read_GYRO,?_sprintf+6
  1763  003896  C029  F0AB         	movff	?_read_GYRO+1,?_sprintf+7
  1764  00389A  C02A  F0AC         	movff	?_read_GYRO+2,?_sprintf+8
  1765  00389E  C02B  F0AD         	movff	?_read_GYRO+3,?_sprintf+9
  1766  0038A2  ECE8  F01C         	call	_sprintf	;wreg free
  1767  0038A6                     
  1768                           ;./MPU6050.h: 474:     print(message);
  1769  0038A6  0EB6               	movlw	low send_GYRO@message
  1770  0038A8  6E01               	movwf	print@value^0,c
  1771  0038AA  0E00               	movlw	high send_GYRO@message
  1772  0038AC  6E02               	movwf	(print@value+1)^0,c
  1773  0038AE  ECA2  F01D         	call	_print	;wreg free
  1774  0038B2  0012               	return		;funcret
  1775  0038B4                     __end_of_send_GYRO:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _read_GYRO *****************
  1779 ;; Defined at:
  1780 ;;		line 357 in file "./MPU6050.h"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  axis            1    wreg     unsigned char 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  axis            1   47[COMRAM] unsigned char 
  1785 ;;  output          2   45[COMRAM] int 
  1786 ;;  output_L        1   49[COMRAM] unsigned char 
  1787 ;;  output_H        1   48[COMRAM] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  4   39[COMRAM] float 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1797 ;;      Params:         4       0       0       0       0       0       0
  1798 ;;      Locals:         5       0       0       0       0       0       0
  1799 ;;      Temps:          2       0       0       0       0       0       0
  1800 ;;      Totals:        11       0       0       0       0       0       0
  1801 ;;Total ram usage:       11 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; Hardware stack levels required when called: 4
  1804 ;; This function calls:
  1805 ;;		___fldiv
  1806 ;;		___xxtofl
  1807 ;;		_readI2C1
  1808 ;; This function is called by:
  1809 ;;		_send_GYRO
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text7
  1814  002A50                     __ptext7:
  1815                           	callstack 0
  1816  002A50                     _read_GYRO:
  1817                           	callstack 24
  1818                           
  1819                           ;incstack = 0
  1820                           ;read_GYRO@axis stored from wreg
  1821  002A50  6E30               	movwf	read_GYRO@axis^0,c
  1822  002A52                     
  1823                           ;./MPU6050.h: 359:     uint8_t output_L = 0;
  1824  002A52  0E00               	movlw	0
  1825  002A54  6E32               	movwf	read_GYRO@output_L^0,c
  1826                           
  1827                           ;./MPU6050.h: 360:     int output = 0;
  1828  002A56  0E00               	movlw	0
  1829  002A58  6E2F               	movwf	(read_GYRO@output+1)^0,c
  1830  002A5A  0E00               	movlw	0
  1831  002A5C  6E2E               	movwf	read_GYRO@output^0,c
  1832  002A5E                     
  1833                           ;./MPU6050.h: 362:     if(axis == 0) {
  1834  002A5E  5030               	movf	read_GYRO@axis^0,w,c
  1835  002A60  A4D8               	btfss	status,2,c
  1836  002A62  EF35  F015         	goto	u5271
  1837  002A66  EF37  F015         	goto	u5270
  1838  002A6A                     u5271:
  1839  002A6A  EF50  F015         	goto	l4656
  1840  002A6E                     u5270:
  1841  002A6E                     
  1842                           ;./MPU6050.h: 363:         output_H = readI2C1(0b11010000, 0x43);
  1843  002A6E  0E43               	movlw	67
  1844  002A70  6E03               	movwf	readI2C1@address^0,c
  1845  002A72  0ED0               	movlw	208
  1846  002A74  EC45  F01E         	call	_readI2C1
  1847  002A78  6E31               	movwf	read_GYRO@output_H^0,c
  1848                           
  1849                           ;./MPU6050.h: 364:         output_L = readI2C1(0b11010000, 0x44);
  1850  002A7A  0E44               	movlw	68
  1851  002A7C  6E03               	movwf	readI2C1@address^0,c
  1852  002A7E  0ED0               	movlw	208
  1853  002A80  EC45  F01E         	call	_readI2C1
  1854  002A84  6E32               	movwf	read_GYRO@output_L^0,c
  1855  002A86                     l4654:
  1856                           
  1857                           ;./MPU6050.h: 365:         output = ((int)output_H << 8) | (int)output_L;
  1858  002A86  5032               	movf	read_GYRO@output_L^0,w,c
  1859  002A88  C031  F02C         	movff	read_GYRO@output_H,??_read_GYRO
  1860  002A8C  6A2D               	clrf	(??_read_GYRO+1)^0,c
  1861  002A8E  C02C  F02D         	movff	??_read_GYRO,??_read_GYRO+1
  1862  002A92  6A2C               	clrf	??_read_GYRO^0,c
  1863  002A94  102C               	iorwf	??_read_GYRO^0,w,c
  1864  002A96  6E2E               	movwf	read_GYRO@output^0,c
  1865  002A98  502D               	movf	(??_read_GYRO+1)^0,w,c
  1866  002A9A  6E2F               	movwf	(read_GYRO@output+1)^0,c
  1867                           
  1868                           ;./MPU6050.h: 367:     } else if(axis == 1) {
  1869  002A9C  EF7D  F015         	goto	l4668
  1870  002AA0                     l4656:
  1871  002AA0  0430               	decf	read_GYRO@axis^0,w,c
  1872  002AA2  A4D8               	btfss	status,2,c
  1873  002AA4  EF56  F015         	goto	u5281
  1874  002AA8  EF58  F015         	goto	u5280
  1875  002AAC                     u5281:
  1876  002AAC  EF66  F015         	goto	l4662
  1877  002AB0                     u5280:
  1878  002AB0                     
  1879                           ;./MPU6050.h: 368:         output_H = readI2C1(0b11010000, 0x45);
  1880  002AB0  0E45               	movlw	69
  1881  002AB2  6E03               	movwf	readI2C1@address^0,c
  1882  002AB4  0ED0               	movlw	208
  1883  002AB6  EC45  F01E         	call	_readI2C1
  1884  002ABA  6E31               	movwf	read_GYRO@output_H^0,c
  1885                           
  1886                           ;./MPU6050.h: 369:         output_L = readI2C1(0b11010000, 0x46);
  1887  002ABC  0E46               	movlw	70
  1888  002ABE  6E03               	movwf	readI2C1@address^0,c
  1889  002AC0  0ED0               	movlw	208
  1890  002AC2  EC45  F01E         	call	_readI2C1
  1891  002AC6  6E32               	movwf	read_GYRO@output_L^0,c
  1892  002AC8  EF43  F015         	goto	l4654
  1893  002ACC                     l4662:
  1894  002ACC  0E02               	movlw	2
  1895  002ACE  1830               	xorwf	read_GYRO@axis^0,w,c
  1896  002AD0  A4D8               	btfss	status,2,c
  1897  002AD2  EF6D  F015         	goto	u5291
  1898  002AD6  EF6F  F015         	goto	u5290
  1899  002ADA                     u5291:
  1900  002ADA  EF7D  F015         	goto	l4668
  1901  002ADE                     u5290:
  1902  002ADE                     
  1903                           ;./MPU6050.h: 373:         output_H = readI2C1(0b11010000, 0x47);
  1904  002ADE  0E47               	movlw	71
  1905  002AE0  6E03               	movwf	readI2C1@address^0,c
  1906  002AE2  0ED0               	movlw	208
  1907  002AE4  EC45  F01E         	call	_readI2C1
  1908  002AE8  6E31               	movwf	read_GYRO@output_H^0,c
  1909                           
  1910                           ;./MPU6050.h: 374:         output_L = readI2C1(0b11010000, 0x48);
  1911  002AEA  0E48               	movlw	72
  1912  002AEC  6E03               	movwf	readI2C1@address^0,c
  1913  002AEE  0ED0               	movlw	208
  1914  002AF0  EC45  F01E         	call	_readI2C1
  1915  002AF4  6E32               	movwf	read_GYRO@output_L^0,c
  1916  002AF6  EF43  F015         	goto	l4654
  1917  002AFA                     l4668:
  1918                           
  1919                           ;./MPU6050.h: 379:     return (float)output/gyro_sensitivity[gyro_range];
  1920  002AFA  C02E  F001         	movff	read_GYRO@output,___xxtofl@val
  1921  002AFE  C02F  F002         	movff	read_GYRO@output+1,___xxtofl@val+1
  1922  002B02  0E00               	movlw	0
  1923  002B04  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1924  002B06  0EFF               	movlw	-1
  1925  002B08  6E03               	movwf	(___xxtofl@val+2)^0,c
  1926  002B0A  6E04               	movwf	(___xxtofl@val+3)^0,c
  1927  002B0C  0E01               	movlw	1
  1928  002B0E  EC00  F013         	call	___xxtofl
  1929  002B12  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1930  002B16  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1931  002B1A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1932  002B1E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1933  002B22  0100               	movlb	0	; () banked
  1934  002B24  51EF               	movf	_gyro_range& (0+255),w,b
  1935  002B26  0D04               	mullw	4
  1936  002B28  0E60               	movlw	low _gyro_sensitivity
  1937  002B2A  24F3               	addwf	243,w,c
  1938  002B2C  6ED9               	movwf	fsr2l,c
  1939  002B2E  0E01               	movlw	high _gyro_sensitivity
  1940  002B30  20F4               	addwfc	prodh,w,c
  1941  002B32  6EDA               	movwf	fsr2h,c
  1942  002B34  CFDE F013          	movff	postinc2,___fldiv@a
  1943  002B38  CFDE F014          	movff	postinc2,___fldiv@a+1
  1944  002B3C  CFDE F015          	movff	postinc2,___fldiv@a+2
  1945  002B40  CFDE F016          	movff	postinc2,___fldiv@a+3
  1946  002B44  EC2A  F010         	call	___fldiv	;wreg free
  1947  002B48  C00F  F028         	movff	?___fldiv,?_read_GYRO
  1948  002B4C  C010  F029         	movff	?___fldiv+1,?_read_GYRO+1
  1949  002B50  C011  F02A         	movff	?___fldiv+2,?_read_GYRO+2
  1950  002B54  C012  F02B         	movff	?___fldiv+3,?_read_GYRO+3
  1951  002B58  0012               	return		;funcret
  1952  002B5A                     __end_of_read_GYRO:
  1953                           	callstack 0
  1954                           
  1955 ;; *************** function _send_ACCELS *****************
  1956 ;; Defined at:
  1957 ;;		line 491 in file "./MPU6050.h"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;		None
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;		None
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1971 ;;      Params:         0       0       0       0       0       0       0
  1972 ;;      Locals:         0       0       0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0
  1974 ;;      Totals:         0       0       0       0       0       0       0
  1975 ;;Total ram usage:        0 bytes
  1976 ;; Hardware stack levels used: 1
  1977 ;; Hardware stack levels required when called: 9
  1978 ;; This function calls:
  1979 ;;		_send_ACCEL
  1980 ;; This function is called by:
  1981 ;;		_main
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text8
  1986  003D68                     __ptext8:
  1987                           	callstack 0
  1988  003D68                     _send_ACCELS:
  1989                           	callstack 21
  1990  003D68                     
  1991                           ;./MPU6050.h: 492:     send_ACCEL(0);
  1992  003D68  0E00               	movlw	0
  1993  003D6A  EC5A  F01C         	call	_send_ACCEL
  1994                           
  1995                           ;./MPU6050.h: 493:     send_ACCEL(1);
  1996  003D6E  0E01               	movlw	1
  1997  003D70  EC5A  F01C         	call	_send_ACCEL
  1998                           
  1999                           ;./MPU6050.h: 494:     send_ACCEL(2);
  2000  003D74  0E02               	movlw	2
  2001  003D76  EC5A  F01C         	call	_send_ACCEL
  2002  003D7A  0012               	return		;funcret
  2003  003D7C                     __end_of_send_ACCELS:
  2004                           	callstack 0
  2005                           
  2006 ;; *************** function _send_ACCEL *****************
  2007 ;; Defined at:
  2008 ;;		line 483 in file "./MPU6050.h"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  axe             1    wreg     unsigned char 
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  axe             1   98[BANK0 ] unsigned char 
  2013 ;;  message         9   86[BANK0 ] unsigned char [9]
  2014 ;;  axes            3   95[BANK0 ] unsigned char [3]
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2024 ;;      Params:         0       0       0       0       0       0       0
  2025 ;;      Locals:         0      13       0       0       0       0       0
  2026 ;;      Temps:          1       0       0       0       0       0       0
  2027 ;;      Totals:         1      13       0       0       0       0       0
  2028 ;;Total ram usage:       14 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 8
  2031 ;; This function calls:
  2032 ;;		_print
  2033 ;;		_read_ACCEL
  2034 ;;		_sprintf
  2035 ;; This function is called by:
  2036 ;;		_send_ACCELS
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text9
  2041  0038B4                     __ptext9:
  2042                           	callstack 0
  2043  0038B4                     _send_ACCEL:
  2044                           	callstack 21
  2045                           
  2046                           ;incstack = 0
  2047                           ;send_ACCEL@axe stored from wreg
  2048  0038B4  0100               	movlb	0	; () banked
  2049  0038B6  6FC2               	movwf	send_ACCEL@axe& (0+255),b
  2050  0038B8                     
  2051                           ;./MPU6050.h: 484:     char message[9];;./MPU6050.h: 485:     char axes[3] = {'X', 'Y', 
      +                          'Z'};
  2052  0038B8  C0E9  F0BF         	movff	send_ACCEL@F6416,send_ACCEL@axes
  2053  0038BC  C0EA  F0C0         	movff	send_ACCEL@F6416+1,send_ACCEL@axes+1
  2054  0038C0  C0EB  F0C1         	movff	send_ACCEL@F6416+2,send_ACCEL@axes+2
  2055  0038C4                     
  2056                           ;./MPU6050.h: 487:     sprintf(message, "A_%c: %.2f\n", axes[axe], read_ACCEL(axe));
  2057  0038C4  0EB6               	movlw	low send_ACCEL@message
  2058  0038C6  0100               	movlb	0	; () banked
  2059  0038C8  6FA4               	movwf	sprintf@s& (0+255),b
  2060  0038CA  0E00               	movlw	high send_ACCEL@message
  2061  0038CC  6FA5               	movwf	(sprintf@s+1)& (0+255),b
  2062  0038CE  0E01               	movlw	low STR_2
  2063  0038D0  6FA6               	movwf	sprintf@fmt& (0+255),b
  2064  0038D2  0E06               	movlw	high STR_2
  2065  0038D4  6FA7               	movwf	(sprintf@fmt+1)& (0+255),b
  2066  0038D6  0EBF               	movlw	low send_ACCEL@axes
  2067  0038D8  25C2               	addwf	send_ACCEL@axe& (0+255),w,b
  2068  0038DA  6ED9               	movwf	fsr2l,c
  2069  0038DC  6ADA               	clrf	fsr2h,c
  2070  0038DE  0E00               	movlw	high send_ACCEL@axes
  2071  0038E0  22DA               	addwfc	fsr2h,f,c
  2072  0038E2  50DF               	movf	indf2,w,c
  2073  0038E4  6E5E               	movwf	??_send_ACCEL^0,c
  2074  0038E6  505E               	movf	??_send_ACCEL^0,w,c
  2075  0038E8  6FA8               	movwf	(?_sprintf+4)& (0+255),b
  2076  0038EA  6BA9               	clrf	(?_sprintf+5)& (0+255),b
  2077  0038EC  51C2               	movf	send_ACCEL@axe& (0+255),w,b
  2078  0038EE  ECAD  F015         	call	_read_ACCEL
  2079  0038F2  C028  F0AA         	movff	?_read_ACCEL,?_sprintf+6
  2080  0038F6  C029  F0AB         	movff	?_read_ACCEL+1,?_sprintf+7
  2081  0038FA  C02A  F0AC         	movff	?_read_ACCEL+2,?_sprintf+8
  2082  0038FE  C02B  F0AD         	movff	?_read_ACCEL+3,?_sprintf+9
  2083  003902  ECE8  F01C         	call	_sprintf	;wreg free
  2084  003906                     
  2085                           ;./MPU6050.h: 488:     print(message);
  2086  003906  0EB6               	movlw	low send_ACCEL@message
  2087  003908  6E01               	movwf	print@value^0,c
  2088  00390A  0E00               	movlw	high send_ACCEL@message
  2089  00390C  6E02               	movwf	(print@value+1)^0,c
  2090  00390E  ECA2  F01D         	call	_print	;wreg free
  2091  003912  0012               	return		;funcret
  2092  003914                     __end_of_send_ACCEL:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _sprintf *****************
  2096 ;; Defined at:
  2097 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_sprintf.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  s               2   68[BANK0 ] PTR unsigned char 
  2100 ;;		 -> send_TEMP@message(9), send_ACCEL@message(9), send_GYRO@message(9), 
  2101 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  2102 ;;		 -> STR_3(12), STR_2(12), STR_1(12), 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  f               6   80[BANK0 ] struct _IO_FILE
  2105 ;;  ap              2   78[BANK0 ] PTR void [1]
  2106 ;;		 -> ?_sprintf(2), 
  2107 ;;  ret             2    0        int 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  2   68[BANK0 ] int 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2117 ;;      Params:         0      10       0       0       0       0       0
  2118 ;;      Locals:         0       8       0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0
  2120 ;;      Totals:         0      18       0       0       0       0       0
  2121 ;;Total ram usage:       18 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 7
  2124 ;; This function calls:
  2125 ;;		_vfprintf
  2126 ;; This function is called by:
  2127 ;;		_send_GYRO
  2128 ;;		_send_ACCEL
  2129 ;;		_send_TEMP
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text10
  2134  0039D0                     __ptext10:
  2135                           	callstack 0
  2136  0039D0                     _sprintf:
  2137                           	callstack 22
  2138  0039D0  0EA8               	movlw	low (?_sprintf+4)
  2139  0039D2  0100               	movlb	0	; () banked
  2140  0039D4  6FAE               	movwf	sprintf@ap& (0+255),b
  2141  0039D6  0E00               	movlw	high (?_sprintf+4)
  2142  0039D8  6FAF               	movwf	(sprintf@ap+1)& (0+255),b
  2143  0039DA  C0A4  F0B0         	movff	sprintf@s,sprintf@f
  2144  0039DE  C0A5  F0B1         	movff	sprintf@s+1,sprintf@f+1
  2145  0039E2                     
  2146                           ; BSR set to: 0
  2147  0039E2  0E00               	movlw	0
  2148  0039E4  6FB3               	movwf	(sprintf@f+3)& (0+255),b
  2149  0039E6  0E00               	movlw	0
  2150  0039E8  6FB2               	movwf	(sprintf@f+2)& (0+255),b
  2151  0039EA                     
  2152                           ; BSR set to: 0
  2153  0039EA  0E00               	movlw	0
  2154  0039EC  6FB5               	movwf	(sprintf@f+5)& (0+255),b
  2155  0039EE  0E00               	movlw	0
  2156  0039F0  6FB4               	movwf	(sprintf@f+4)& (0+255),b
  2157  0039F2                     
  2158                           ; BSR set to: 0
  2159  0039F2  0EB0               	movlw	low sprintf@f
  2160  0039F4  6E56               	movwf	vfprintf@fp^0,c
  2161  0039F6  0E00               	movlw	high sprintf@f
  2162  0039F8  6E57               	movwf	(vfprintf@fp+1)^0,c
  2163  0039FA  C0A6  F058         	movff	sprintf@fmt,vfprintf@fmt
  2164  0039FE  C0A7  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2165  003A02  0EAE               	movlw	low sprintf@ap
  2166  003A04  6E5A               	movwf	vfprintf@ap^0,c
  2167  003A06  0E00               	movlw	high sprintf@ap
  2168  003A08  6E5B               	movwf	(vfprintf@ap+1)^0,c
  2169  003A0A  ECF9  F01B         	call	_vfprintf	;wreg free
  2170  003A0E  0100               	movlb	0	; () banked
  2171  003A10  51B2               	movf	(sprintf@f+2)& (0+255),w,b
  2172  003A12  25A4               	addwf	sprintf@s& (0+255),w,b
  2173  003A14  6ED9               	movwf	fsr2l,c
  2174  003A16  51B3               	movf	(sprintf@f+3)& (0+255),w,b
  2175  003A18  21A5               	addwfc	(sprintf@s+1)& (0+255),w,b
  2176  003A1A  6EDA               	movwf	fsr2h,c
  2177  003A1C  0E00               	movlw	0
  2178  003A1E  6EDF               	movwf	indf2,c
  2179  003A20                     
  2180                           ; BSR set to: 0
  2181  003A20  0012               	return		;funcret
  2182  003A22                     __end_of_sprintf:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _vfprintf *****************
  2186 ;; Defined at:
  2187 ;;		line 1390 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  2190 ;;		 -> sprintf@f(6), 
  2191 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  2192 ;;		 -> STR_3(12), STR_2(12), STR_1(12), 
  2193 ;;  ap              2   89[COMRAM] PTR PTR void 
  2194 ;;		 -> sprintf@ap(2), 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  2197 ;;		 -> STR_3(12), STR_2(12), STR_1(12), 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  2   85[COMRAM] int 
  2200 ;; Registers used:
  2201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2207 ;;      Params:         6       0       0       0       0       0       0
  2208 ;;      Locals:         2       0       0       0       0       0       0
  2209 ;;      Temps:          0       0       0       0       0       0       0
  2210 ;;      Totals:         8       0       0       0       0       0       0
  2211 ;;Total ram usage:        8 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 6
  2214 ;; This function calls:
  2215 ;;		_vfpfcnvrt
  2216 ;; This function is called by:
  2217 ;;		_sprintf
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text11
  2222  0037F2                     __ptext11:
  2223                           	callstack 0
  2224  0037F2                     _vfprintf:
  2225                           	callstack 22
  2226  0037F2                     
  2227                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.32/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
  2228  0037F2  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  2229  0037F6  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2230  0037FA                     
  2231                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  2232  0037FA  0E00               	movlw	0
  2233  0037FC  0100               	movlb	0	; () banked
  2234  0037FE  6FDA               	movwf	(_nout+1)& (0+255),b
  2235  003800  0E00               	movlw	0
  2236  003802  6FD9               	movwf	_nout& (0+255),b
  2237                           
  2238                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  2239  003804  EF17  F01C         	goto	l4638
  2240  003808                     l4636:
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  2244  003808  C056  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2245  00380C  C057  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2246  003810  0E5C               	movlw	low vfprintf@cfmt
  2247  003812  6E4E               	movwf	vfpfcnvrt@fmt^0,c
  2248  003814  0E00               	movlw	high vfprintf@cfmt
  2249  003816  6E4F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2250  003818  C05A  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  2251  00381C  C05B  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2252  003820  EC47  F009         	call	_vfpfcnvrt	;wreg free
  2253  003824  504C               	movf	?_vfpfcnvrt^0,w,c
  2254  003826  0100               	movlb	0	; () banked
  2255  003828  27D9               	addwf	_nout& (0+255),f,b
  2256  00382A  504D               	movf	(?_vfpfcnvrt+1)^0,w,c
  2257  00382C  23DA               	addwfc	(_nout+1)& (0+255),f,b
  2258  00382E                     l4638:
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  2262  00382E  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2263  003832  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2264  003836                     	if	0	;tblptru may be non-zero
  2265  003836                     	endif
  2266  003836                     	if	0	;tblptru may be non-zero
  2267  003836                     	endif
  2268  003836  0008               	tblrd		*
  2269  003838  50F5               	movf	tablat,w,c
  2270  00383A  0900               	iorlw	0
  2271  00383C  A4D8               	btfss	status,2,c
  2272  00383E  EF23  F01C         	goto	u5241
  2273  003842  EF25  F01C         	goto	u5240
  2274  003846                     u5241:
  2275  003846  EF04  F01C         	goto	l4636
  2276  00384A                     u5240:
  2277  00384A                     
  2278                           ; BSR set to: 0
  2279                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
  2280  00384A  C0D9  F056         	movff	_nout,?_vfprintf
  2281  00384E  C0DA  F057         	movff	_nout+1,?_vfprintf+1
  2282  003852                     
  2283                           ; BSR set to: 0
  2284  003852  0012               	return		;funcret
  2285  003854                     __end_of_vfprintf:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _vfpfcnvrt *****************
  2289 ;; Defined at:
  2290 ;;		line 692 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  2293 ;;		 -> sprintf@f(6), 
  2294 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  2295 ;;		 -> vfprintf@cfmt(2), 
  2296 ;;  ap              2   79[COMRAM] PTR PTR void 
  2297 ;;		 -> sprintf@ap(2), 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  llu             8    0        unsigned long long 
  2300 ;;  ll              8    0        long long 
  2301 ;;  f               4   60[BANK0 ] long long 
  2302 ;;  ct              3   64[BANK0 ] unsigned char [3]
  2303 ;;  vp              3    0        PTR void 
  2304 ;;  cp              3    0        PTR unsigned char 
  2305 ;;  i               2    0        int 
  2306 ;;  done            2    0        int 
  2307 ;;  c               1   67[BANK0 ] unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  2   75[COMRAM] int 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2317 ;;      Params:         6       0       0       0       0       0       0
  2318 ;;      Locals:         0      12       0       0       0       0       0
  2319 ;;      Temps:          4       0       0       0       0       0       0
  2320 ;;      Totals:        10      12       0       0       0       0       0
  2321 ;;Total ram usage:       22 bytes
  2322 ;; Hardware stack levels used: 1
  2323 ;; Hardware stack levels required when called: 5
  2324 ;; This function calls:
  2325 ;;		_atoi
  2326 ;;		_ctoa
  2327 ;;		_efgtoa
  2328 ;;		_fputc
  2329 ;;		_isdigit
  2330 ;;		_isupper
  2331 ;;		_strncmp
  2332 ;;		_tolower
  2333 ;; This function is called by:
  2334 ;;		_vfprintf
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text12
  2339  00128E                     __ptext12:
  2340                           	callstack 0
  2341  00128E                     _vfpfcnvrt:
  2342                           	callstack 22
  2343  00128E                     
  2344                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.32/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.32/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.32/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.32/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
  2345  00128E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2346  001292  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2347  001296  CFDE FFF6          	movff	postinc2,tblptrl
  2348  00129A  CFDD FFF7          	movff	postdec2,tblptrh
  2349  00129E                     	if	0	;tblptru may be non-zero
  2350  00129E                     	endif
  2351  00129E                     	if	0	;tblptru may be non-zero
  2352  00129E                     	endif
  2353  00129E  0008               	tblrd		*
  2354  0012A0  50F5               	movf	tablat,w,c
  2355  0012A2  0A25               	xorlw	37
  2356  0012A4  A4D8               	btfss	status,2,c
  2357  0012A6  EF57  F009         	goto	u4991
  2358  0012AA  EF59  F009         	goto	u4990
  2359  0012AE                     u4991:
  2360  0012AE  EF99  F00B         	goto	l4572
  2361  0012B2                     u4990:
  2362  0012B2                     
  2363                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  2364  0012B2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2365  0012B6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2366  0012BA  2ADE               	incf	postinc2,f,c
  2367  0012BC  0E00               	movlw	0
  2368  0012BE  22DD               	addwfc	postdec2,f,c
  2369  0012C0                     
  2370                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
  2371  0012C0  0E00               	movlw	0
  2372  0012C2  0100               	movlb	0	; () banked
  2373  0012C4  6FDC               	movwf	(_width+1)& (0+255),b
  2374  0012C6  0E00               	movlw	0
  2375  0012C8  6FDB               	movwf	_width& (0+255),b
  2376  0012CA  C0DB  F0DF         	movff	_width,_flags
  2377  0012CE  C0DC  F0E0         	movff	_width+1,_flags+1
  2378  0012D2                     
  2379                           ; BSR set to: 0
  2380                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
  2381  0012D2  69DD               	setf	_prec& (0+255),b
  2382  0012D4  69DE               	setf	(_prec+1)& (0+255),b
  2383  0012D6                     
  2384                           ; BSR set to: 0
  2385                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 762:         if ((*f
      +                          mt)[0] == '.') {
  2386  0012D6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2387  0012DA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2388  0012DE  CFDE FFF6          	movff	postinc2,tblptrl
  2389  0012E2  CFDD FFF7          	movff	postdec2,tblptrh
  2390  0012E6                     	if	0	;tblptru may be non-zero
  2391  0012E6                     	endif
  2392  0012E6                     	if	0	;tblptru may be non-zero
  2393  0012E6                     	endif
  2394  0012E6  0008               	tblrd		*
  2395  0012E8  50F5               	movf	tablat,w,c
  2396  0012EA  0A2E               	xorlw	46
  2397  0012EC  A4D8               	btfss	status,2,c
  2398  0012EE  EF7B  F009         	goto	u5001
  2399  0012F2  EF7D  F009         	goto	u5000
  2400  0012F6                     u5001:
  2401  0012F6  EFFB  F009         	goto	l4510
  2402  0012FA                     u5000:
  2403  0012FA                     
  2404                           ; BSR set to: 0
  2405                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 763:             pre
      +                          c = 0;
  2406  0012FA  0E00               	movlw	0
  2407  0012FC  6FDE               	movwf	(_prec+1)& (0+255),b
  2408  0012FE  0E00               	movlw	0
  2409  001300  6FDD               	movwf	_prec& (0+255),b
  2410  001302                     
  2411                           ; BSR set to: 0
  2412                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 764:             ++*
      +                          fmt;
  2413  001302  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2414  001306  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2415  00130A  2ADE               	incf	postinc2,f,c
  2416  00130C  0E00               	movlw	0
  2417  00130E  22DD               	addwfc	postdec2,f,c
  2418  001310                     
  2419                           ; BSR set to: 0
  2420                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 765:             if 
      +                          ((*fmt)[0] == '*') {
  2421  001310  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2422  001314  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2423  001318  CFDE FFF6          	movff	postinc2,tblptrl
  2424  00131C  CFDD FFF7          	movff	postdec2,tblptrh
  2425  001320                     	if	0	;tblptru may be non-zero
  2426  001320                     	endif
  2427  001320                     	if	0	;tblptru may be non-zero
  2428  001320                     	endif
  2429  001320  0008               	tblrd		*
  2430  001322  50F5               	movf	tablat,w,c
  2431  001324  0A2A               	xorlw	42
  2432  001326  A4D8               	btfss	status,2,c
  2433  001328  EF98  F009         	goto	u5011
  2434  00132C  EF9A  F009         	goto	u5010
  2435  001330                     u5011:
  2436  001330  EFB7  F009         	goto	l4500
  2437  001334                     u5010:
  2438  001334                     
  2439                           ; BSR set to: 0
  2440                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 766:                
      +                           ++*fmt;
  2441  001334  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2442  001338  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2443  00133C  2ADE               	incf	postinc2,f,c
  2444  00133E  0E00               	movlw	0
  2445  001340  22DD               	addwfc	postdec2,f,c
  2446                           
  2447                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 767:                
      +                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2448  001342  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2449  001346  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2450  00134A  CFDF F052          	movff	indf2,??_vfpfcnvrt
  2451  00134E  0E02               	movlw	2
  2452  001350  26DE               	addwf	postinc2,f,c
  2453  001352  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  2454  001356  0E00               	movlw	0
  2455  001358  22DD               	addwfc	postdec2,f,c
  2456  00135A  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2457  00135E  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2458  001362  CFDE F0DD          	movff	postinc2,_prec
  2459  001366  CFDD F0DE          	movff	postdec2,_prec+1
  2460                           
  2461                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 768:             } e
      +                          lse {
  2462  00136A  EFFB  F009         	goto	l4510
  2463  00136E                     l4500:
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 769:                
      +                           prec = atoi(*fmt);
  2467  00136E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2468  001372  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2469  001376  CFDE F008          	movff	postinc2,atoi@s
  2470  00137A  CFDD F009          	movff	postdec2,atoi@s+1
  2471  00137E  ECDA  F013         	call	_atoi	;wreg free
  2472  001382  C008  F0DD         	movff	?_atoi,_prec
  2473  001386  C009  F0DE         	movff	?_atoi+1,_prec+1
  2474                           
  2475                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 770:                
      +                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2476  00138A  EFCE  F009         	goto	l4504
  2477  00138E                     l4502:
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 771:                
      +                               ++*fmt;
  2481  00138E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2482  001392  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2483  001396  2ADE               	incf	postinc2,f,c
  2484  001398  0E00               	movlw	0
  2485  00139A  22DD               	addwfc	postdec2,f,c
  2486  00139C                     l4504:
  2487  00139C  0ED0               	movlw	208
  2488  00139E  6E52               	movwf	??_vfpfcnvrt^0,c
  2489  0013A0  0EFF               	movlw	255
  2490  0013A2  6E53               	movwf	(??_vfpfcnvrt+1)^0,c
  2491  0013A4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2492  0013A8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2493  0013AC  CFDE FFF6          	movff	postinc2,tblptrl
  2494  0013B0  CFDD FFF7          	movff	postdec2,tblptrh
  2495  0013B4                     	if	0	;tblptru may be non-zero
  2496  0013B4                     	endif
  2497  0013B4                     	if	0	;tblptru may be non-zero
  2498  0013B4                     	endif
  2499  0013B4  0008               	tblrd		*
  2500  0013B6  50F5               	movf	tablat,w,c
  2501  0013B8  6E54               	movwf	(??_vfpfcnvrt+2)^0,c
  2502  0013BA  6A55               	clrf	(??_vfpfcnvrt+3)^0,c
  2503  0013BC  5052               	movf	??_vfpfcnvrt^0,w,c
  2504  0013BE  2654               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2505  0013C0  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  2506  0013C2  2255               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2507  0013C4  5055               	movf	(??_vfpfcnvrt+3)^0,w,c
  2508  0013C6  E10A               	bnz	u5020
  2509  0013C8  0E0A               	movlw	10
  2510  0013CA  5C54               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2511  0013CC  A0D8               	btfss	status,0,c
  2512  0013CE  EFEB  F009         	goto	u5021
  2513  0013D2  EFEE  F009         	goto	u5020
  2514  0013D6                     u5021:
  2515  0013D6  0E01               	movlw	1
  2516  0013D8  EFEF  F009         	goto	u5030
  2517  0013DC                     u5020:
  2518  0013DC  0E00               	movlw	0
  2519  0013DE                     u5030:
  2520  0013DE  0100               	movlb	0	; () banked
  2521  0013E0  6F98               	movwf	_vfpfcnvrt$1554& (0+255),b
  2522  0013E2  6B99               	clrf	(_vfpfcnvrt$1554+1)& (0+255),b
  2523  0013E4                     
  2524                           ; BSR set to: 0
  2525  0013E4  5198               	movf	_vfpfcnvrt$1554& (0+255),w,b
  2526  0013E6  1199               	iorwf	(_vfpfcnvrt$1554+1)& (0+255),w,b
  2527  0013E8  A4D8               	btfss	status,2,c
  2528  0013EA  EFF9  F009         	goto	u5041
  2529  0013EE  EFFB  F009         	goto	u5040
  2530  0013F2                     u5041:
  2531  0013F2  EFC7  F009         	goto	l4502
  2532  0013F6                     u5040:
  2533  0013F6                     l4510:
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 779:         ct[0] =
      +                           (char)tolower((int)(*fmt)[0]);
  2537  0013F6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2538  0013FA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2539  0013FE  CFDE FFF6          	movff	postinc2,tblptrl
  2540  001402  CFDD FFF7          	movff	postdec2,tblptrh
  2541  001406                     	if	0	;tblptru may be non-zero
  2542  001406                     	endif
  2543  001406                     	if	0	;tblptru may be non-zero
  2544  001406                     	endif
  2545  001406  0008               	tblrd		*
  2546  001408  50F5               	movf	tablat,w,c
  2547  00140A  6E07               	movwf	tolower@c^0,c
  2548  00140C  6A08               	clrf	(tolower@c+1)^0,c
  2549  00140E  EC8A  F01C         	call	_tolower	;wreg free
  2550  001412  5007               	movf	?_tolower^0,w,c
  2551  001414  0100               	movlb	0	; () banked
  2552  001416  6FA0               	movwf	vfpfcnvrt@ct& (0+255),b
  2553  001418                     
  2554                           ; BSR set to: 0
  2555                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 780:         if (ct[
      +                          0]) {
  2556  001418  51A0               	movf	vfpfcnvrt@ct& (0+255),w,b
  2557  00141A  B4D8               	btfsc	status,2,c
  2558  00141C  EF12  F00A         	goto	u5051
  2559  001420  EF14  F00A         	goto	u5050
  2560  001424                     u5051:
  2561  001424  EF4E  F00A         	goto	l4520
  2562  001428                     u5050:
  2563  001428                     
  2564                           ; BSR set to: 0
  2565                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 781:             ct[
      +                          1] = (char)tolower((int)(*fmt)[1]);
  2566  001428  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2567  00142C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2568  001430  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  2569  001434  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  2570  001438  0E01               	movlw	1
  2571  00143A  2652               	addwf	??_vfpfcnvrt^0,f,c
  2572  00143C  0E00               	movlw	0
  2573  00143E  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2574  001440  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2575  001444  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2576  001448                     	if	0	;tblptru may be non-zero
  2577  001448                     	endif
  2578  001448                     	if	0	;tblptru may be non-zero
  2579  001448                     	endif
  2580  001448  0008               	tblrd		*
  2581  00144A  50F5               	movf	tablat,w,c
  2582  00144C  6E07               	movwf	tolower@c^0,c
  2583  00144E  6A08               	clrf	(tolower@c+1)^0,c
  2584  001450  EC8A  F01C         	call	_tolower	;wreg free
  2585  001454  5007               	movf	?_tolower^0,w,c
  2586  001456  0100               	movlb	0	; () banked
  2587  001458  6FA1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2588  00145A                     
  2589                           ; BSR set to: 0
  2590                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 782:             if 
      +                          (ct[1]) {
  2591  00145A  51A1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2592  00145C  B4D8               	btfsc	status,2,c
  2593  00145E  EF33  F00A         	goto	u5061
  2594  001462  EF35  F00A         	goto	u5060
  2595  001466                     u5061:
  2596  001466  EF4E  F00A         	goto	l4520
  2597  00146A                     u5060:
  2598  00146A                     
  2599                           ; BSR set to: 0
  2600                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 783:                
      +                           ct[2] = (char)tolower((int)(*fmt)[2]);
  2601  00146A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2602  00146E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2603  001472  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  2604  001476  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  2605  00147A  0E02               	movlw	2
  2606  00147C  2652               	addwf	??_vfpfcnvrt^0,f,c
  2607  00147E  0E00               	movlw	0
  2608  001480  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2609  001482  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2610  001486  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2611  00148A                     	if	0	;tblptru may be non-zero
  2612  00148A                     	endif
  2613  00148A                     	if	0	;tblptru may be non-zero
  2614  00148A                     	endif
  2615  00148A  0008               	tblrd		*
  2616  00148C  50F5               	movf	tablat,w,c
  2617  00148E  6E07               	movwf	tolower@c^0,c
  2618  001490  6A08               	clrf	(tolower@c+1)^0,c
  2619  001492  EC8A  F01C         	call	_tolower	;wreg free
  2620  001496  5007               	movf	?_tolower^0,w,c
  2621  001498  0100               	movlb	0	; () banked
  2622  00149A  6FA2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2623  00149C                     l4520:
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 814:         if (*fm
      +                          t[0] == 'c') {
  2627  00149C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2628  0014A0  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2629  0014A4  CFDE FFF6          	movff	postinc2,tblptrl
  2630  0014A8  CFDD FFF7          	movff	postdec2,tblptrh
  2631  0014AC                     	if	0	;tblptru may be non-zero
  2632  0014AC                     	endif
  2633  0014AC                     	if	0	;tblptru may be non-zero
  2634  0014AC                     	endif
  2635  0014AC  0008               	tblrd		*
  2636  0014AE  50F5               	movf	tablat,w,c
  2637  0014B0  0A63               	xorlw	99
  2638  0014B2  A4D8               	btfss	status,2,c
  2639  0014B4  EF5E  F00A         	goto	u5071
  2640  0014B8  EF60  F00A         	goto	u5070
  2641  0014BC                     u5071:
  2642  0014BC  EF87  F00A         	goto	l4528
  2643  0014C0                     u5070:
  2644  0014C0                     
  2645                           ; BSR set to: 0
  2646                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 815:             ++*
      +                          fmt;
  2647  0014C0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2648  0014C4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2649  0014C8  2ADE               	incf	postinc2,f,c
  2650  0014CA  0E00               	movlw	0
  2651  0014CC  22DD               	addwfc	postdec2,f,c
  2652                           
  2653                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 816:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2654  0014CE  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2655  0014D2  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2656  0014D6  CFDF F052          	movff	indf2,??_vfpfcnvrt
  2657  0014DA  0E02               	movlw	2
  2658  0014DC  26DE               	addwf	postinc2,f,c
  2659  0014DE  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  2660  0014E2  0E00               	movlw	0
  2661  0014E4  22DD               	addwfc	postdec2,f,c
  2662  0014E6  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2663  0014EA  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2664  0014EE  50DF               	movf	indf2,w,c
  2665  0014F0  6FA3               	movwf	vfpfcnvrt@c& (0+255),b
  2666  0014F2                     
  2667                           ; BSR set to: 0
  2668                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 817:             ret
      +                          urn ctoa(fp, c);
  2669  0014F2  C04C  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  2670  0014F6  C04D  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2671  0014FA  C0A3  F00C         	movff	vfpfcnvrt@c,ctoa@c
  2672  0014FE  ECB6  F017         	call	_ctoa	;wreg free
  2673  001502  C00A  F04C         	movff	?_ctoa,?_vfpfcnvrt
  2674  001506  C00B  F04D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2675  00150A  EFB4  F00B         	goto	l1271
  2676  00150E                     l4528:
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 942:         if (ct[
      +                          0] == 'f') {
  2680  00150E  0E66               	movlw	102
  2681  001510  19A0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2682  001512  A4D8               	btfss	status,2,c
  2683  001514  EF8E  F00A         	goto	u5081
  2684  001518  EF90  F00A         	goto	u5080
  2685  00151C                     u5081:
  2686  00151C  EFD0  F00A         	goto	l4540
  2687  001520                     u5080:
  2688  001520                     
  2689                           ; BSR set to: 0
  2690                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 944:             c =
      +                           (*fmt)[0];
  2691  001520  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2692  001524  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2693  001528  CFDE FFF6          	movff	postinc2,tblptrl
  2694  00152C  CFDD FFF7          	movff	postdec2,tblptrh
  2695  001530                     	if	0	;tblptru may be non-zero
  2696  001530                     	endif
  2697  001530                     	if	0	;tblptru may be non-zero
  2698  001530                     	endif
  2699  001530  0008               	tblrd		*
  2700  001532  CFF5 F0A3          	movff	tablat,vfpfcnvrt@c
  2701  001536                     
  2702                           ; BSR set to: 0
  2703                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 945:             ++*
      +                          fmt;
  2704  001536  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2705  00153A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2706  00153E  2ADE               	incf	postinc2,f,c
  2707  001540  0E00               	movlw	0
  2708  001542  22DD               	addwfc	postdec2,f,c
  2709  001544                     
  2710                           ; BSR set to: 0
  2711                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 946:             f =
      +                           (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2712  001544  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2713  001548  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2714  00154C  CFDF F052          	movff	indf2,??_vfpfcnvrt
  2715  001550  0E04               	movlw	4
  2716  001552  26DE               	addwf	postinc2,f,c
  2717  001554  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  2718  001558  0E00               	movlw	0
  2719  00155A  22DD               	addwfc	postdec2,f,c
  2720  00155C  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2721  001560  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2722  001564  CFDE F09C          	movff	postinc2,vfpfcnvrt@f
  2723  001568  CFDE F09D          	movff	postinc2,vfpfcnvrt@f+1
  2724  00156C  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+2
  2725  001570  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+3
  2726  001574                     l4536:
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 948:             ret
      +                          urn efgtoa(fp, f, c);
  2730  001574  C04C  F040         	movff	vfpfcnvrt@fp,efgtoa@fp
  2731  001578  C04D  F041         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2732  00157C  C09C  F042         	movff	vfpfcnvrt@f,efgtoa@f
  2733  001580  C09D  F043         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2734  001584  C09E  F044         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2735  001588  C09F  F045         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2736  00158C  C0A3  F046         	movff	vfpfcnvrt@c,efgtoa@c
  2737  001590  EC1B  F003         	call	_efgtoa	;wreg free
  2738  001594  C040  F04C         	movff	?_efgtoa,?_vfpfcnvrt
  2739  001598  C041  F04D         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2740  00159C  EFB4  F00B         	goto	l1271
  2741  0015A0                     l4540:
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 950:         if (!st
      +                          rncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2745  0015A0  0EA0               	movlw	low vfpfcnvrt@ct
  2746  0015A2  6E01               	movwf	strncmp@_l^0,c
  2747  0015A4  0E00               	movlw	high vfpfcnvrt@ct
  2748  0015A6  6E02               	movwf	(strncmp@_l+1)^0,c
  2749  0015A8  0E22               	movlw	low (STR_3+9)
  2750  0015AA  6E03               	movwf	strncmp@_r^0,c
  2751  0015AC  0E06               	movlw	high (STR_3+9)
  2752  0015AE  6E04               	movwf	(strncmp@_r+1)^0,c
  2753  0015B0  0E00               	movlw	0
  2754  0015B2  6E06               	movwf	(strncmp@n+1)^0,c
  2755  0015B4  0E02               	movlw	2
  2756  0015B6  6E05               	movwf	strncmp@n^0,c
  2757  0015B8  EC22  F018         	call	_strncmp	;wreg free
  2758  0015BC  5001               	movf	?_strncmp^0,w,c
  2759  0015BE  1002               	iorwf	(?_strncmp+1)^0,w,c
  2760  0015C0  A4D8               	btfss	status,2,c
  2761  0015C2  EFE5  F00A         	goto	u5091
  2762  0015C6  EFE7  F00A         	goto	u5090
  2763  0015CA                     u5091:
  2764  0015CA  EF63  F00B         	goto	l4556
  2765  0015CE                     u5090:
  2766  0015CE                     
  2767                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 953:             if 
      +                          ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2768  0015CE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2769  0015D2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2770  0015D6  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  2771  0015DA  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  2772  0015DE  0E01               	movlw	1
  2773  0015E0  2652               	addwf	??_vfpfcnvrt^0,f,c
  2774  0015E2  0E00               	movlw	0
  2775  0015E4  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2776  0015E6  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2777  0015EA  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2778  0015EE                     	if	0	;tblptru may be non-zero
  2779  0015EE                     	endif
  2780  0015EE                     	if	0	;tblptru may be non-zero
  2781  0015EE                     	endif
  2782  0015EE  0008               	tblrd		*
  2783  0015F0  CFF5 F0A3          	movff	tablat,vfpfcnvrt@c
  2784  0015F4  0EBF               	movlw	191
  2785  0015F6  6E52               	movwf	??_vfpfcnvrt^0,c
  2786  0015F8  0EFF               	movlw	255
  2787  0015FA  6E53               	movwf	(??_vfpfcnvrt+1)^0,c
  2788  0015FC  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2789  001600  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2790  001604  CFDE FFF6          	movff	postinc2,tblptrl
  2791  001608  CFDD FFF7          	movff	postdec2,tblptrh
  2792  00160C                     	if	0	;tblptru may be non-zero
  2793  00160C                     	endif
  2794  00160C                     	if	0	;tblptru may be non-zero
  2795  00160C                     	endif
  2796  00160C  0008               	tblrd		*
  2797  00160E  50F5               	movf	tablat,w,c
  2798  001610  6E54               	movwf	(??_vfpfcnvrt+2)^0,c
  2799  001612  6A55               	clrf	(??_vfpfcnvrt+3)^0,c
  2800  001614  5052               	movf	??_vfpfcnvrt^0,w,c
  2801  001616  2654               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2802  001618  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  2803  00161A  2255               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2804  00161C  5055               	movf	(??_vfpfcnvrt+3)^0,w,c
  2805  00161E  E10A               	bnz	u5100
  2806  001620  0E1A               	movlw	26
  2807  001622  5C54               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2808  001624  A0D8               	btfss	status,0,c
  2809  001626  EF17  F00B         	goto	u5101
  2810  00162A  EF1A  F00B         	goto	u5100
  2811  00162E                     u5101:
  2812  00162E  0E01               	movlw	1
  2813  001630  EF1B  F00B         	goto	u5110
  2814  001634                     u5100:
  2815  001634  0E00               	movlw	0
  2816  001636                     u5110:
  2817  001636  0100               	movlb	0	; () banked
  2818  001638  6F9A               	movwf	_vfpfcnvrt$1559& (0+255),b
  2819  00163A  6B9B               	clrf	(_vfpfcnvrt$1559+1)& (0+255),b
  2820  00163C                     
  2821                           ; BSR set to: 0
  2822  00163C  519A               	movf	_vfpfcnvrt$1559& (0+255),w,b
  2823  00163E  119B               	iorwf	(_vfpfcnvrt$1559+1)& (0+255),w,b
  2824  001640  B4D8               	btfsc	status,2,c
  2825  001642  EF25  F00B         	goto	u5121
  2826  001646  EF27  F00B         	goto	u5120
  2827  00164A                     u5121:
  2828  00164A  EF41  F00B         	goto	l4550
  2829  00164E                     u5120:
  2830  00164E                     
  2831                           ; BSR set to: 0
  2832                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 954:                
      +                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2833  00164E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2834  001652  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2835  001656  CFDF F052          	movff	indf2,??_vfpfcnvrt
  2836  00165A  0E04               	movlw	4
  2837  00165C  26DE               	addwf	postinc2,f,c
  2838  00165E  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  2839  001662  0E00               	movlw	0
  2840  001664  22DD               	addwfc	postdec2,f,c
  2841  001666  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2842  00166A  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2843  00166E  CFDE F09C          	movff	postinc2,vfpfcnvrt@f
  2844  001672  CFDE F09D          	movff	postinc2,vfpfcnvrt@f+1
  2845  001676  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+2
  2846  00167A  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+3
  2847                           
  2848                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 955:             } e
      +                          lse {
  2849  00167E  EF59  F00B         	goto	l1279
  2850  001682                     l4550:
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 956:                
      +                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2854  001682  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2855  001686  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2856  00168A  CFDF F052          	movff	indf2,??_vfpfcnvrt
  2857  00168E  0E04               	movlw	4
  2858  001690  26DE               	addwf	postinc2,f,c
  2859  001692  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  2860  001696  0E00               	movlw	0
  2861  001698  22DD               	addwfc	postdec2,f,c
  2862  00169A  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2863  00169E  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2864  0016A2  CFDE F09C          	movff	postinc2,vfpfcnvrt@f
  2865  0016A6  CFDE F09D          	movff	postinc2,vfpfcnvrt@f+1
  2866  0016AA  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+2
  2867  0016AE  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+3
  2868  0016B2                     l1279:
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 958:             *fm
      +                          t += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2872  0016B2  0E02               	movlw	2
  2873  0016B4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2874  0016B8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2875  0016BC  26DE               	addwf	postinc2,f,c
  2876  0016BE  0E00               	movlw	0
  2877  0016C0  22DD               	addwfc	postdec2,f,c
  2878  0016C2  EFBA  F00A         	goto	l4536
  2879  0016C6                     l4556:
  2880                           
  2881                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
  2882  0016C6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2883  0016CA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2884  0016CE  CFDE FFF6          	movff	postinc2,tblptrl
  2885  0016D2  CFDD FFF7          	movff	postdec2,tblptrh
  2886  0016D6                     	if	0	;tblptru may be non-zero
  2887  0016D6                     	endif
  2888  0016D6                     	if	0	;tblptru may be non-zero
  2889  0016D6                     	endif
  2890  0016D6  0008               	tblrd		*
  2891  0016D8  50F5               	movf	tablat,w,c
  2892  0016DA  0A25               	xorlw	37
  2893  0016DC  A4D8               	btfss	status,2,c
  2894  0016DE  EF73  F00B         	goto	u5131
  2895  0016E2  EF75  F00B         	goto	u5130
  2896  0016E6                     u5131:
  2897  0016E6  EF8C  F00B         	goto	l4566
  2898  0016EA                     u5130:
  2899  0016EA                     
  2900                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
  2901  0016EA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2902  0016EE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2903  0016F2  2ADE               	incf	postinc2,f,c
  2904  0016F4  0E00               	movlw	0
  2905  0016F6  22DD               	addwfc	postdec2,f,c
  2906  0016F8                     
  2907                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
  2908  0016F8  0E00               	movlw	0
  2909  0016FA  6E02               	movwf	(fputc@c+1)^0,c
  2910  0016FC  0E25               	movlw	37
  2911  0016FE  6E01               	movwf	fputc@c^0,c
  2912  001700  C04C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2913  001704  C04D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2914  001708  ECF6  F018         	call	_fputc	;wreg free
  2915  00170C                     l4562:
  2916                           
  2917                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
  2918  00170C  0E00               	movlw	0
  2919  00170E  6E4D               	movwf	(?_vfpfcnvrt+1)^0,c
  2920  001710  0E01               	movlw	1
  2921  001712  6E4C               	movwf	?_vfpfcnvrt^0,c
  2922  001714  EFB4  F00B         	goto	l1271
  2923  001718                     l4566:
  2924                           
  2925                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
  2926  001718  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2927  00171C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2928  001720  2ADE               	incf	postinc2,f,c
  2929  001722  0E00               	movlw	0
  2930  001724  22DD               	addwfc	postdec2,f,c
  2931  001726                     
  2932                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1380:         return
      +                           0;
  2933  001726  0E00               	movlw	0
  2934  001728  6E4D               	movwf	(?_vfpfcnvrt+1)^0,c
  2935  00172A  0E00               	movlw	0
  2936  00172C  6E4C               	movwf	?_vfpfcnvrt^0,c
  2937  00172E  EFB4  F00B         	goto	l1271
  2938  001732                     l4572:
  2939                           
  2940                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
  2941  001732  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2942  001736  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2943  00173A  CFDE FFF6          	movff	postinc2,tblptrl
  2944  00173E  CFDD FFF7          	movff	postdec2,tblptrh
  2945  001742                     	if	0	;tblptru may be non-zero
  2946  001742                     	endif
  2947  001742                     	if	0	;tblptru may be non-zero
  2948  001742                     	endif
  2949  001742  0008               	tblrd		*
  2950  001744  50F5               	movf	tablat,w,c
  2951  001746  6E01               	movwf	fputc@c^0,c
  2952  001748  6A02               	clrf	(fputc@c+1)^0,c
  2953  00174A  C04C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2954  00174E  C04D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2955  001752  ECF6  F018         	call	_fputc	;wreg free
  2956  001756                     
  2957                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  2958  001756  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2959  00175A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2960  00175E  2ADE               	incf	postinc2,f,c
  2961  001760  0E00               	movlw	0
  2962  001762  22DD               	addwfc	postdec2,f,c
  2963  001764  EF86  F00B         	goto	l4562
  2964  001768                     l1271:
  2965  001768  0012               	return		;funcret
  2966  00176A                     __end_of_vfpfcnvrt:
  2967                           	callstack 0
  2968                           
  2969 ;; *************** function _strncmp *****************
  2970 ;; Defined at:
  2971 ;;		line 3 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/strncmp.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2974 ;;		 -> vfpfcnvrt@ct(3), 
  2975 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2976 ;;		 -> STR_14(3), 
  2977 ;;  n               2    4[COMRAM] unsigned int 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2980 ;;		 -> STR_14(3), 
  2981 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2982 ;;		 -> vfpfcnvrt@ct(3), 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  2    0[COMRAM] int 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2992 ;;      Params:         6       0       0       0       0       0       0
  2993 ;;      Locals:         4       0       0       0       0       0       0
  2994 ;;      Temps:          1       0       0       0       0       0       0
  2995 ;;      Totals:        11       0       0       0       0       0       0
  2996 ;;Total ram usage:       11 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; This function calls:
  2999 ;;		Nothing
  3000 ;; This function is called by:
  3001 ;;		_vfpfcnvrt
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text13
  3006  003044                     __ptext13:
  3007                           	callstack 0
  3008  003044                     _strncmp:
  3009                           	callstack 26
  3010  003044  C001  F008         	movff	strncmp@_l,strncmp@l
  3011  003048  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3012  00304C  C003  F00A         	movff	strncmp@_r,strncmp@r
  3013  003050  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3014  003054  0605               	decf	strncmp@n^0,f,c
  3015  003056  A0D8               	btfss	status,0,c
  3016  003058  0606               	decf	(strncmp@n+1)^0,f,c
  3017  00305A  2805               	incf	strncmp@n^0,w,c
  3018  00305C  E106               	bnz	u4941
  3019  00305E  2806               	incf	(strncmp@n+1)^0,w,c
  3020  003060  A4D8               	btfss	status,2,c
  3021  003062  EF35  F018         	goto	u4941
  3022  003066  EF37  F018         	goto	u4940
  3023  00306A                     u4941:
  3024  00306A  EF44  F018         	goto	l4440
  3025  00306E                     u4940:
  3026  00306E  0E00               	movlw	0
  3027  003070  6E02               	movwf	(?_strncmp+1)^0,c
  3028  003072  0E00               	movlw	0
  3029  003074  6E01               	movwf	?_strncmp^0,c
  3030  003076  EF8C  F018         	goto	l1400
  3031  00307A                     l4438:
  3032  00307A  4A08               	infsnz	strncmp@l^0,f,c
  3033  00307C  2A09               	incf	(strncmp@l+1)^0,f,c
  3034  00307E  4A0A               	infsnz	strncmp@r^0,f,c
  3035  003080  2A0B               	incf	(strncmp@r+1)^0,f,c
  3036  003082  0605               	decf	strncmp@n^0,f,c
  3037  003084  A0D8               	btfss	status,0,c
  3038  003086  0606               	decf	(strncmp@n+1)^0,f,c
  3039  003088                     l4440:
  3040  003088  C008  FFD9         	movff	strncmp@l,fsr2l
  3041  00308C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3042  003090  50DF               	movf	indf2,w,c
  3043  003092  B4D8               	btfsc	status,2,c
  3044  003094  EF4E  F018         	goto	u4951
  3045  003098  EF50  F018         	goto	u4950
  3046  00309C                     u4951:
  3047  00309C  EF7B  F018         	goto	l4448
  3048  0030A0                     u4950:
  3049  0030A0  C00A  FFF6         	movff	strncmp@r,tblptrl
  3050  0030A4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3051  0030A8                     	if	0	;tblptru may be non-zero
  3052  0030A8                     	endif
  3053  0030A8                     	if	0	;tblptru may be non-zero
  3054  0030A8                     	endif
  3055  0030A8  0008               	tblrd		*
  3056  0030AA  50F5               	movf	tablat,w,c
  3057  0030AC  0900               	iorlw	0
  3058  0030AE  B4D8               	btfsc	status,2,c
  3059  0030B0  EF5C  F018         	goto	u4961
  3060  0030B4  EF5E  F018         	goto	u4960
  3061  0030B8                     u4961:
  3062  0030B8  EF7B  F018         	goto	l4448
  3063  0030BC                     u4960:
  3064  0030BC  5005               	movf	strncmp@n^0,w,c
  3065  0030BE  1006               	iorwf	(strncmp@n+1)^0,w,c
  3066  0030C0  B4D8               	btfsc	status,2,c
  3067  0030C2  EF65  F018         	goto	u4971
  3068  0030C6  EF67  F018         	goto	u4970
  3069  0030CA                     u4971:
  3070  0030CA  EF7B  F018         	goto	l4448
  3071  0030CE                     u4970:
  3072  0030CE  C008  FFD9         	movff	strncmp@l,fsr2l
  3073  0030D2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3074  0030D6  50DF               	movf	indf2,w,c
  3075  0030D8  6E07               	movwf	??_strncmp^0,c
  3076  0030DA  C00A  FFF6         	movff	strncmp@r,tblptrl
  3077  0030DE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3078  0030E2                     	if	0	;tblptru may be non-zero
  3079  0030E2                     	endif
  3080  0030E2                     	if	0	;tblptru may be non-zero
  3081  0030E2                     	endif
  3082  0030E2  0008               	tblrd		*
  3083  0030E4  50F5               	movf	tablat,w,c
  3084  0030E6  1807               	xorwf	??_strncmp^0,w,c
  3085  0030E8  B4D8               	btfsc	status,2,c
  3086  0030EA  EF79  F018         	goto	u4981
  3087  0030EE  EF7B  F018         	goto	u4980
  3088  0030F2                     u4981:
  3089  0030F2  EF3D  F018         	goto	l4438
  3090  0030F6                     u4980:
  3091  0030F6                     l4448:
  3092  0030F6  C008  FFD9         	movff	strncmp@l,fsr2l
  3093  0030FA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3094  0030FE  50DF               	movf	indf2,w,c
  3095  003100  6E07               	movwf	??_strncmp^0,c
  3096  003102  C00A  FFF6         	movff	strncmp@r,tblptrl
  3097  003106  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3098  00310A                     	if	0	;tblptru may be non-zero
  3099  00310A                     	endif
  3100  00310A                     	if	0	;tblptru may be non-zero
  3101  00310A                     	endif
  3102  00310A  0008               	tblrd		*
  3103  00310C  50F5               	movf	tablat,w,c
  3104  00310E  5C07               	subwf	??_strncmp^0,w,c
  3105  003110  6E01               	movwf	?_strncmp^0,c
  3106  003112  6A02               	clrf	(?_strncmp+1)^0,c
  3107  003114  A0D8               	btfss	status,0,c
  3108  003116  0602               	decf	(?_strncmp+1)^0,f,c
  3109  003118                     l1400:
  3110  003118  0012               	return		;funcret
  3111  00311A                     __end_of_strncmp:
  3112                           	callstack 0
  3113                           
  3114 ;; *************** function _efgtoa *****************
  3115 ;; Defined at:
  3116 ;;		line 332 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3119 ;;		 -> sprintf@f(6), 
  3120 ;;  f               4   65[COMRAM] PTR struct _IO_FILE
  3121 ;;  c               1   69[COMRAM] unsigned char 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;  u               4   52[BANK0 ] unsigned char 
  3124 ;;  g               4   44[BANK0 ] unsigned char 
  3125 ;;  l               4   38[BANK0 ] unsigned char 
  3126 ;;  h               4   34[BANK0 ] unsigned char 
  3127 ;;  ou              4   20[BANK0 ] unsigned char 
  3128 ;;  n               2   50[BANK0 ] int 
  3129 ;;  e               2   48[BANK0 ] int 
  3130 ;;  i               2   42[BANK0 ] int 
  3131 ;;  w               2   30[BANK0 ] int 
  3132 ;;  p               2   28[BANK0 ] int 
  3133 ;;  sign            2   26[BANK0 ] int 
  3134 ;;  d               2   24[BANK0 ] int 
  3135 ;;  m               2   18[BANK0 ] int 
  3136 ;;  ne              2   16[BANK0 ] int 
  3137 ;;  pp              2   14[BANK0 ] int 
  3138 ;;  t               2   12[BANK0 ] int 
  3139 ;;  mode            1   33[BANK0 ] unsigned char 
  3140 ;;  nmode           1   32[BANK0 ] unsigned char 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  2   63[COMRAM] int 
  3143 ;; Registers used:
  3144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3150 ;;      Params:         7       0       0       0       0       0       0
  3151 ;;      Locals:         0      56       0       0       0       0       0
  3152 ;;      Temps:          5       0       0       0       0       0       0
  3153 ;;      Totals:        12      56       0       0       0       0       0
  3154 ;;Total ram usage:       68 bytes
  3155 ;; Hardware stack levels used: 1
  3156 ;; Hardware stack levels required when called: 4
  3157 ;; This function calls:
  3158 ;;		___awdiv
  3159 ;;		___awmod
  3160 ;;		___fladd
  3161 ;;		___fldiv
  3162 ;;		___fleq
  3163 ;;		___flge
  3164 ;;		___flmul
  3165 ;;		___flneg
  3166 ;;		___flsub
  3167 ;;		___fltol
  3168 ;;		___fpclassifyf
  3169 ;;		_floorf
  3170 ;;		_isupper
  3171 ;;		_pad
  3172 ;;		_strcpy
  3173 ;;		_tolower
  3174 ;; This function is called by:
  3175 ;;		_vfpfcnvrt
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text14
  3180  000636                     __ptext14:
  3181                           	callstack 0
  3182  000636                     _efgtoa:
  3183                           	callstack 22
  3184  000636                     
  3185                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 332: static int efgt
      +                          oa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v2.32/pic/sources/c99/co
      +                          mmon/doprnt.c: 333: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c:
      +                           334:     char mode, nmode;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dop
      +                          rnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;/Applications/microchip/xc8/v2
      +                          .32/pic/sources/c99/common/doprnt.c: 336:     long double g, h, l, ou, u;
  3186  000636  0E00               	movlw	0
  3187  000638  0100               	movlb	0	; () banked
  3188  00063A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3189  00063C  0E00               	movlw	0
  3190  00063E  6F7A               	movwf	efgtoa@sign& (0+255),b
  3191  000640                     
  3192                           ; BSR set to: 0
  3193                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 340:     g = f;
  3194  000640  C042  F08C         	movff	efgtoa@f,efgtoa@g
  3195  000644  C043  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  3196  000648  C044  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  3197  00064C  C045  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  3198  000650                     
  3199                           ; BSR set to: 0
  3200                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0
      +                          ) {
  3201  000650  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3202  000652  EF2F  F003         	goto	u4330
  3203  000656  EF2D  F003         	goto	u4331
  3204  00065A                     u4331:
  3205  00065A  EF45  F003         	goto	l4092
  3206  00065E                     u4330:
  3207  00065E                     
  3208                           ; BSR set to: 0
  3209                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 342:         sign = 
      +                          1;
  3210  00065E  0E00               	movlw	0
  3211  000660  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3212  000662  0E01               	movlw	1
  3213  000664  6F7A               	movwf	efgtoa@sign& (0+255),b
  3214  000666                     
  3215                           ; BSR set to: 0
  3216                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  3217  000666  C08C  F001         	movff	efgtoa@g,___flneg@f1
  3218  00066A  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3219  00066E  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3220  000672  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3221  000676  ECDC  F01D         	call	___flneg	;wreg free
  3222  00067A  C001  F08C         	movff	?___flneg,efgtoa@g
  3223  00067E  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  3224  000682  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  3225  000686  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  3226  00068A                     l4092:
  3227                           
  3228                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  3229  00068A  0E00               	movlw	0
  3230  00068C  0100               	movlb	0	; () banked
  3231  00068E  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  3232  000690  0E00               	movlw	0
  3233  000692  6F92               	movwf	efgtoa@n& (0+255),b
  3234  000694                     
  3235                           ; BSR set to: 0
  3236                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 348:     w = width;
  3237  000694  C0DB  F07E         	movff	_width,efgtoa@w
  3238  000698  C0DC  F07F         	movff	_width+1,efgtoa@w+1
  3239  00069C                     
  3240                           ; BSR set to: 0
  3241                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 349:     if (sign ||
      +                           (flags & (1 << 2))) {
  3242  00069C  517A               	movf	efgtoa@sign& (0+255),w,b
  3243  00069E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3244  0006A0  A4D8               	btfss	status,2,c
  3245  0006A2  EF55  F003         	goto	u4341
  3246  0006A6  EF57  F003         	goto	u4340
  3247  0006AA                     u4341:
  3248  0006AA  EF5E  F003         	goto	l4100
  3249  0006AE                     u4340:
  3250  0006AE                     
  3251                           ; BSR set to: 0
  3252  0006AE  A5DF               	btfss	_flags& (0+255),2,b
  3253  0006B0  EF5C  F003         	goto	u4351
  3254  0006B4  EF5E  F003         	goto	u4350
  3255  0006B8                     u4351:
  3256  0006B8  EF78  F003         	goto	l4112
  3257  0006BC                     u4350:
  3258  0006BC                     l4100:
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 350:         dbuf[n]
      +                           = sign ? '-' : '+';
  3262  0006BC  517A               	movf	efgtoa@sign& (0+255),w,b
  3263  0006BE  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3264  0006C0  A4D8               	btfss	status,2,c
  3265  0006C2  EF65  F003         	goto	u4361
  3266  0006C6  EF67  F003         	goto	u4360
  3267  0006CA                     u4361:
  3268  0006CA  EF6D  F003         	goto	l4104
  3269  0006CE                     u4360:
  3270  0006CE                     
  3271                           ; BSR set to: 0
  3272  0006CE  0E00               	movlw	0
  3273  0006D0  6F61               	movwf	(_efgtoa$1528+1)& (0+255),b
  3274  0006D2  0E2B               	movlw	43
  3275  0006D4  6F60               	movwf	_efgtoa$1528& (0+255),b
  3276  0006D6  EF71  F003         	goto	l4106
  3277  0006DA                     l4104:
  3278                           
  3279                           ; BSR set to: 0
  3280  0006DA  0E00               	movlw	0
  3281  0006DC  6F61               	movwf	(_efgtoa$1528+1)& (0+255),b
  3282  0006DE  0E2D               	movlw	45
  3283  0006E0  6F60               	movwf	_efgtoa$1528& (0+255),b
  3284  0006E2                     l4106:
  3285                           
  3286                           ; BSR set to: 0
  3287  0006E2  C060  F100         	movff	_efgtoa$1528,_dbuf
  3288  0006E6                     
  3289                           ; BSR set to: 0
  3290                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 351:         ++n;
  3291  0006E6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3292  0006E8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3293  0006EA                     
  3294                           ; BSR set to: 0
  3295                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 352:         --w;
  3296  0006EA  077E               	decf	efgtoa@w& (0+255),f,b
  3297  0006EC  A0D8               	btfss	status,0,c
  3298  0006EE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3299  0006F0                     l4112:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 357:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3303  0006F0  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3304  0006F4  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3305  0006F8  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3306  0006FC  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3307  000700  EC37  F017         	call	___fpclassifyf	;wreg free
  3308  000704  0401               	decf	?___fpclassifyf^0,w,c
  3309  000706  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3310  000708  A4D8               	btfss	status,2,c
  3311  00070A  EF89  F003         	goto	u4371
  3312  00070E  EF8B  F003         	goto	u4370
  3313  000712                     u4371:
  3314  000712  EFE2  F003         	goto	l4130
  3315  000716                     u4370:
  3316  000716  0EBF               	movlw	191
  3317  000718  6E47               	movwf	??_efgtoa^0,c
  3318  00071A  0EFF               	movlw	255
  3319  00071C  6E48               	movwf	(??_efgtoa+1)^0,c
  3320  00071E  5046               	movf	efgtoa@c^0,w,c
  3321  000720  6E49               	movwf	(??_efgtoa+2)^0,c
  3322  000722  6A4A               	clrf	(??_efgtoa+3)^0,c
  3323  000724  5047               	movf	??_efgtoa^0,w,c
  3324  000726  2649               	addwf	(??_efgtoa+2)^0,f,c
  3325  000728  5048               	movf	(??_efgtoa+1)^0,w,c
  3326  00072A  224A               	addwfc	(??_efgtoa+3)^0,f,c
  3327  00072C  504A               	movf	(??_efgtoa+3)^0,w,c
  3328  00072E  E10A               	bnz	u4380
  3329  000730  0E1A               	movlw	26
  3330  000732  5C49               	subwf	(??_efgtoa+2)^0,w,c
  3331  000734  A0D8               	btfss	status,0,c
  3332  000736  EF9F  F003         	goto	u4381
  3333  00073A  EFA2  F003         	goto	u4380
  3334  00073E                     u4381:
  3335  00073E  0E01               	movlw	1
  3336  000740  EFA3  F003         	goto	u4390
  3337  000744                     u4380:
  3338  000744  0E00               	movlw	0
  3339  000746                     u4390:
  3340  000746  0100               	movlb	0	; () banked
  3341  000748  6F62               	movwf	_efgtoa$1529& (0+255),b
  3342  00074A  6B63               	clrf	(_efgtoa$1529+1)& (0+255),b
  3343  00074C                     
  3344                           ; BSR set to: 0
  3345  00074C  5162               	movf	_efgtoa$1529& (0+255),w,b
  3346  00074E  1163               	iorwf	(_efgtoa$1529+1)& (0+255),w,b
  3347  000750  B4D8               	btfsc	status,2,c
  3348  000752  EFAD  F003         	goto	u4401
  3349  000756  EFAF  F003         	goto	u4400
  3350  00075A                     u4401:
  3351  00075A  EFBD  F003         	goto	l4122
  3352  00075E                     u4400:
  3353  00075E                     
  3354                           ; BSR set to: 0
  3355                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 358:             str
      +                          cpy(&dbuf[n], "INF");
  3356  00075E  0E00               	movlw	low _dbuf
  3357  000760  2592               	addwf	efgtoa@n& (0+255),w,b
  3358  000762  6E01               	movwf	strcpy@dest^0,c
  3359  000764  0E01               	movlw	high _dbuf
  3360  000766  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3361  000768  6E02               	movwf	(strcpy@dest+1)^0,c
  3362  00076A  0E25               	movlw	low STR_4
  3363  00076C  6E03               	movwf	strcpy@src^0,c
  3364  00076E  0E06               	movlw	high STR_4
  3365  000770  6E04               	movwf	(strcpy@src+1)^0,c
  3366  000772  ECBA  F01C         	call	_strcpy	;wreg free
  3367                           
  3368                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 359:         } else 
      +                          {
  3369  000776  EFC9  F003         	goto	l4124
  3370  00077A                     l4122:
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 360:             str
      +                          cpy(&dbuf[n], "inf");
  3374  00077A  0E00               	movlw	low _dbuf
  3375  00077C  2592               	addwf	efgtoa@n& (0+255),w,b
  3376  00077E  6E01               	movwf	strcpy@dest^0,c
  3377  000780  0E01               	movlw	high _dbuf
  3378  000782  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3379  000784  6E02               	movwf	(strcpy@dest+1)^0,c
  3380  000786  0E2D               	movlw	low STR_5
  3381  000788  6E03               	movwf	strcpy@src^0,c
  3382  00078A  0E06               	movlw	high STR_5
  3383  00078C  6E04               	movwf	(strcpy@src+1)^0,c
  3384  00078E  ECBA  F01C         	call	_strcpy	;wreg free
  3385  000792                     l4124:
  3386                           
  3387                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 362:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3388  000792  0100               	movlb	0	; () banked
  3389  000794  0EFD               	movlw	253
  3390  000796  277E               	addwf	efgtoa@w& (0+255),f,b
  3391  000798  0EFF               	movlw	255
  3392  00079A  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3393  00079C                     l4126:
  3394                           
  3395                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 363:         return 
      +                          pad(fp, &dbuf[0], w);
  3396  00079C  C040  F011         	movff	efgtoa@fp,pad@fp
  3397  0007A0  C041  F012         	movff	efgtoa@fp+1,pad@fp+1
  3398  0007A4  0E00               	movlw	low _dbuf
  3399  0007A6  6E13               	movwf	pad@buf^0,c
  3400  0007A8  0E01               	movlw	high _dbuf
  3401  0007AA  6E14               	movwf	(pad@buf+1)^0,c
  3402  0007AC  C07E  F015         	movff	efgtoa@w,pad@p
  3403  0007B0  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  3404  0007B4  EC5B  F019         	call	_pad	;wreg free
  3405  0007B8  C011  F040         	movff	?_pad,?_efgtoa
  3406  0007BC  C012  F041         	movff	?_pad+1,?_efgtoa+1
  3407  0007C0  EF46  F009         	goto	l1179
  3408  0007C4                     l4130:
  3409                           
  3410                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 366:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3411  0007C4  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3412  0007C8  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3413  0007CC  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3414  0007D0  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3415  0007D4  EC37  F017         	call	___fpclassifyf	;wreg free
  3416  0007D8  5001               	movf	?___fpclassifyf^0,w,c
  3417  0007DA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3418  0007DC  A4D8               	btfss	status,2,c
  3419  0007DE  EFF3  F003         	goto	u4411
  3420  0007E2  EFF5  F003         	goto	u4410
  3421  0007E6                     u4411:
  3422  0007E6  EF35  F004         	goto	l4148
  3423  0007EA                     u4410:
  3424  0007EA  0EBF               	movlw	191
  3425  0007EC  6E47               	movwf	??_efgtoa^0,c
  3426  0007EE  0EFF               	movlw	255
  3427  0007F0  6E48               	movwf	(??_efgtoa+1)^0,c
  3428  0007F2  5046               	movf	efgtoa@c^0,w,c
  3429  0007F4  6E49               	movwf	(??_efgtoa+2)^0,c
  3430  0007F6  6A4A               	clrf	(??_efgtoa+3)^0,c
  3431  0007F8  5047               	movf	??_efgtoa^0,w,c
  3432  0007FA  2649               	addwf	(??_efgtoa+2)^0,f,c
  3433  0007FC  5048               	movf	(??_efgtoa+1)^0,w,c
  3434  0007FE  224A               	addwfc	(??_efgtoa+3)^0,f,c
  3435  000800  504A               	movf	(??_efgtoa+3)^0,w,c
  3436  000802  E10A               	bnz	u4420
  3437  000804  0E1A               	movlw	26
  3438  000806  5C49               	subwf	(??_efgtoa+2)^0,w,c
  3439  000808  A0D8               	btfss	status,0,c
  3440  00080A  EF09  F004         	goto	u4421
  3441  00080E  EF0C  F004         	goto	u4420
  3442  000812                     u4421:
  3443  000812  0E01               	movlw	1
  3444  000814  EF0D  F004         	goto	u4430
  3445  000818                     u4420:
  3446  000818  0E00               	movlw	0
  3447  00081A                     u4430:
  3448  00081A  0100               	movlb	0	; () banked
  3449  00081C  6F64               	movwf	_efgtoa$1534& (0+255),b
  3450  00081E  6B65               	clrf	(_efgtoa$1534+1)& (0+255),b
  3451  000820                     
  3452                           ; BSR set to: 0
  3453  000820  5164               	movf	_efgtoa$1534& (0+255),w,b
  3454  000822  1165               	iorwf	(_efgtoa$1534+1)& (0+255),w,b
  3455  000824  B4D8               	btfsc	status,2,c
  3456  000826  EF17  F004         	goto	u4441
  3457  00082A  EF19  F004         	goto	u4440
  3458  00082E                     u4441:
  3459  00082E  EF27  F004         	goto	l4140
  3460  000832                     u4440:
  3461  000832                     
  3462                           ; BSR set to: 0
  3463                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 367:             str
      +                          cpy(&dbuf[n], "NAN");
  3464  000832  0E00               	movlw	low _dbuf
  3465  000834  2592               	addwf	efgtoa@n& (0+255),w,b
  3466  000836  6E01               	movwf	strcpy@dest^0,c
  3467  000838  0E01               	movlw	high _dbuf
  3468  00083A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3469  00083C  6E02               	movwf	(strcpy@dest+1)^0,c
  3470  00083E  0E29               	movlw	low STR_8
  3471  000840  6E03               	movwf	strcpy@src^0,c
  3472  000842  0E06               	movlw	high STR_8
  3473  000844  6E04               	movwf	(strcpy@src+1)^0,c
  3474  000846  ECBA  F01C         	call	_strcpy	;wreg free
  3475                           
  3476                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 368:         } else 
      +                          {
  3477  00084A  EFC9  F003         	goto	l4124
  3478  00084E                     l4140:
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 369:             str
      +                          cpy(&dbuf[n], "nan");
  3482  00084E  0E00               	movlw	low _dbuf
  3483  000850  2592               	addwf	efgtoa@n& (0+255),w,b
  3484  000852  6E01               	movwf	strcpy@dest^0,c
  3485  000854  0E01               	movlw	high _dbuf
  3486  000856  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3487  000858  6E02               	movwf	(strcpy@dest+1)^0,c
  3488  00085A  0E31               	movlw	low STR_9
  3489  00085C  6E03               	movwf	strcpy@src^0,c
  3490  00085E  0E06               	movlw	high STR_9
  3491  000860  6E04               	movwf	(strcpy@src+1)^0,c
  3492  000862  ECBA  F01C         	call	_strcpy	;wreg free
  3493  000866  EFC9  F003         	goto	l4124
  3494  00086A                     l4148:
  3495                           
  3496                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  3497  00086A  0E00               	movlw	0
  3498  00086C  0100               	movlb	0	; () banked
  3499  00086E  6F94               	movwf	efgtoa@u& (0+255),b
  3500  000870  0E00               	movlw	0
  3501  000872  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3502  000874  0E80               	movlw	128
  3503  000876  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3504  000878  0E3F               	movlw	63
  3505  00087A  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3506                           
  3507                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  3508  00087C  0E00               	movlw	0
  3509  00087E  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3510  000880  0E00               	movlw	0
  3511  000882  6F90               	movwf	efgtoa@e& (0+255),b
  3512  000884                     
  3513                           ; BSR set to: 0
  3514                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 
      +                          0.0)) {
  3515  000884  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  3516  000888  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3517  00088C  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3518  000890  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3519  000894  0E00               	movlw	0
  3520  000896  6E05               	movwf	___fleq@ff2^0,c
  3521  000898  0E00               	movlw	0
  3522  00089A  6E06               	movwf	(___fleq@ff2+1)^0,c
  3523  00089C  0E00               	movlw	0
  3524  00089E  6E07               	movwf	(___fleq@ff2+2)^0,c
  3525  0008A0  0E00               	movlw	0
  3526  0008A2  6E08               	movwf	(___fleq@ff2+3)^0,c
  3527  0008A4  EC2B  F01B         	call	___fleq	;wreg free
  3528  0008A8  B0D8               	btfsc	status,0,c
  3529  0008AA  EF59  F004         	goto	u4451
  3530  0008AE  EF5B  F004         	goto	u4450
  3531  0008B2                     u4451:
  3532  0008B2  EFDE  F004         	goto	l4166
  3533  0008B6                     u4450:
  3534  0008B6  EF7A  F004         	goto	l4158
  3535  0008BA                     l4154:
  3536                           
  3537                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 380:             u =
      +                           u*10.0;
  3538  0008BA  C094  F001         	movff	efgtoa@u,___flmul@b
  3539  0008BE  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3540  0008C2  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3541  0008C6  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3542  0008CA  0E00               	movlw	0
  3543  0008CC  6E05               	movwf	___flmul@a^0,c
  3544  0008CE  0E00               	movlw	0
  3545  0008D0  6E06               	movwf	(___flmul@a+1)^0,c
  3546  0008D2  0E20               	movlw	32
  3547  0008D4  6E07               	movwf	(___flmul@a+2)^0,c
  3548  0008D6  0E41               	movlw	65
  3549  0008D8  6E08               	movwf	(___flmul@a+3)^0,c
  3550  0008DA  EC15  F00E         	call	___flmul	;wreg free
  3551  0008DE  C001  F094         	movff	?___flmul,efgtoa@u
  3552  0008E2  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  3553  0008E6  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  3554  0008EA  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  3555  0008EE                     
  3556                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 381:             ++e
      +                          ;
  3557  0008EE  0100               	movlb	0	; () banked
  3558  0008F0  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3559  0008F2  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3560  0008F4                     l4158:
  3561                           
  3562                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 379:         while (
      +                          !(g < (u*10.0))) {
  3563  0008F4  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3564  0008F8  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3565  0008FC  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3566  000900  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3567  000904  0E00               	movlw	0
  3568  000906  6E05               	movwf	___flmul@a^0,c
  3569  000908  0E00               	movlw	0
  3570  00090A  6E06               	movwf	(___flmul@a+1)^0,c
  3571  00090C  0E20               	movlw	32
  3572  00090E  6E07               	movwf	(___flmul@a+2)^0,c
  3573  000910  0E41               	movlw	65
  3574  000912  6E08               	movwf	(___flmul@a+3)^0,c
  3575  000914  C094  F001         	movff	efgtoa@u,___flmul@b
  3576  000918  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3577  00091C  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3578  000920  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3579  000924  EC15  F00E         	call	___flmul	;wreg free
  3580  000928  C001  F01E         	movff	?___flmul,___flge@ff2
  3581  00092C  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3582  000930  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3583  000934  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3584  000938  ECB5  F016         	call	___flge	;wreg free
  3585  00093C  B0D8               	btfsc	status,0,c
  3586  00093E  EFA3  F004         	goto	u4461
  3587  000942  EFA5  F004         	goto	u4460
  3588  000946                     u4461:
  3589  000946  EF5D  F004         	goto	l4154
  3590  00094A                     u4460:
  3591  00094A  EFC5  F004         	goto	l4164
  3592  00094E                     l4160:
  3593                           
  3594                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 384:             u =
      +                           u/10.0;
  3595  00094E  C094  F00F         	movff	efgtoa@u,___fldiv@b
  3596  000952  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  3597  000956  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  3598  00095A  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  3599  00095E  0E00               	movlw	0
  3600  000960  6E13               	movwf	___fldiv@a^0,c
  3601  000962  0E00               	movlw	0
  3602  000964  6E14               	movwf	(___fldiv@a+1)^0,c
  3603  000966  0E20               	movlw	32
  3604  000968  6E15               	movwf	(___fldiv@a+2)^0,c
  3605  00096A  0E41               	movlw	65
  3606  00096C  6E16               	movwf	(___fldiv@a+3)^0,c
  3607  00096E  EC2A  F010         	call	___fldiv	;wreg free
  3608  000972  C00F  F094         	movff	?___fldiv,efgtoa@u
  3609  000976  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  3610  00097A  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  3611  00097E  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  3612  000982                     
  3613                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 385:             --e
      +                          ;
  3614  000982  0100               	movlb	0	; () banked
  3615  000984  0790               	decf	efgtoa@e& (0+255),f,b
  3616  000986  A0D8               	btfss	status,0,c
  3617  000988  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3618  00098A                     l4164:
  3619                           
  3620                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 383:         while (
      +                          g < u) {
  3621  00098A  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3622  00098E  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3623  000992  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3624  000996  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3625  00099A  C094  F01E         	movff	efgtoa@u,___flge@ff2
  3626  00099E  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3627  0009A2  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3628  0009A6  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3629  0009AA  ECB5  F016         	call	___flge	;wreg free
  3630  0009AE  A0D8               	btfss	status,0,c
  3631  0009B0  EFDC  F004         	goto	u4471
  3632  0009B4  EFDE  F004         	goto	u4470
  3633  0009B8                     u4471:
  3634  0009B8  EFA7  F004         	goto	l4160
  3635  0009BC                     u4470:
  3636  0009BC                     l4166:
  3637                           
  3638                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 390:     mode = (cha
      +                          r)tolower((int)c);
  3639  0009BC  C046  F007         	movff	efgtoa@c,tolower@c
  3640  0009C0  6A08               	clrf	(tolower@c+1)^0,c
  3641  0009C2  EC8A  F01C         	call	_tolower	;wreg free
  3642  0009C6  5007               	movf	?_tolower^0,w,c
  3643  0009C8  0100               	movlb	0	; () banked
  3644  0009CA  6F81               	movwf	efgtoa@mode& (0+255),b
  3645  0009CC                     
  3646                           ; BSR set to: 0
  3647                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 391:     nmode = mod
      +                          e;
  3648  0009CC  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  3649  0009D0                     
  3650                           ; BSR set to: 0
  3651                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 392:     if (mode ==
      +                           'g') {
  3652  0009D0  0E67               	movlw	103
  3653  0009D2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3654  0009D4  A4D8               	btfss	status,2,c
  3655  0009D6  EFEF  F004         	goto	u4481
  3656  0009DA  EFF1  F004         	goto	u4480
  3657  0009DE                     u4481:
  3658  0009DE  EF17  F005         	goto	l4180
  3659  0009E2                     u4480:
  3660  0009E2                     
  3661                           ; BSR set to: 0
  3662                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0
      +                          ) {
  3663  0009E2  51DD               	movf	_prec& (0+255),w,b
  3664  0009E4  11DE               	iorwf	(_prec+1)& (0+255),w,b
  3665  0009E6  A4D8               	btfss	status,2,c
  3666  0009E8  EFF8  F004         	goto	u4491
  3667  0009EC  EFFA  F004         	goto	u4490
  3668  0009F0                     u4491:
  3669  0009F0  EFFE  F004         	goto	l4176
  3670  0009F4                     u4490:
  3671  0009F4                     
  3672                           ; BSR set to: 0
  3673                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  3674  0009F4  0E00               	movlw	0
  3675  0009F6  6FDE               	movwf	(_prec+1)& (0+255),b
  3676  0009F8  0E01               	movlw	1
  3677  0009FA  6FDD               	movwf	_prec& (0+255),b
  3678  0009FC                     l4176:
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 396:         p = (0 
      +                          < prec) ? prec : 6;
  3682  0009FC  BFDE               	btfsc	(_prec+1)& (0+255),7,b
  3683  0009FE  EF0B  F005         	goto	u4500
  3684  000A02  51DE               	movf	(_prec+1)& (0+255),w,b
  3685  000A04  E106               	bnz	u4501
  3686  000A06  05DD               	decf	_prec& (0+255),w,b
  3687  000A08  B0D8               	btfsc	status,0,c
  3688  000A0A  EF09  F005         	goto	u4501
  3689  000A0E  EF0B  F005         	goto	u4500
  3690  000A12                     u4501:
  3691  000A12  EF11  F005         	goto	l1197
  3692  000A16                     u4500:
  3693  000A16                     l4178:
  3694                           
  3695                           ; BSR set to: 0
  3696  000A16  0E00               	movlw	0
  3697  000A18  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3698  000A1A  0E06               	movlw	6
  3699  000A1C  6F7C               	movwf	efgtoa@p& (0+255),b
  3700  000A1E  EF20  F005         	goto	l4186
  3701  000A22                     l1197:
  3702                           
  3703                           ; BSR set to: 0
  3704  000A22  C0DD  F07C         	movff	_prec,efgtoa@p
  3705  000A26  C0DE  F07D         	movff	_prec+1,efgtoa@p+1
  3706  000A2A  EF20  F005         	goto	l4186
  3707  000A2E                     l4180:
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 398:         p = (pr
      +                          ec < 0) ? 6 : prec;
  3711  000A2E  BFDE               	btfsc	(_prec+1)& (0+255),7,b
  3712  000A30  EF1C  F005         	goto	u4511
  3713  000A34  EF1E  F005         	goto	u4510
  3714  000A38                     u4511:
  3715  000A38  EF0B  F005         	goto	l4178
  3716  000A3C                     u4510:
  3717  000A3C  EF11  F005         	goto	l1197
  3718  000A40                     l4186:
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 402:     if (mode ==
      +                           'g') {
  3722  000A40  0E67               	movlw	103
  3723  000A42  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3724  000A44  A4D8               	btfss	status,2,c
  3725  000A46  EF27  F005         	goto	u4521
  3726  000A4A  EF29  F005         	goto	u4520
  3727  000A4E                     u4521:
  3728  000A4E  EF58  F005         	goto	l4196
  3729  000A52                     u4520:
  3730  000A52                     
  3731                           ; BSR set to: 0
  3732                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 403:         if (!(e
      +                           < -4) && !((p - 1) < e)) {
  3733  000A52  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3734  000A54  EF37  F005         	goto	u4530
  3735  000A58  0EFC               	movlw	252
  3736  000A5A  5D90               	subwf	efgtoa@e& (0+255),w,b
  3737  000A5C  0EFF               	movlw	255
  3738  000A5E  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3739  000A60  A0D8               	btfss	status,0,c
  3740  000A62  EF35  F005         	goto	u4531
  3741  000A66  EF37  F005         	goto	u4530
  3742  000A6A                     u4531:
  3743  000A6A  EF56  F005         	goto	l4194
  3744  000A6E                     u4530:
  3745  000A6E                     
  3746                           ; BSR set to: 0
  3747  000A6E  0EFF               	movlw	255
  3748  000A70  6E47               	movwf	??_efgtoa^0,c
  3749  000A72  0EFF               	movlw	255
  3750  000A74  6E48               	movwf	(??_efgtoa+1)^0,c
  3751  000A76  C07C  F049         	movff	efgtoa@p,??_efgtoa+2
  3752  000A7A  C07D  F04A         	movff	efgtoa@p+1,??_efgtoa+3
  3753  000A7E  5047               	movf	??_efgtoa^0,w,c
  3754  000A80  2649               	addwf	(??_efgtoa+2)^0,f,c
  3755  000A82  5048               	movf	(??_efgtoa+1)^0,w,c
  3756  000A84  224A               	addwfc	(??_efgtoa+3)^0,f,c
  3757  000A86  5190               	movf	efgtoa@e& (0+255),w,b
  3758  000A88  5C49               	subwf	(??_efgtoa+2)^0,w,c
  3759  000A8A  504A               	movf	(??_efgtoa+3)^0,w,c
  3760  000A8C  0A80               	xorlw	128
  3761  000A8E  6E4B               	movwf	(??_efgtoa+4)^0,c
  3762  000A90  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3763  000A92  0A80               	xorlw	128
  3764  000A94  584B               	subwfb	(??_efgtoa+4)^0,w,c
  3765  000A96  A0D8               	btfss	status,0,c
  3766  000A98  EF50  F005         	goto	u4541
  3767  000A9C  EF52  F005         	goto	u4540
  3768  000AA0                     u4541:
  3769  000AA0  EF56  F005         	goto	l4194
  3770  000AA4                     u4540:
  3771  000AA4                     
  3772                           ; BSR set to: 0
  3773                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 404:             nmo
      +                          de = 'f';
  3774  000AA4  0E66               	movlw	102
  3775  000AA6  6F80               	movwf	efgtoa@nmode& (0+255),b
  3776                           
  3777                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 405:         } else 
      +                          {
  3778  000AA8  EF58  F005         	goto	l4196
  3779  000AAC                     l4194:
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 406:             nmo
      +                          de = 'e';
  3783  000AAC  0E65               	movlw	101
  3784  000AAE  6F80               	movwf	efgtoa@nmode& (0+255),b
  3785  000AB0                     l4196:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 411:     m = p;
  3789  000AB0  C07C  F072         	movff	efgtoa@p,efgtoa@m
  3790  000AB4  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  3791  000AB8                     
  3792                           ; BSR set to: 0
  3793                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 412:     if (!(mode 
      +                          == 'g') || ((nmode == 'f') && (e < 0))) {
  3794  000AB8  0E67               	movlw	103
  3795  000ABA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3796  000ABC  A4D8               	btfss	status,2,c
  3797  000ABE  EF63  F005         	goto	u4551
  3798  000AC2  EF65  F005         	goto	u4550
  3799  000AC6                     u4551:
  3800  000AC6  EF75  F005         	goto	l4204
  3801  000ACA                     u4550:
  3802  000ACA                     
  3803                           ; BSR set to: 0
  3804  000ACA  0E66               	movlw	102
  3805  000ACC  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3806  000ACE  A4D8               	btfss	status,2,c
  3807  000AD0  EF6C  F005         	goto	u4561
  3808  000AD4  EF6E  F005         	goto	u4560
  3809  000AD8                     u4561:
  3810  000AD8  EF77  F005         	goto	l4206
  3811  000ADC                     u4560:
  3812  000ADC                     
  3813                           ; BSR set to: 0
  3814  000ADC  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3815  000ADE  EF75  F005         	goto	u4570
  3816  000AE2  EF73  F005         	goto	u4571
  3817  000AE6                     u4571:
  3818  000AE6  EF77  F005         	goto	l4206
  3819  000AEA                     u4570:
  3820  000AEA                     l4204:
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 413:         ++m;
  3824  000AEA  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3825  000AEC  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3826  000AEE                     l4206:
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 417:     if (nmode =
      +                          = 'f') {
  3830  000AEE  0E66               	movlw	102
  3831  000AF0  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3832  000AF2  A4D8               	btfss	status,2,c
  3833  000AF4  EF7E  F005         	goto	u4581
  3834  000AF8  EF80  F005         	goto	u4580
  3835  000AFC                     u4581:
  3836  000AFC  EFA0  F005         	goto	l4216
  3837  000B00                     u4580:
  3838  000B00                     
  3839                           ; BSR set to: 0
  3840                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 418:         if (e <
      +                           0) {
  3841  000B00  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3842  000B02  EF87  F005         	goto	u4590
  3843  000B06  EF85  F005         	goto	u4591
  3844  000B0A                     u4591:
  3845  000B0A  EF93  F005         	goto	l4212
  3846  000B0E                     u4590:
  3847  000B0E                     
  3848                           ; BSR set to: 0
  3849                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 419:             u =
      +                           1.0;
  3850  000B0E  0E00               	movlw	0
  3851  000B10  6F94               	movwf	efgtoa@u& (0+255),b
  3852  000B12  0E00               	movlw	0
  3853  000B14  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3854  000B16  0E80               	movlw	128
  3855  000B18  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3856  000B1A  0E3F               	movlw	63
  3857  000B1C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3858                           
  3859                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 420:             e =
      +                           0;
  3860  000B1E  0E00               	movlw	0
  3861  000B20  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3862  000B22  0E00               	movlw	0
  3863  000B24  6F90               	movwf	efgtoa@e& (0+255),b
  3864  000B26                     l4212:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 422:         if (!(m
      +                          ode == 'g')) {
  3868  000B26  0E67               	movlw	103
  3869  000B28  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3870  000B2A  B4D8               	btfsc	status,2,c
  3871  000B2C  EF9A  F005         	goto	u4601
  3872  000B30  EF9C  F005         	goto	u4600
  3873  000B34                     u4601:
  3874  000B34  EFA0  F005         	goto	l4216
  3875  000B38                     u4600:
  3876  000B38                     
  3877                           ; BSR set to: 0
  3878                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 423:             m +
      +                          = e;
  3879  000B38  5190               	movf	efgtoa@e& (0+255),w,b
  3880  000B3A  2772               	addwf	efgtoa@m& (0+255),f,b
  3881  000B3C  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3882  000B3E  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3883  000B40                     l4216:
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  3887  000B40  0E00               	movlw	0
  3888  000B42  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3889  000B44  0E00               	movlw	0
  3890  000B46  6F8A               	movwf	efgtoa@i& (0+255),b
  3891  000B48                     
  3892                           ; BSR set to: 0
  3893                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 429:     h = g;
  3894  000B48  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3895  000B4C  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3896  000B50  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3897  000B54  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3898  000B58                     
  3899                           ; BSR set to: 0
  3900                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  3901  000B58  C094  F074         	movff	efgtoa@u,efgtoa@ou
  3902  000B5C  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  3903  000B60  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  3904  000B64  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  3905                           
  3906                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 431:     while (i < 
      +                          m) {
  3907  000B68  EF31  F006         	goto	l4230
  3908  000B6C                     l4222:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 432:         l = flo
      +                          orf(h/u);
  3912  000B6C  C082  F00F         	movff	efgtoa@h,___fldiv@b
  3913  000B70  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  3914  000B74  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  3915  000B78  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  3916  000B7C  C094  F013         	movff	efgtoa@u,___fldiv@a
  3917  000B80  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  3918  000B84  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  3919  000B88  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  3920  000B8C  EC2A  F010         	call	___fldiv	;wreg free
  3921  000B90  C00F  F028         	movff	?___fldiv,floorf@x
  3922  000B94  C010  F029         	movff	?___fldiv+1,floorf@x+1
  3923  000B98  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  3924  000B9C  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  3925  000BA0  ECF7  F011         	call	_floorf	;wreg free
  3926  000BA4  C028  F086         	movff	?_floorf,efgtoa@l
  3927  000BA8  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  3928  000BAC  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  3929  000BB0  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  3930                           
  3931                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 433:         d = (in
      +                          t)l;
  3932  000BB4  C086  F001         	movff	efgtoa@l,___fltol@f1
  3933  000BB8  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3934  000BBC  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3935  000BC0  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3936  000BC4  EC32  F016         	call	___fltol	;wreg free
  3937  000BC8  C001  F078         	movff	?___fltol,efgtoa@d
  3938  000BCC  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3939  000BD0                     
  3940                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 434:         h -= l*
      +                          u;
  3941  000BD0  C082  F038         	movff	efgtoa@h,___flsub@b
  3942  000BD4  C083  F039         	movff	efgtoa@h+1,___flsub@b+1
  3943  000BD8  C084  F03A         	movff	efgtoa@h+2,___flsub@b+2
  3944  000BDC  C085  F03B         	movff	efgtoa@h+3,___flsub@b+3
  3945  000BE0  C094  F005         	movff	efgtoa@u,___flmul@a
  3946  000BE4  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3947  000BE8  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3948  000BEC  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3949  000BF0  C086  F001         	movff	efgtoa@l,___flmul@b
  3950  000BF4  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3951  000BF8  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3952  000BFC  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3953  000C00  EC15  F00E         	call	___flmul	;wreg free
  3954  000C04  C001  F03C         	movff	?___flmul,___flsub@a
  3955  000C08  C002  F03D         	movff	?___flmul+1,___flsub@a+1
  3956  000C0C  C003  F03E         	movff	?___flmul+2,___flsub@a+2
  3957  000C10  C004  F03F         	movff	?___flmul+3,___flsub@a+3
  3958  000C14  EC3A  F01D         	call	___flsub	;wreg free
  3959  000C18  C038  F082         	movff	?___flsub,efgtoa@h
  3960  000C1C  C039  F083         	movff	?___flsub+1,efgtoa@h+1
  3961  000C20  C03A  F084         	movff	?___flsub+2,efgtoa@h+2
  3962  000C24  C03B  F085         	movff	?___flsub+3,efgtoa@h+3
  3963  000C28                     
  3964                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 435:         u = u/1
      +                          0.0;
  3965  000C28  C094  F00F         	movff	efgtoa@u,___fldiv@b
  3966  000C2C  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  3967  000C30  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  3968  000C34  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  3969  000C38  0E00               	movlw	0
  3970  000C3A  6E13               	movwf	___fldiv@a^0,c
  3971  000C3C  0E00               	movlw	0
  3972  000C3E  6E14               	movwf	(___fldiv@a+1)^0,c
  3973  000C40  0E20               	movlw	32
  3974  000C42  6E15               	movwf	(___fldiv@a+2)^0,c
  3975  000C44  0E41               	movlw	65
  3976  000C46  6E16               	movwf	(___fldiv@a+3)^0,c
  3977  000C48  EC2A  F010         	call	___fldiv	;wreg free
  3978  000C4C  C00F  F094         	movff	?___fldiv,efgtoa@u
  3979  000C50  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  3980  000C54  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  3981  000C58  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  3982  000C5C                     
  3983                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 436:         ++i;
  3984  000C5C  0100               	movlb	0	; () banked
  3985  000C5E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3986  000C60  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3987  000C62                     l4230:
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 431:     while (i < 
      +                          m) {
  3991  000C62  5172               	movf	efgtoa@m& (0+255),w,b
  3992  000C64  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3993  000C66  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3994  000C68  0A80               	xorlw	128
  3995  000C6A  6E47               	movwf	??_efgtoa^0,c
  3996  000C6C  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3997  000C6E  0A80               	xorlw	128
  3998  000C70  5847               	subwfb	??_efgtoa^0,w,c
  3999  000C72  A0D8               	btfss	status,0,c
  4000  000C74  EF3E  F006         	goto	u4611
  4001  000C78  EF40  F006         	goto	u4610
  4002  000C7C                     u4611:
  4003  000C7C  EFB6  F005         	goto	l4222
  4004  000C80                     u4610:
  4005  000C80                     
  4006                           ; BSR set to: 0
  4007                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  4008  000C80  C094  F001         	movff	efgtoa@u,___flmul@b
  4009  000C84  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4010  000C88  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4011  000C8C  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4012  000C90  0E00               	movlw	0
  4013  000C92  6E05               	movwf	___flmul@a^0,c
  4014  000C94  0E00               	movlw	0
  4015  000C96  6E06               	movwf	(___flmul@a+1)^0,c
  4016  000C98  0EA0               	movlw	160
  4017  000C9A  6E07               	movwf	(___flmul@a+2)^0,c
  4018  000C9C  0E40               	movlw	64
  4019  000C9E  6E08               	movwf	(___flmul@a+3)^0,c
  4020  000CA0  EC15  F00E         	call	___flmul	;wreg free
  4021  000CA4  C001  F086         	movff	?___flmul,efgtoa@l
  4022  000CA8  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  4023  000CAC  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  4024  000CB0  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  4025  000CB4                     
  4026                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 441:     if (h < l) 
      +                          {
  4027  000CB4  C082  F01A         	movff	efgtoa@h,___flge@ff1
  4028  000CB8  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4029  000CBC  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4030  000CC0  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4031  000CC4  C086  F01E         	movff	efgtoa@l,___flge@ff2
  4032  000CC8  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  4033  000CCC  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  4034  000CD0  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  4035  000CD4  ECB5  F016         	call	___flge	;wreg free
  4036  000CD8  B0D8               	btfsc	status,0,c
  4037  000CDA  EF71  F006         	goto	u4621
  4038  000CDE  EF73  F006         	goto	u4620
  4039  000CE2                     u4621:
  4040  000CE2  EF7E  F006         	goto	l4238
  4041  000CE6                     u4620:
  4042  000CE6                     
  4043                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 442:         l = 0.0
      +                          ;
  4044  000CE6  0E00               	movlw	0
  4045  000CE8  0100               	movlb	0	; () banked
  4046  000CEA  6F86               	movwf	efgtoa@l& (0+255),b
  4047  000CEC  0E00               	movlw	0
  4048  000CEE  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4049  000CF0  0E00               	movlw	0
  4050  000CF2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4051  000CF4  0E00               	movlw	0
  4052  000CF6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4053                           
  4054                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 443:     } else {
  4055  000CF8  EFA7  F006         	goto	l4244
  4056  000CFC                     l4238:
  4057                           
  4058                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 445:         if ((h 
      +                          == l) && !(d % 2)) {
  4059  000CFC  C082  F001         	movff	efgtoa@h,___fleq@ff1
  4060  000D00  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4061  000D04  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4062  000D08  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4063  000D0C  C086  F005         	movff	efgtoa@l,___fleq@ff2
  4064  000D10  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4065  000D14  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4066  000D18  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4067  000D1C  EC2B  F01B         	call	___fleq	;wreg free
  4068  000D20  A0D8               	btfss	status,0,c
  4069  000D22  EF95  F006         	goto	u4631
  4070  000D26  EF97  F006         	goto	u4630
  4071  000D2A                     u4631:
  4072  000D2A  EFA7  F006         	goto	l4244
  4073  000D2E                     u4630:
  4074  000D2E  0100               	movlb	0	; () banked
  4075  000D30  B178               	btfsc	efgtoa@d& (0+255),0,b
  4076  000D32  EF9D  F006         	goto	u4641
  4077  000D36  EF9F  F006         	goto	u4640
  4078  000D3A                     u4641:
  4079  000D3A  EFA7  F006         	goto	l4244
  4080  000D3E                     u4640:
  4081  000D3E                     
  4082                           ; BSR set to: 0
  4083                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 446:             l =
      +                           0.0;
  4084  000D3E  0E00               	movlw	0
  4085  000D40  6F86               	movwf	efgtoa@l& (0+255),b
  4086  000D42  0E00               	movlw	0
  4087  000D44  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4088  000D46  0E00               	movlw	0
  4089  000D48  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4090  000D4A  0E00               	movlw	0
  4091  000D4C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4092  000D4E                     l4244:
  4093                           
  4094                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  4095  000D4E  C08C  F028         	movff	efgtoa@g,___fladd@b
  4096  000D52  C08D  F029         	movff	efgtoa@g+1,___fladd@b+1
  4097  000D56  C08E  F02A         	movff	efgtoa@g+2,___fladd@b+2
  4098  000D5A  C08F  F02B         	movff	efgtoa@g+3,___fladd@b+3
  4099  000D5E  C086  F02C         	movff	efgtoa@l,___fladd@a
  4100  000D62  C087  F02D         	movff	efgtoa@l+1,___fladd@a+1
  4101  000D66  C088  F02E         	movff	efgtoa@l+2,___fladd@a+2
  4102  000D6A  C089  F02F         	movff	efgtoa@l+3,___fladd@a+3
  4103  000D6E  ECB5  F00B         	call	___fladd	;wreg free
  4104  000D72  C028  F082         	movff	?___fladd,efgtoa@h
  4105  000D76  C029  F083         	movff	?___fladd+1,efgtoa@h+1
  4106  000D7A  C02A  F084         	movff	?___fladd+2,efgtoa@h+2
  4107  000D7E  C02B  F085         	movff	?___fladd+3,efgtoa@h+3
  4108  000D82                     
  4109                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*1
      +                          0.0)) {
  4110  000D82  C082  F01A         	movff	efgtoa@h,___flge@ff1
  4111  000D86  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4112  000D8A  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4113  000D8E  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4114  000D92  0E00               	movlw	0
  4115  000D94  6E05               	movwf	___flmul@a^0,c
  4116  000D96  0E00               	movlw	0
  4117  000D98  6E06               	movwf	(___flmul@a+1)^0,c
  4118  000D9A  0E20               	movlw	32
  4119  000D9C  6E07               	movwf	(___flmul@a+2)^0,c
  4120  000D9E  0E41               	movlw	65
  4121  000DA0  6E08               	movwf	(___flmul@a+3)^0,c
  4122  000DA2  C074  F001         	movff	efgtoa@ou,___flmul@b
  4123  000DA6  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4124  000DAA  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4125  000DAE  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4126  000DB2  EC15  F00E         	call	___flmul	;wreg free
  4127  000DB6  C001  F01E         	movff	?___flmul,___flge@ff2
  4128  000DBA  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4129  000DBE  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4130  000DC2  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4131  000DC6  ECB5  F016         	call	___flge	;wreg free
  4132  000DCA  A0D8               	btfss	status,0,c
  4133  000DCC  EFEA  F006         	goto	u4651
  4134  000DD0  EFEC  F006         	goto	u4650
  4135  000DD4                     u4651:
  4136  000DD4  EF15  F007         	goto	l4256
  4137  000DD8                     u4650:
  4138  000DD8                     
  4139                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 454:   e++;
  4140  000DD8  0100               	movlb	0	; () banked
  4141  000DDA  4B90               	infsnz	efgtoa@e& (0+255),f,b
  4142  000DDC  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4143  000DDE                     
  4144                           ; BSR set to: 0
  4145                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  4146  000DDE  C074  F001         	movff	efgtoa@ou,___flmul@b
  4147  000DE2  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4148  000DE6  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4149  000DEA  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4150  000DEE  0E00               	movlw	0
  4151  000DF0  6E05               	movwf	___flmul@a^0,c
  4152  000DF2  0E00               	movlw	0
  4153  000DF4  6E06               	movwf	(___flmul@a+1)^0,c
  4154  000DF6  0E20               	movlw	32
  4155  000DF8  6E07               	movwf	(___flmul@a+2)^0,c
  4156  000DFA  0E41               	movlw	65
  4157  000DFC  6E08               	movwf	(___flmul@a+3)^0,c
  4158  000DFE  EC15  F00E         	call	___flmul	;wreg free
  4159  000E02  C001  F074         	movff	?___flmul,efgtoa@ou
  4160  000E06  C002  F075         	movff	?___flmul+1,efgtoa@ou+1
  4161  000E0A  C003  F076         	movff	?___flmul+2,efgtoa@ou+2
  4162  000E0E  C004  F077         	movff	?___flmul+3,efgtoa@ou+3
  4163  000E12                     
  4164                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 
      +                          'f') {
  4165  000E12  0E66               	movlw	102
  4166  000E14  0100               	movlb	0	; () banked
  4167  000E16  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4168  000E18  A4D8               	btfss	status,2,c
  4169  000E1A  EF11  F007         	goto	u4661
  4170  000E1E  EF13  F007         	goto	u4660
  4171  000E22                     u4661:
  4172  000E22  EF15  F007         	goto	l4256
  4173  000E26                     u4660:
  4174  000E26                     
  4175                           ; BSR set to: 0
  4176                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 458:    m++;
  4177  000E26  4B72               	infsnz	efgtoa@m& (0+255),f,b
  4178  000E28  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  4179  000E2A                     l4256:
  4180                           
  4181                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  4182  000E2A  C074  F094         	movff	efgtoa@ou,efgtoa@u
  4183  000E2E  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  4184  000E32  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  4185  000E36  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  4186  000E3A                     
  4187                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode
      +                           == 'e') ? 0 : e;
  4188  000E3A  0E65               	movlw	101
  4189  000E3C  0100               	movlb	0	; () banked
  4190  000E3E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4191  000E40  B4D8               	btfsc	status,2,c
  4192  000E42  EF25  F007         	goto	u4671
  4193  000E46  EF27  F007         	goto	u4670
  4194  000E4A                     u4671:
  4195  000E4A  EF2D  F007         	goto	l4262
  4196  000E4E                     u4670:
  4197  000E4E                     
  4198                           ; BSR set to: 0
  4199  000E4E  C090  F070         	movff	efgtoa@e,efgtoa@ne
  4200  000E52  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  4201  000E56  EF31  F007         	goto	l1225
  4202  000E5A                     l4262:
  4203                           
  4204                           ; BSR set to: 0
  4205  000E5A  0E00               	movlw	0
  4206  000E5C  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  4207  000E5E  0E00               	movlw	0
  4208  000E60  6F70               	movwf	efgtoa@ne& (0+255),b
  4209  000E62                     l1225:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  4213  000E62  0E00               	movlw	0
  4214  000E64  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  4215  000E66  0E00               	movlw	0
  4216  000E68  6F6E               	movwf	efgtoa@pp& (0+255),b
  4217                           
  4218                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  4219  000E6A  0E00               	movlw	0
  4220  000E6C  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  4221  000E6E  0E00               	movlw	0
  4222  000E70  6F6C               	movwf	efgtoa@t& (0+255),b
  4223                           
  4224                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  4225  000E72  0E00               	movlw	0
  4226  000E74  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4227  000E76  0E00               	movlw	0
  4228  000E78  6F8A               	movwf	efgtoa@i& (0+255),b
  4229                           
  4230                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 468:     while ((i <
      +                           m) && (n < (80 - 5))) {
  4231  000E7A  EF2C  F008         	goto	l4312
  4232  000E7E                     l4264:
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 469:         l = flo
      +                          orf(h/u);
  4236  000E7E  C082  F00F         	movff	efgtoa@h,___fldiv@b
  4237  000E82  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  4238  000E86  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  4239  000E8A  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  4240  000E8E  C094  F013         	movff	efgtoa@u,___fldiv@a
  4241  000E92  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  4242  000E96  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  4243  000E9A  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  4244  000E9E  EC2A  F010         	call	___fldiv	;wreg free
  4245  000EA2  C00F  F028         	movff	?___fldiv,floorf@x
  4246  000EA6  C010  F029         	movff	?___fldiv+1,floorf@x+1
  4247  000EAA  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  4248  000EAE  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  4249  000EB2  ECF7  F011         	call	_floorf	;wreg free
  4250  000EB6  C028  F086         	movff	?_floorf,efgtoa@l
  4251  000EBA  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  4252  000EBE  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  4253  000EC2  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  4254                           
  4255                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 470:         d = (in
      +                          t)l;
  4256  000EC6  C086  F001         	movff	efgtoa@l,___fltol@f1
  4257  000ECA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4258  000ECE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4259  000ED2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4260  000ED6  EC32  F016         	call	___fltol	;wreg free
  4261  000EDA  C001  F078         	movff	?___fltol,efgtoa@d
  4262  000EDE  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4263  000EE2                     
  4264                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 471:         if (!(f
      +                          lags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4265  000EE2  0100               	movlb	0	; () banked
  4266  000EE4  B9DF               	btfsc	_flags& (0+255),4,b
  4267  000EE6  EF77  F007         	goto	u4681
  4268  000EEA  EF79  F007         	goto	u4680
  4269  000EEE                     u4681:
  4270  000EEE  EF96  F007         	goto	l4276
  4271  000EF2                     u4680:
  4272  000EF2                     
  4273                           ; BSR set to: 0
  4274  000EF2  5178               	movf	efgtoa@d& (0+255),w,b
  4275  000EF4  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4276  000EF6  A4D8               	btfss	status,2,c
  4277  000EF8  EF80  F007         	goto	u4691
  4278  000EFC  EF82  F007         	goto	u4690
  4279  000F00                     u4691:
  4280  000F00  EF96  F007         	goto	l4276
  4281  000F04                     u4690:
  4282  000F04                     
  4283                           ; BSR set to: 0
  4284  000F04  0E67               	movlw	103
  4285  000F06  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4286  000F08  A4D8               	btfss	status,2,c
  4287  000F0A  EF89  F007         	goto	u4701
  4288  000F0E  EF8B  F007         	goto	u4700
  4289  000F12                     u4701:
  4290  000F12  EF96  F007         	goto	l4276
  4291  000F16                     u4700:
  4292  000F16                     
  4293                           ; BSR set to: 0
  4294  000F16  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4295  000F18  EF92  F007         	goto	u4710
  4296  000F1C  EF90  F007         	goto	u4711
  4297  000F20                     u4711:
  4298  000F20  EF96  F007         	goto	l4276
  4299  000F24                     u4710:
  4300  000F24                     
  4301                           ; BSR set to: 0
  4302                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 472:             ++t
      +                          ;
  4303  000F24  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  4304  000F26  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  4305                           
  4306                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 473:         } else 
      +                          {
  4307  000F28  EFE0  F007         	goto	l4304
  4308  000F2C                     l4276:
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 474:             if 
      +                          (!pp && (ne < 0)) {
  4312  000F2C  516E               	movf	efgtoa@pp& (0+255),w,b
  4313  000F2E  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4314  000F30  A4D8               	btfss	status,2,c
  4315  000F32  EF9D  F007         	goto	u4721
  4316  000F36  EF9F  F007         	goto	u4720
  4317  000F3A                     u4721:
  4318  000F3A  EFC9  F007         	goto	l4296
  4319  000F3E                     u4720:
  4320  000F3E                     
  4321                           ; BSR set to: 0
  4322  000F3E  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4323  000F40  EFA6  F007         	goto	u4730
  4324  000F44  EFA4  F007         	goto	u4731
  4325  000F48                     u4731:
  4326  000F48  EFC9  F007         	goto	l4296
  4327  000F4C                     u4730:
  4328  000F4C                     
  4329                           ; BSR set to: 0
  4330                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 475:                
      +                           dbuf[n++] = '.';
  4331  000F4C  0E00               	movlw	low _dbuf
  4332  000F4E  2592               	addwf	efgtoa@n& (0+255),w,b
  4333  000F50  6ED9               	movwf	fsr2l,c
  4334  000F52  0E01               	movlw	high _dbuf
  4335  000F54  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4336  000F56  6EDA               	movwf	fsr2h,c
  4337  000F58  0E2E               	movlw	46
  4338  000F5A  6EDF               	movwf	indf2,c
  4339  000F5C                     
  4340                           ; BSR set to: 0
  4341  000F5C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4342  000F5E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4343  000F60                     
  4344                           ; BSR set to: 0
  4345                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 476:                
      +                           --w;
  4346  000F60  077E               	decf	efgtoa@w& (0+255),f,b
  4347  000F62  A0D8               	btfss	status,0,c
  4348  000F64  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4349  000F66                     
  4350                           ; BSR set to: 0
  4351                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 477:                
      +                           pp = 1;
  4352  000F66  0E00               	movlw	0
  4353  000F68  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  4354  000F6A  0E01               	movlw	1
  4355  000F6C  6F6E               	movwf	efgtoa@pp& (0+255),b
  4356  000F6E  EFC9  F007         	goto	l4296
  4357  000F72                     l4288:
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 480:                
      +                           dbuf[n++] = '0';
  4361  000F72  0E00               	movlw	low _dbuf
  4362  000F74  2592               	addwf	efgtoa@n& (0+255),w,b
  4363  000F76  6ED9               	movwf	fsr2l,c
  4364  000F78  0E01               	movlw	high _dbuf
  4365  000F7A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4366  000F7C  6EDA               	movwf	fsr2h,c
  4367  000F7E  0E30               	movlw	48
  4368  000F80  6EDF               	movwf	indf2,c
  4369  000F82                     
  4370                           ; BSR set to: 0
  4371  000F82  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4372  000F84  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4373  000F86                     
  4374                           ; BSR set to: 0
  4375                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 481:                
      +                           --w;
  4376  000F86  077E               	decf	efgtoa@w& (0+255),f,b
  4377  000F88  A0D8               	btfss	status,0,c
  4378  000F8A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4379  000F8C                     
  4380                           ; BSR set to: 0
  4381                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 482:                
      +                           --t;
  4382  000F8C  076C               	decf	efgtoa@t& (0+255),f,b
  4383  000F8E  A0D8               	btfss	status,0,c
  4384  000F90  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  4385  000F92                     l4296:
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 479:             whi
      +                          le (t) {
  4389  000F92  516C               	movf	efgtoa@t& (0+255),w,b
  4390  000F94  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4391  000F96  A4D8               	btfss	status,2,c
  4392  000F98  EFD0  F007         	goto	u4741
  4393  000F9C  EFD2  F007         	goto	u4740
  4394  000FA0                     u4741:
  4395  000FA0  EFB9  F007         	goto	l4288
  4396  000FA4                     u4740:
  4397  000FA4                     
  4398                           ; BSR set to: 0
  4399                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 484:             dbu
      +                          f[n++] = (char)((int)'0' + d);
  4400  000FA4  0E00               	movlw	low _dbuf
  4401  000FA6  2592               	addwf	efgtoa@n& (0+255),w,b
  4402  000FA8  6ED9               	movwf	fsr2l,c
  4403  000FAA  0E01               	movlw	high _dbuf
  4404  000FAC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4405  000FAE  6EDA               	movwf	fsr2h,c
  4406  000FB0  5178               	movf	efgtoa@d& (0+255),w,b
  4407  000FB2  0F30               	addlw	48
  4408  000FB4  6EDF               	movwf	indf2,c
  4409  000FB6                     
  4410                           ; BSR set to: 0
  4411  000FB6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4412  000FB8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4413  000FBA                     
  4414                           ; BSR set to: 0
  4415                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 485:             --w
      +                          ;
  4416  000FBA  077E               	decf	efgtoa@w& (0+255),f,b
  4417  000FBC  A0D8               	btfss	status,0,c
  4418  000FBE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4419  000FC0                     l4304:
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 487:         h -= l*
      +                          u;
  4423  000FC0  C082  F038         	movff	efgtoa@h,___flsub@b
  4424  000FC4  C083  F039         	movff	efgtoa@h+1,___flsub@b+1
  4425  000FC8  C084  F03A         	movff	efgtoa@h+2,___flsub@b+2
  4426  000FCC  C085  F03B         	movff	efgtoa@h+3,___flsub@b+3
  4427  000FD0  C094  F005         	movff	efgtoa@u,___flmul@a
  4428  000FD4  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  4429  000FD8  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  4430  000FDC  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  4431  000FE0  C086  F001         	movff	efgtoa@l,___flmul@b
  4432  000FE4  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  4433  000FE8  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  4434  000FEC  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  4435  000FF0  EC15  F00E         	call	___flmul	;wreg free
  4436  000FF4  C001  F03C         	movff	?___flmul,___flsub@a
  4437  000FF8  C002  F03D         	movff	?___flmul+1,___flsub@a+1
  4438  000FFC  C003  F03E         	movff	?___flmul+2,___flsub@a+2
  4439  001000  C004  F03F         	movff	?___flmul+3,___flsub@a+3
  4440  001004  EC3A  F01D         	call	___flsub	;wreg free
  4441  001008  C038  F082         	movff	?___flsub,efgtoa@h
  4442  00100C  C039  F083         	movff	?___flsub+1,efgtoa@h+1
  4443  001010  C03A  F084         	movff	?___flsub+2,efgtoa@h+2
  4444  001014  C03B  F085         	movff	?___flsub+3,efgtoa@h+3
  4445  001018                     
  4446                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 488:         u = u/1
      +                          0.0;
  4447  001018  C094  F00F         	movff	efgtoa@u,___fldiv@b
  4448  00101C  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  4449  001020  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  4450  001024  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  4451  001028  0E00               	movlw	0
  4452  00102A  6E13               	movwf	___fldiv@a^0,c
  4453  00102C  0E00               	movlw	0
  4454  00102E  6E14               	movwf	(___fldiv@a+1)^0,c
  4455  001030  0E20               	movlw	32
  4456  001032  6E15               	movwf	(___fldiv@a+2)^0,c
  4457  001034  0E41               	movlw	65
  4458  001036  6E16               	movwf	(___fldiv@a+3)^0,c
  4459  001038  EC2A  F010         	call	___fldiv	;wreg free
  4460  00103C  C00F  F094         	movff	?___fldiv,efgtoa@u
  4461  001040  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  4462  001044  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  4463  001048  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  4464  00104C                     
  4465                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 489:         --ne;
  4466  00104C  0100               	movlb	0	; () banked
  4467  00104E  0770               	decf	efgtoa@ne& (0+255),f,b
  4468  001050  A0D8               	btfss	status,0,c
  4469  001052  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  4470  001054                     
  4471                           ; BSR set to: 0
  4472                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 490:         ++i;
  4473  001054  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4474  001056  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4475  001058                     l4312:
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 468:     while ((i <
      +                           m) && (n < (80 - 5))) {
  4479  001058  5172               	movf	efgtoa@m& (0+255),w,b
  4480  00105A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4481  00105C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4482  00105E  0A80               	xorlw	128
  4483  001060  6E47               	movwf	??_efgtoa^0,c
  4484  001062  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  4485  001064  0A80               	xorlw	128
  4486  001066  5847               	subwfb	??_efgtoa^0,w,c
  4487  001068  B0D8               	btfsc	status,0,c
  4488  00106A  EF39  F008         	goto	u4751
  4489  00106E  EF3B  F008         	goto	u4750
  4490  001072                     u4751:
  4491  001072  EF49  F008         	goto	l4316
  4492  001076                     u4750:
  4493  001076                     
  4494                           ; BSR set to: 0
  4495  001076  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4496  001078  EF47  F008         	goto	u4761
  4497  00107C  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4498  00107E  E109               	bnz	u4760
  4499  001080  0E4B               	movlw	75
  4500  001082  5D92               	subwf	efgtoa@n& (0+255),w,b
  4501  001084  A0D8               	btfss	status,0,c
  4502  001086  EF47  F008         	goto	u4761
  4503  00108A  EF49  F008         	goto	u4760
  4504  00108E                     u4761:
  4505  00108E  EF3F  F007         	goto	l4264
  4506  001092                     u4760:
  4507  001092                     l4316:
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 492:     if (!pp && 
      +                          (flags & (1 << 4))) {
  4511  001092  516E               	movf	efgtoa@pp& (0+255),w,b
  4512  001094  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4513  001096  A4D8               	btfss	status,2,c
  4514  001098  EF50  F008         	goto	u4771
  4515  00109C  EF52  F008         	goto	u4770
  4516  0010A0                     u4771:
  4517  0010A0  EF63  F008         	goto	l4324
  4518  0010A4                     u4770:
  4519  0010A4                     
  4520                           ; BSR set to: 0
  4521  0010A4  A9DF               	btfss	_flags& (0+255),4,b
  4522  0010A6  EF57  F008         	goto	u4781
  4523  0010AA  EF59  F008         	goto	u4780
  4524  0010AE                     u4781:
  4525  0010AE  EF63  F008         	goto	l4324
  4526  0010B2                     u4780:
  4527  0010B2                     
  4528                           ; BSR set to: 0
  4529                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 493:         dbuf[n+
      +                          +] = '.';
  4530  0010B2  0E00               	movlw	low _dbuf
  4531  0010B4  2592               	addwf	efgtoa@n& (0+255),w,b
  4532  0010B6  6ED9               	movwf	fsr2l,c
  4533  0010B8  0E01               	movlw	high _dbuf
  4534  0010BA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4535  0010BC  6EDA               	movwf	fsr2h,c
  4536  0010BE  0E2E               	movlw	46
  4537  0010C0  6EDF               	movwf	indf2,c
  4538  0010C2                     
  4539                           ; BSR set to: 0
  4540  0010C2  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4541  0010C4  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4542  0010C6                     l4324:
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '
      +                          \0';
  4546  0010C6  0E00               	movlw	low _dbuf
  4547  0010C8  2592               	addwf	efgtoa@n& (0+255),w,b
  4548  0010CA  6ED9               	movwf	fsr2l,c
  4549  0010CC  0E01               	movlw	high _dbuf
  4550  0010CE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4551  0010D0  6EDA               	movwf	fsr2h,c
  4552  0010D2  0E00               	movlw	0
  4553  0010D4  6EDF               	movwf	indf2,c
  4554  0010D6                     
  4555                           ; BSR set to: 0
  4556                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 498:     if (nmode =
      +                          = 'e') {
  4557  0010D6  0E65               	movlw	101
  4558  0010D8  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4559  0010DA  A4D8               	btfss	status,2,c
  4560  0010DC  EF72  F008         	goto	u4791
  4561  0010E0  EF74  F008         	goto	u4790
  4562  0010E4                     u4791:
  4563  0010E4  EFCE  F003         	goto	l4126
  4564  0010E8                     u4790:
  4565  0010E8                     
  4566                           ; BSR set to: 0
  4567                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 499:         i = siz
      +                          eof(dbuf) - 1;
  4568  0010E8  0E00               	movlw	0
  4569  0010EA  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4570  0010EC  0E4F               	movlw	79
  4571  0010EE  6F8A               	movwf	efgtoa@i& (0+255),b
  4572  0010F0                     
  4573                           ; BSR set to: 0
  4574                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 500:         dbuf[i]
      +                           = '\0';
  4575  0010F0  0E00               	movlw	low _dbuf
  4576  0010F2  258A               	addwf	efgtoa@i& (0+255),w,b
  4577  0010F4  6ED9               	movwf	fsr2l,c
  4578  0010F6  0E01               	movlw	high _dbuf
  4579  0010F8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4580  0010FA  6EDA               	movwf	fsr2h,c
  4581  0010FC  0E00               	movlw	0
  4582  0010FE  6EDF               	movwf	indf2,c
  4583  001100                     
  4584                           ; BSR set to: 0
  4585                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 501:         sign = 
      +                          0;
  4586  001100  0E00               	movlw	0
  4587  001102  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4588  001104  0E00               	movlw	0
  4589  001106  6F7A               	movwf	efgtoa@sign& (0+255),b
  4590  001108                     
  4591                           ; BSR set to: 0
  4592                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 502:         if (e <
      +                           0) {
  4593  001108  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4594  00110A  EF8B  F008         	goto	u4800
  4595  00110E  EF89  F008         	goto	u4801
  4596  001112                     u4801:
  4597  001112  EF93  F008         	goto	l4340
  4598  001116                     u4800:
  4599  001116                     
  4600                           ; BSR set to: 0
  4601                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 503:             sig
      +                          n = 1;
  4602  001116  0E00               	movlw	0
  4603  001118  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4604  00111A  0E01               	movlw	1
  4605  00111C  6F7A               	movwf	efgtoa@sign& (0+255),b
  4606  00111E                     
  4607                           ; BSR set to: 0
  4608                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 504:             e =
      +                           -e;
  4609  00111E  6D90               	negf	efgtoa@e& (0+255),b
  4610  001120  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4611  001122  B0D8               	btfsc	status,0,c
  4612  001124  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4613  001126                     l4340:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  4617  001126  0E00               	movlw	0
  4618  001128  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4619  00112A  0E02               	movlw	2
  4620  00112C  6F7C               	movwf	efgtoa@p& (0+255),b
  4621                           
  4622                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 507:         while (
      +                          e || (0 < p)) {
  4623  00112E  EFC4  F008         	goto	l4352
  4624  001132                     l4342:
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 508:             --i
      +                          ;
  4628  001132  078A               	decf	efgtoa@i& (0+255),f,b
  4629  001134  A0D8               	btfss	status,0,c
  4630  001136  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4631  001138                     
  4632                           ; BSR set to: 0
  4633                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 509:             dbu
      +                          f[i] = '0' + (e % 10);
  4634  001138  0E00               	movlw	low _dbuf
  4635  00113A  258A               	addwf	efgtoa@i& (0+255),w,b
  4636  00113C  6ED9               	movwf	fsr2l,c
  4637  00113E  0E01               	movlw	high _dbuf
  4638  001140  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4639  001142  6EDA               	movwf	fsr2h,c
  4640  001144  C090  F001         	movff	efgtoa@e,___awmod@dividend
  4641  001148  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4642  00114C  0E00               	movlw	0
  4643  00114E  6E04               	movwf	(___awmod@divisor+1)^0,c
  4644  001150  0E0A               	movlw	10
  4645  001152  6E03               	movwf	___awmod@divisor^0,c
  4646  001154  EC7D  F01A         	call	___awmod	;wreg free
  4647  001158  5001               	movf	?___awmod^0,w,c
  4648  00115A  0F30               	addlw	48
  4649  00115C  6EDF               	movwf	indf2,c
  4650  00115E                     
  4651                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 510:             e =
      +                           e / 10;
  4652  00115E  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  4653  001162  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4654  001166  0E00               	movlw	0
  4655  001168  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4656  00116A  0E0A               	movlw	10
  4657  00116C  6E03               	movwf	___awdiv@divisor^0,c
  4658  00116E  ECBE  F019         	call	___awdiv	;wreg free
  4659  001172  C001  F090         	movff	?___awdiv,efgtoa@e
  4660  001176  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  4661  00117A                     
  4662                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 511:             --p
      +                          ;
  4663  00117A  0100               	movlb	0	; () banked
  4664  00117C  077C               	decf	efgtoa@p& (0+255),f,b
  4665  00117E  A0D8               	btfss	status,0,c
  4666  001180  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4667  001182                     
  4668                           ; BSR set to: 0
  4669                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 512:             --w
      +                          ;
  4670  001182  077E               	decf	efgtoa@w& (0+255),f,b
  4671  001184  A0D8               	btfss	status,0,c
  4672  001186  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4673  001188                     l4352:
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 507:         while (
      +                          e || (0 < p)) {
  4677  001188  5190               	movf	efgtoa@e& (0+255),w,b
  4678  00118A  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4679  00118C  A4D8               	btfss	status,2,c
  4680  00118E  EFCB  F008         	goto	u4811
  4681  001192  EFCD  F008         	goto	u4810
  4682  001196                     u4811:
  4683  001196  EF99  F008         	goto	l4342
  4684  00119A                     u4810:
  4685  00119A                     
  4686                           ; BSR set to: 0
  4687  00119A  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4688  00119C  EFDA  F008         	goto	u4820
  4689  0011A0  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4690  0011A2  E106               	bnz	u4821
  4691  0011A4  057C               	decf	efgtoa@p& (0+255),w,b
  4692  0011A6  B0D8               	btfsc	status,0,c
  4693  0011A8  EFD8  F008         	goto	u4821
  4694  0011AC  EFDA  F008         	goto	u4820
  4695  0011B0                     u4821:
  4696  0011B0  EF99  F008         	goto	l4342
  4697  0011B4                     u4820:
  4698  0011B4                     
  4699                           ; BSR set to: 0
  4700                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 514:         --i;
  4701  0011B4  078A               	decf	efgtoa@i& (0+255),f,b
  4702  0011B6  A0D8               	btfss	status,0,c
  4703  0011B8  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4704  0011BA                     
  4705                           ; BSR set to: 0
  4706                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 515:         dbuf[i]
      +                           = sign ? '-' : '+';
  4707  0011BA  517A               	movf	efgtoa@sign& (0+255),w,b
  4708  0011BC  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4709  0011BE  A4D8               	btfss	status,2,c
  4710  0011C0  EFE4  F008         	goto	u4831
  4711  0011C4  EFE6  F008         	goto	u4830
  4712  0011C8                     u4831:
  4713  0011C8  EFEC  F008         	goto	l4362
  4714  0011CC                     u4830:
  4715  0011CC                     
  4716                           ; BSR set to: 0
  4717  0011CC  0E00               	movlw	0
  4718  0011CE  6F67               	movwf	(_efgtoa$1538+1)& (0+255),b
  4719  0011D0  0E2B               	movlw	43
  4720  0011D2  6F66               	movwf	_efgtoa$1538& (0+255),b
  4721  0011D4  EFF0  F008         	goto	l4364
  4722  0011D8                     l4362:
  4723                           
  4724                           ; BSR set to: 0
  4725  0011D8  0E00               	movlw	0
  4726  0011DA  6F67               	movwf	(_efgtoa$1538+1)& (0+255),b
  4727  0011DC  0E2D               	movlw	45
  4728  0011DE  6F66               	movwf	_efgtoa$1538& (0+255),b
  4729  0011E0                     l4364:
  4730                           
  4731                           ; BSR set to: 0
  4732  0011E0  0E00               	movlw	low _dbuf
  4733  0011E2  258A               	addwf	efgtoa@i& (0+255),w,b
  4734  0011E4  6ED9               	movwf	fsr2l,c
  4735  0011E6  0E01               	movlw	high _dbuf
  4736  0011E8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4737  0011EA  6EDA               	movwf	fsr2h,c
  4738  0011EC  C066  FFDF         	movff	_efgtoa$1538,indf2
  4739  0011F0                     
  4740                           ; BSR set to: 0
  4741                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 516:         --w;
  4742  0011F0  077E               	decf	efgtoa@w& (0+255),f,b
  4743  0011F2  A0D8               	btfss	status,0,c
  4744  0011F4  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4745  0011F6                     
  4746                           ; BSR set to: 0
  4747                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 518:         dbuf[i]
      +                           = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4748  0011F6  078A               	decf	efgtoa@i& (0+255),f,b
  4749  0011F8  A0D8               	btfss	status,0,c
  4750  0011FA  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4751  0011FC                     
  4752                           ; BSR set to: 0
  4753  0011FC  0EBF               	movlw	191
  4754  0011FE  6E47               	movwf	??_efgtoa^0,c
  4755  001200  0EFF               	movlw	255
  4756  001202  6E48               	movwf	(??_efgtoa+1)^0,c
  4757  001204  5046               	movf	efgtoa@c^0,w,c
  4758  001206  6E49               	movwf	(??_efgtoa+2)^0,c
  4759  001208  6A4A               	clrf	(??_efgtoa+3)^0,c
  4760  00120A  5047               	movf	??_efgtoa^0,w,c
  4761  00120C  2649               	addwf	(??_efgtoa+2)^0,f,c
  4762  00120E  5048               	movf	(??_efgtoa+1)^0,w,c
  4763  001210  224A               	addwfc	(??_efgtoa+3)^0,f,c
  4764  001212  504A               	movf	(??_efgtoa+3)^0,w,c
  4765  001214  E10A               	bnz	u4840
  4766  001216  0E1A               	movlw	26
  4767  001218  5C49               	subwf	(??_efgtoa+2)^0,w,c
  4768  00121A  A0D8               	btfss	status,0,c
  4769  00121C  EF12  F009         	goto	u4841
  4770  001220  EF15  F009         	goto	u4840
  4771  001224                     u4841:
  4772  001224  0E01               	movlw	1
  4773  001226  EF16  F009         	goto	u4850
  4774  00122A                     u4840:
  4775  00122A  0E00               	movlw	0
  4776  00122C                     u4850:
  4777  00122C  6F6A               	movwf	_efgtoa$1540& (0+255),b
  4778  00122E  6B6B               	clrf	(_efgtoa$1540+1)& (0+255),b
  4779  001230                     
  4780                           ; BSR set to: 0
  4781  001230  516A               	movf	_efgtoa$1540& (0+255),w,b
  4782  001232  116B               	iorwf	(_efgtoa$1540+1)& (0+255),w,b
  4783  001234  A4D8               	btfss	status,2,c
  4784  001236  EF1F  F009         	goto	u4861
  4785  00123A  EF21  F009         	goto	u4860
  4786  00123E                     u4861:
  4787  00123E  EF27  F009         	goto	l4378
  4788  001242                     u4860:
  4789  001242                     
  4790                           ; BSR set to: 0
  4791  001242  0E00               	movlw	0
  4792  001244  6F69               	movwf	(_efgtoa$1539+1)& (0+255),b
  4793  001246  0E65               	movlw	101
  4794  001248  6F68               	movwf	_efgtoa$1539& (0+255),b
  4795  00124A  EF2B  F009         	goto	l4380
  4796  00124E                     l4378:
  4797                           
  4798                           ; BSR set to: 0
  4799  00124E  0E00               	movlw	0
  4800  001250  6F69               	movwf	(_efgtoa$1539+1)& (0+255),b
  4801  001252  0E45               	movlw	69
  4802  001254  6F68               	movwf	_efgtoa$1539& (0+255),b
  4803  001256                     l4380:
  4804                           
  4805                           ; BSR set to: 0
  4806  001256  0E00               	movlw	low _dbuf
  4807  001258  258A               	addwf	efgtoa@i& (0+255),w,b
  4808  00125A  6ED9               	movwf	fsr2l,c
  4809  00125C  0E01               	movlw	high _dbuf
  4810  00125E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4811  001260  6EDA               	movwf	fsr2h,c
  4812  001262  C068  FFDF         	movff	_efgtoa$1539,indf2
  4813  001266                     
  4814                           ; BSR set to: 0
  4815                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 519:         --w;
  4816  001266  077E               	decf	efgtoa@w& (0+255),f,b
  4817  001268  A0D8               	btfss	status,0,c
  4818  00126A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4819  00126C                     
  4820                           ; BSR set to: 0
  4821                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 520:         strcpy(
      +                          &dbuf[n], &dbuf[i]);
  4822  00126C  0E00               	movlw	low _dbuf
  4823  00126E  2592               	addwf	efgtoa@n& (0+255),w,b
  4824  001270  6E01               	movwf	strcpy@dest^0,c
  4825  001272  0E01               	movlw	high _dbuf
  4826  001274  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4827  001276  6E02               	movwf	(strcpy@dest+1)^0,c
  4828  001278  0E00               	movlw	low _dbuf
  4829  00127A  258A               	addwf	efgtoa@i& (0+255),w,b
  4830  00127C  6E03               	movwf	strcpy@src^0,c
  4831  00127E  0E01               	movlw	high _dbuf
  4832  001280  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4833  001282  6E04               	movwf	(strcpy@src+1)^0,c
  4834  001284  ECBA  F01C         	call	_strcpy	;wreg free
  4835  001288  EFCE  F003         	goto	l4126
  4836  00128C                     l1179:
  4837  00128C  0012               	return		;funcret
  4838  00128E                     __end_of_efgtoa:
  4839                           	callstack 0
  4840                           
  4841 ;; *************** function _tolower *****************
  4842 ;; Defined at:
  4843 ;;		line 4 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/tolower.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  c               2    6[COMRAM] int 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;		None
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  2    6[COMRAM] int 
  4850 ;; Registers used:
  4851 ;;		wreg, status,2, status,0
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4857 ;;      Params:         2       0       0       0       0       0       0
  4858 ;;      Locals:         2       0       0       0       0       0       0
  4859 ;;      Temps:          4       0       0       0       0       0       0
  4860 ;;      Totals:         8       0       0       0       0       0       0
  4861 ;;Total ram usage:        8 bytes
  4862 ;; Hardware stack levels used: 1
  4863 ;; Hardware stack levels required when called: 1
  4864 ;; This function calls:
  4865 ;;		_isupper
  4866 ;; This function is called by:
  4867 ;;		_efgtoa
  4868 ;;		_vfpfcnvrt
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text15
  4873  003914                     __ptext15:
  4874                           	callstack 0
  4875  003914                     _tolower:
  4876                           	callstack 25
  4877  003914  0EBF               	movlw	191
  4878  003916  6E09               	movwf	??_tolower^0,c
  4879  003918  0EFF               	movlw	255
  4880  00391A  6E0A               	movwf	(??_tolower+1)^0,c
  4881  00391C  C007  F00B         	movff	tolower@c,??_tolower+2
  4882  003920  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4883  003924  5009               	movf	??_tolower^0,w,c
  4884  003926  260B               	addwf	(??_tolower+2)^0,f,c
  4885  003928  500A               	movf	(??_tolower+1)^0,w,c
  4886  00392A  220C               	addwfc	(??_tolower+3)^0,f,c
  4887  00392C  500C               	movf	(??_tolower+3)^0,w,c
  4888  00392E  E10A               	bnz	u4110
  4889  003930  0E1A               	movlw	26
  4890  003932  5C0B               	subwf	(??_tolower+2)^0,w,c
  4891  003934  A0D8               	btfss	status,0,c
  4892  003936  EF9F  F01C         	goto	u4111
  4893  00393A  EFA2  F01C         	goto	u4110
  4894  00393E                     u4111:
  4895  00393E  0E01               	movlw	1
  4896  003940  EFA3  F01C         	goto	u4120
  4897  003944                     u4110:
  4898  003944  0E00               	movlw	0
  4899  003946                     u4120:
  4900  003946  6E0D               	movwf	_tolower$1688^0,c
  4901  003948  6A0E               	clrf	(_tolower$1688+1)^0,c
  4902  00394A  500D               	movf	_tolower$1688^0,w,c
  4903  00394C  100E               	iorwf	(_tolower$1688+1)^0,w,c
  4904  00394E  B4D8               	btfsc	status,2,c
  4905  003950  EFAC  F01C         	goto	u4131
  4906  003954  EFAE  F01C         	goto	u4130
  4907  003958                     u4131:
  4908  003958  EFB5  F01C         	goto	l1410
  4909  00395C                     u4130:
  4910  00395C  0E20               	movlw	32
  4911  00395E  1007               	iorwf	tolower@c^0,w,c
  4912  003960  6E07               	movwf	?_tolower^0,c
  4913  003962  5008               	movf	(tolower@c+1)^0,w,c
  4914  003964  6E08               	movwf	(?_tolower+1)^0,c
  4915  003966  EFB9  F01C         	goto	l1415
  4916  00396A                     l1410:
  4917  00396A  C007  F007         	movff	tolower@c,?_tolower
  4918  00396E  C008  F008         	movff	tolower@c+1,?_tolower+1
  4919  003972                     l1415:
  4920  003972  0012               	return		;funcret
  4921  003974                     __end_of_tolower:
  4922                           	callstack 0
  4923                           
  4924 ;; *************** function _isupper *****************
  4925 ;; Defined at:
  4926 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/isupper.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  c               2    0[COMRAM] int 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  2    0[COMRAM] int 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4940 ;;      Params:         2       0       0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0
  4942 ;;      Temps:          4       0       0       0       0       0       0
  4943 ;;      Totals:         6       0       0       0       0       0       0
  4944 ;;Total ram usage:        6 bytes
  4945 ;; Hardware stack levels used: 1
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_efgtoa
  4950 ;;		_vfpfcnvrt
  4951 ;;		_tolower
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text16
  4956  003B80                     __ptext16:
  4957                           	callstack 0
  4958  003B80                     _isupper:
  4959                           	callstack 25
  4960  003B80  0EBF               	movlw	191
  4961  003B82  6E03               	movwf	??_isupper^0,c
  4962  003B84  0EFF               	movlw	255
  4963  003B86  6E04               	movwf	(??_isupper+1)^0,c
  4964  003B88  C001  F005         	movff	isupper@c,??_isupper+2
  4965  003B8C  C002  F006         	movff	isupper@c+1,??_isupper+3
  4966  003B90  5003               	movf	??_isupper^0,w,c
  4967  003B92  2605               	addwf	(??_isupper+2)^0,f,c
  4968  003B94  5004               	movf	(??_isupper+1)^0,w,c
  4969  003B96  2206               	addwfc	(??_isupper+3)^0,f,c
  4970  003B98  5006               	movf	(??_isupper+3)^0,w,c
  4971  003B9A  E10A               	bnz	u3240
  4972  003B9C  0E1A               	movlw	26
  4973  003B9E  5C05               	subwf	(??_isupper+2)^0,w,c
  4974  003BA0  A0D8               	btfss	status,0,c
  4975  003BA2  EFD5  F01D         	goto	u3241
  4976  003BA6  EFD8  F01D         	goto	u3240
  4977  003BAA                     u3241:
  4978  003BAA  0E01               	movlw	1
  4979  003BAC  EFD9  F01D         	goto	u3250
  4980  003BB0                     u3240:
  4981  003BB0  0E00               	movlw	0
  4982  003BB2                     u3250:
  4983  003BB2  6E01               	movwf	?_isupper^0,c
  4984  003BB4  6A02               	clrf	(?_isupper+1)^0,c
  4985  003BB6  0012               	return		;funcret
  4986  003BB8                     __end_of_isupper:
  4987                           	callstack 0
  4988                           
  4989 ;; *************** function _strcpy *****************
  4990 ;; Defined at:
  4991 ;;		line 3 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/strcpy.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4994 ;;		 -> dbuf(80), 
  4995 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4996 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4997 ;;		 -> dbuf(80), 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  d               2    8[COMRAM] PTR unsigned char 
  5000 ;;		 -> dbuf(80), 
  5001 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5002 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  5003 ;;		 -> dbuf(80), 
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  2    0[COMRAM] PTR unsigned char 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5013 ;;      Params:         4       0       0       0       0       0       0
  5014 ;;      Locals:         4       0       0       0       0       0       0
  5015 ;;      Temps:          2       0       0       0       0       0       0
  5016 ;;      Totals:        10       0       0       0       0       0       0
  5017 ;;Total ram usage:       10 bytes
  5018 ;; Hardware stack levels used: 1
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_efgtoa
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text17
  5027  003974                     __ptext17:
  5028                           	callstack 0
  5029  003974                     _strcpy:
  5030                           	callstack 25
  5031  003974  C003  F007         	movff	strcpy@src,strcpy@s
  5032  003978  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5033  00397C  C001  F009         	movff	strcpy@dest,strcpy@d
  5034  003980  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5035  003984                     l3992:
  5036  003984  5007               	movf	strcpy@s^0,w,c
  5037  003986  6E05               	movwf	??_strcpy^0,c
  5038  003988  5008               	movf	(strcpy@s+1)^0,w,c
  5039  00398A  6E06               	movwf	(??_strcpy+1)^0,c
  5040  00398C  4A07               	infsnz	strcpy@s^0,f,c
  5041  00398E  2A08               	incf	(strcpy@s+1)^0,f,c
  5042  003990  C005  FFF6         	movff	??_strcpy,tblptrl
  5043  003994  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5044  003998  6AF8               	clrf	tblptru,c
  5045  00399A  C009  FFD9         	movff	strcpy@d,fsr2l
  5046  00399E  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5047  0039A2  4A09               	infsnz	strcpy@d^0,f,c
  5048  0039A4  2A0A               	incf	(strcpy@d+1)^0,f,c
  5049  0039A6  0E05               	movlw	(high __ramtop+-1)
  5050  0039A8  64F7               	cpfsgt	tblptrh,c
  5051  0039AA  D003               	bra	u4097
  5052  0039AC  0008               	tblrd		*
  5053  0039AE  50F5               	movf	tablat,w,c
  5054  0039B0  D005               	bra	u4090
  5055  0039B2                     u4097:
  5056  0039B2  CFF6 FFE1          	movff	tblptrl,fsr1l
  5057  0039B6  CFF7 FFE2          	movff	tblptrh,fsr1h
  5058  0039BA  50E7               	movf	indf1,w,c
  5059  0039BC                     u4090:
  5060  0039BC  6EDF               	movwf	indf2,c
  5061  0039BE  50DF               	movf	indf2,w,c
  5062  0039C0  A4D8               	btfss	status,2,c
  5063  0039C2  EFE5  F01C         	goto	u4101
  5064  0039C6  EFE7  F01C         	goto	u4100
  5065  0039CA                     u4101:
  5066  0039CA  EFC2  F01C         	goto	l3992
  5067  0039CE                     u4100:
  5068  0039CE  0012               	return		;funcret
  5069  0039D0                     __end_of_strcpy:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function _pad *****************
  5073 ;; Defined at:
  5074 ;;		line 72 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5077 ;;		 -> sprintf@f(6), 
  5078 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5079 ;;		 -> dbuf(80), 
  5080 ;;  p               2   20[COMRAM] int 
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;  w               2   25[COMRAM] int 
  5083 ;;  i               2   23[COMRAM] int 
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  2   16[COMRAM] int 
  5086 ;; Registers used:
  5087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5093 ;;      Params:         6       0       0       0       0       0       0
  5094 ;;      Locals:         4       0       0       0       0       0       0
  5095 ;;      Temps:          1       0       0       0       0       0       0
  5096 ;;      Totals:        11       0       0       0       0       0       0
  5097 ;;Total ram usage:       11 bytes
  5098 ;; Hardware stack levels used: 1
  5099 ;; Hardware stack levels required when called: 3
  5100 ;; This function calls:
  5101 ;;		_fputc
  5102 ;;		_fputs
  5103 ;;		_strlen
  5104 ;; This function is called by:
  5105 ;;		_efgtoa
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text18
  5110  0032B6                     __ptext18:
  5111                           	callstack 0
  5112  0032B6                     _pad:
  5113                           	callstack 22
  5114  0032B6                     
  5115                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  5116  0032B6  0100               	movlb	0	; () banked
  5117  0032B8  A1DF               	btfss	_flags& (0+255),0,b
  5118  0032BA  EF61  F019         	goto	u3981
  5119  0032BE  EF63  F019         	goto	u3980
  5120  0032C2                     u3981:
  5121  0032C2  EF6D  F019         	goto	l3950
  5122  0032C6                     u3980:
  5123  0032C6                     
  5124                           ; BSR set to: 0
  5125                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  5126  0032C6  C013  F00A         	movff	pad@buf,fputs@s
  5127  0032CA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5128  0032CE  C011  F00C         	movff	pad@fp,fputs@fp
  5129  0032D2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5130  0032D6  EC80  F01D         	call	_fputs	;wreg free
  5131  0032DA                     l3950:
  5132                           
  5133                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  5134  0032DA  BE16               	btfsc	(pad@p+1)^0,7,c
  5135  0032DC  EF72  F019         	goto	u3991
  5136  0032E0  EF74  F019         	goto	u3990
  5137  0032E4                     u3991:
  5138  0032E4  EF7A  F019         	goto	l3954
  5139  0032E8                     u3990:
  5140  0032E8  C015  F01A         	movff	pad@p,pad@w
  5141  0032EC  C016  F01B         	movff	pad@p+1,pad@w+1
  5142  0032F0  EF7E  F019         	goto	l1140
  5143  0032F4                     l3954:
  5144  0032F4  0E00               	movlw	0
  5145  0032F6  6E1B               	movwf	(pad@w+1)^0,c
  5146  0032F8  0E00               	movlw	0
  5147  0032FA  6E1A               	movwf	pad@w^0,c
  5148  0032FC                     l1140:
  5149                           
  5150                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  5151  0032FC  0E00               	movlw	0
  5152  0032FE  6E19               	movwf	(pad@i+1)^0,c
  5153  003300  0E00               	movlw	0
  5154  003302  6E18               	movwf	pad@i^0,c
  5155                           
  5156                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  5157  003304  EF90  F019         	goto	l3960
  5158  003308                     l3956:
  5159                           
  5160                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  5161  003308  0E00               	movlw	0
  5162  00330A  6E02               	movwf	(fputc@c+1)^0,c
  5163  00330C  0E20               	movlw	32
  5164  00330E  6E01               	movwf	fputc@c^0,c
  5165  003310  C011  F003         	movff	pad@fp,fputc@fp
  5166  003314  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5167  003318  ECF6  F018         	call	_fputc	;wreg free
  5168  00331C                     
  5169                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 86:         ++i;
  5170  00331C  4A18               	infsnz	pad@i^0,f,c
  5171  00331E  2A19               	incf	(pad@i+1)^0,f,c
  5172  003320                     l3960:
  5173                           
  5174                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  5175  003320  501A               	movf	pad@w^0,w,c
  5176  003322  5C18               	subwf	pad@i^0,w,c
  5177  003324  5019               	movf	(pad@i+1)^0,w,c
  5178  003326  0A80               	xorlw	128
  5179  003328  6E17               	movwf	??_pad^0,c
  5180  00332A  501B               	movf	(pad@w+1)^0,w,c
  5181  00332C  0A80               	xorlw	128
  5182  00332E  5817               	subwfb	??_pad^0,w,c
  5183  003330  A0D8               	btfss	status,0,c
  5184  003332  EF9D  F019         	goto	u4001
  5185  003336  EF9F  F019         	goto	u4000
  5186  00333A                     u4001:
  5187  00333A  EF84  F019         	goto	l3956
  5188  00333E                     u4000:
  5189  00333E                     
  5190                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  5191  00333E  0100               	movlb	0	; () banked
  5192  003340  B1DF               	btfsc	_flags& (0+255),0,b
  5193  003342  EFA5  F019         	goto	u4011
  5194  003346  EFA7  F019         	goto	u4010
  5195  00334A                     u4011:
  5196  00334A  EFB1  F019         	goto	l3964
  5197  00334E                     u4010:
  5198  00334E                     
  5199                           ; BSR set to: 0
  5200                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  5201  00334E  C013  F00A         	movff	pad@buf,fputs@s
  5202  003352  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5203  003356  C011  F00C         	movff	pad@fp,fputs@fp
  5204  00335A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5205  00335E  EC80  F01D         	call	_fputs	;wreg free
  5206  003362                     l3964:
  5207                           
  5208                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
  5209  003362  C013  F001         	movff	pad@buf,strlen@s
  5210  003366  C014  F002         	movff	pad@buf+1,strlen@s+1
  5211  00336A  EC14  F01E         	call	_strlen	;wreg free
  5212  00336E  501A               	movf	pad@w^0,w,c
  5213  003370  2401               	addwf	?_strlen^0,w,c
  5214  003372  6E11               	movwf	?_pad^0,c
  5215  003374  501B               	movf	(pad@w+1)^0,w,c
  5216  003376  2002               	addwfc	(?_strlen+1)^0,w,c
  5217  003378  6E12               	movwf	(?_pad+1)^0,c
  5218  00337A  0012               	return		;funcret
  5219  00337C                     __end_of_pad:
  5220                           	callstack 0
  5221                           
  5222 ;; *************** function _strlen *****************
  5223 ;; Defined at:
  5224 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5227 ;;		 -> dbuf(80), 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5230 ;;		 -> dbuf(80), 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  2    0[COMRAM] unsigned int 
  5233 ;; Registers used:
  5234 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5240 ;;      Params:         2       0       0       0       0       0       0
  5241 ;;      Locals:         2       0       0       0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0
  5243 ;;      Totals:         4       0       0       0       0       0       0
  5244 ;;Total ram usage:        4 bytes
  5245 ;; Hardware stack levels used: 1
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_pad
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           	psect	text19
  5254  003C28                     __ptext19:
  5255                           	callstack 0
  5256  003C28                     _strlen:
  5257                           	callstack 24
  5258  003C28  C001  F003         	movff	strlen@s,strlen@a
  5259  003C2C  C002  F004         	movff	strlen@s+1,strlen@a+1
  5260  003C30  EF1C  F01E         	goto	l3482
  5261  003C34                     l3480:
  5262  003C34  4A01               	infsnz	strlen@s^0,f,c
  5263  003C36  2A02               	incf	(strlen@s+1)^0,f,c
  5264  003C38                     l3482:
  5265  003C38  C001  FFD9         	movff	strlen@s,fsr2l
  5266  003C3C  C002  FFDA         	movff	strlen@s+1,fsr2h
  5267  003C40  50DF               	movf	indf2,w,c
  5268  003C42  A4D8               	btfss	status,2,c
  5269  003C44  EF26  F01E         	goto	u3231
  5270  003C48  EF28  F01E         	goto	u3230
  5271  003C4C                     u3231:
  5272  003C4C  EF1A  F01E         	goto	l3480
  5273  003C50                     u3230:
  5274  003C50  5003               	movf	strlen@a^0,w,c
  5275  003C52  5C01               	subwf	strlen@s^0,w,c
  5276  003C54  6E01               	movwf	?_strlen^0,c
  5277  003C56  5004               	movf	(strlen@a+1)^0,w,c
  5278  003C58  5802               	subwfb	(strlen@s+1)^0,w,c
  5279  003C5A  6E02               	movwf	(?_strlen+1)^0,c
  5280  003C5C  0012               	return		;funcret
  5281  003C5E                     __end_of_strlen:
  5282                           	callstack 0
  5283                           
  5284 ;; *************** function _fputs *****************
  5285 ;; Defined at:
  5286 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputs.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5289 ;;		 -> dbuf(80), 
  5290 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5291 ;;		 -> sprintf@f(6), 
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;  i               2   14[COMRAM] int 
  5294 ;;  c               1   13[COMRAM] unsigned char 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  2    9[COMRAM] int 
  5297 ;; Registers used:
  5298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5304 ;;      Params:         4       0       0       0       0       0       0
  5305 ;;      Locals:         3       0       0       0       0       0       0
  5306 ;;      Temps:          0       0       0       0       0       0       0
  5307 ;;      Totals:         7       0       0       0       0       0       0
  5308 ;;Total ram usage:        7 bytes
  5309 ;; Hardware stack levels used: 1
  5310 ;; Hardware stack levels required when called: 2
  5311 ;; This function calls:
  5312 ;;		_fputc
  5313 ;; This function is called by:
  5314 ;;		_pad
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text20
  5319  003B00                     __ptext20:
  5320                           	callstack 0
  5321  003B00                     _fputs:
  5322                           	callstack 22
  5323  003B00  0E00               	movlw	0
  5324  003B02  6E10               	movwf	(fputs@i+1)^0,c
  5325  003B04  0E00               	movlw	0
  5326  003B06  6E0F               	movwf	fputs@i^0,c
  5327  003B08  EF91  F01D         	goto	l3476
  5328  003B0C                     l3472:
  5329  003B0C  C00E  F001         	movff	fputs@c,fputc@c
  5330  003B10  6A02               	clrf	(fputc@c+1)^0,c
  5331  003B12  C00C  F003         	movff	fputs@fp,fputc@fp
  5332  003B16  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5333  003B1A  ECF6  F018         	call	_fputc	;wreg free
  5334  003B1E  4A0F               	infsnz	fputs@i^0,f,c
  5335  003B20  2A10               	incf	(fputs@i+1)^0,f,c
  5336  003B22                     l3476:
  5337  003B22  500F               	movf	fputs@i^0,w,c
  5338  003B24  240A               	addwf	fputs@s^0,w,c
  5339  003B26  6ED9               	movwf	fsr2l,c
  5340  003B28  5010               	movf	(fputs@i+1)^0,w,c
  5341  003B2A  200B               	addwfc	(fputs@s+1)^0,w,c
  5342  003B2C  6EDA               	movwf	fsr2h,c
  5343  003B2E  50DF               	movf	indf2,w,c
  5344  003B30  6E0E               	movwf	fputs@c^0,c
  5345  003B32  500E               	movf	fputs@c^0,w,c
  5346  003B34  A4D8               	btfss	status,2,c
  5347  003B36  EF9F  F01D         	goto	u3221
  5348  003B3A  EFA1  F01D         	goto	u3220
  5349  003B3E                     u3221:
  5350  003B3E  EF86  F01D         	goto	l3472
  5351  003B42                     u3220:
  5352  003B42  0012               	return		;funcret
  5353  003B44                     __end_of_fputs:
  5354                           	callstack 0
  5355                           
  5356 ;; *************** function _floorf *****************
  5357 ;; Defined at:
  5358 ;;		line 3 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/floorf.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;  x               4   39[COMRAM] float 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  u               4   55[COMRAM] struct .
  5363 ;;  m               4   49[COMRAM] unsigned long 
  5364 ;;  e               2   53[COMRAM] int 
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  4   39[COMRAM] float 
  5367 ;; Registers used:
  5368 ;;		wreg, status,2, status,0
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5374 ;;      Params:         4       0       0       0       0       0       0
  5375 ;;      Locals:        10       0       0       0       0       0       0
  5376 ;;      Temps:          6       0       0       0       0       0       0
  5377 ;;      Totals:        20       0       0       0       0       0       0
  5378 ;;Total ram usage:       20 bytes
  5379 ;; Hardware stack levels used: 1
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		_efgtoa
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           	psect	text21
  5388  0023EE                     __ptext21:
  5389                           	callstack 0
  5390  0023EE                     _floorf:
  5391                           	callstack 25
  5392  0023EE  C0D1  F038         	movff	floorf@F527,floorf@u
  5393  0023F2  C0D2  F039         	movff	floorf@F527+1,floorf@u+1
  5394  0023F6  C0D3  F03A         	movff	floorf@F527+2,floorf@u+2
  5395  0023FA  C0D4  F03B         	movff	floorf@F527+3,floorf@u+3
  5396  0023FE  C028  F038         	movff	floorf@x,floorf@u
  5397  002402  C029  F039         	movff	floorf@x+1,floorf@u+1
  5398  002406  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  5399  00240A  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  5400  00240E  0E81               	movlw	129
  5401  002410  6E2C               	movwf	??_floorf^0,c
  5402  002412  0EFF               	movlw	255
  5403  002414  6E2D               	movwf	(??_floorf+1)^0,c
  5404  002416  C038  F02E         	movff	floorf@u,??_floorf+2
  5405  00241A  C039  F02F         	movff	floorf@u+1,??_floorf+3
  5406  00241E  C03A  F030         	movff	floorf@u+2,??_floorf+4
  5407  002422  C03B  F031         	movff	floorf@u+3,??_floorf+5
  5408  002426  0E18               	movlw	24
  5409  002428  EF1B  F012         	goto	u4140
  5410  00242C                     u4145:
  5411  00242C  90D8               	bcf	status,0,c
  5412  00242E  3231               	rrcf	(??_floorf+5)^0,f,c
  5413  002430  3230               	rrcf	(??_floorf+4)^0,f,c
  5414  002432  322F               	rrcf	(??_floorf+3)^0,f,c
  5415  002434  322E               	rrcf	(??_floorf+2)^0,f,c
  5416  002436                     u4140:
  5417  002436  2EE8               	decfsz	wreg,f,c
  5418  002438  EF16  F012         	goto	u4145
  5419  00243C  502E               	movf	(??_floorf+2)^0,w,c
  5420  00243E  242C               	addwf	??_floorf^0,w,c
  5421  002440  6E36               	movwf	floorf@e^0,c
  5422  002442  0E00               	movlw	0
  5423  002444  202D               	addwfc	(??_floorf+1)^0,w,c
  5424  002446  6E37               	movwf	(floorf@e+1)^0,c
  5425  002448  BE37               	btfsc	(floorf@e+1)^0,7,c
  5426  00244A  EF30  F012         	goto	u4151
  5427  00244E  5037               	movf	(floorf@e+1)^0,w,c
  5428  002450  E109               	bnz	u4150
  5429  002452  0E17               	movlw	23
  5430  002454  5C36               	subwf	floorf@e^0,w,c
  5431  002456  A0D8               	btfss	status,0,c
  5432  002458  EF30  F012         	goto	u4151
  5433  00245C  EF32  F012         	goto	u4150
  5434  002460                     u4151:
  5435  002460  EF3C  F012         	goto	l4010
  5436  002464                     u4150:
  5437  002464                     l4008:
  5438  002464  C028  F028         	movff	floorf@x,?_floorf
  5439  002468  C029  F029         	movff	floorf@x+1,?_floorf+1
  5440  00246C  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  5441  002470  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  5442  002474  EFFF  F012         	goto	l1334
  5443  002478                     l4010:
  5444  002478  BE37               	btfsc	(floorf@e+1)^0,7,c
  5445  00247A  EF41  F012         	goto	u4161
  5446  00247E  EF43  F012         	goto	u4160
  5447  002482                     u4161:
  5448  002482  EFB3  F012         	goto	l4020
  5449  002486                     u4160:
  5450  002486  C036  F02C         	movff	floorf@e,??_floorf
  5451  00248A  0EFF               	movlw	255
  5452  00248C  6E2D               	movwf	(??_floorf+1)^0,c
  5453  00248E  0EFF               	movlw	255
  5454  002490  6E2E               	movwf	(??_floorf+2)^0,c
  5455  002492  0E7F               	movlw	127
  5456  002494  6E2F               	movwf	(??_floorf+3)^0,c
  5457  002496  0E00               	movlw	0
  5458  002498  6E30               	movwf	(??_floorf+4)^0,c
  5459  00249A                     u4175:
  5460  00249A  662C               	tstfsz	??_floorf^0,c
  5461  00249C  EF52  F012         	goto	u4176
  5462  0024A0  EF5A  F012         	goto	u4177
  5463  0024A4                     u4176:
  5464  0024A4  3430               	rlcf	(??_floorf+4)^0,w,c
  5465  0024A6  3230               	rrcf	(??_floorf+4)^0,f,c
  5466  0024A8  322F               	rrcf	(??_floorf+3)^0,f,c
  5467  0024AA  322E               	rrcf	(??_floorf+2)^0,f,c
  5468  0024AC  322D               	rrcf	(??_floorf+1)^0,f,c
  5469  0024AE  2E2C               	decfsz	??_floorf^0,f,c
  5470  0024B0  EF4D  F012         	goto	u4175
  5471  0024B4                     u4177:
  5472  0024B4  C02D  F032         	movff	??_floorf+1,floorf@m
  5473  0024B8  C02E  F033         	movff	??_floorf+2,floorf@m+1
  5474  0024BC  C02F  F034         	movff	??_floorf+3,floorf@m+2
  5475  0024C0  C030  F035         	movff	??_floorf+4,floorf@m+3
  5476  0024C4  5032               	movf	floorf@m^0,w,c
  5477  0024C6  1438               	andwf	floorf@u^0,w,c
  5478  0024C8  6E2C               	movwf	??_floorf^0,c
  5479  0024CA  5033               	movf	(floorf@m+1)^0,w,c
  5480  0024CC  1439               	andwf	(floorf@u+1)^0,w,c
  5481  0024CE  6E2D               	movwf	(??_floorf+1)^0,c
  5482  0024D0  5034               	movf	(floorf@m+2)^0,w,c
  5483  0024D2  143A               	andwf	(floorf@u+2)^0,w,c
  5484  0024D4  6E2E               	movwf	(??_floorf+2)^0,c
  5485  0024D6  5035               	movf	(floorf@m+3)^0,w,c
  5486  0024D8  143B               	andwf	(floorf@u+3)^0,w,c
  5487  0024DA  6E2F               	movwf	(??_floorf+3)^0,c
  5488  0024DC  502C               	movf	??_floorf^0,w,c
  5489  0024DE  102D               	iorwf	(??_floorf+1)^0,w,c
  5490  0024E0  102E               	iorwf	(??_floorf+2)^0,w,c
  5491  0024E2  102F               	iorwf	(??_floorf+3)^0,w,c
  5492  0024E4  A4D8               	btfss	status,2,c
  5493  0024E6  EF77  F012         	goto	u4181
  5494  0024EA  EF79  F012         	goto	u4180
  5495  0024EE                     u4181:
  5496  0024EE  EF7B  F012         	goto	l4016
  5497  0024F2                     u4180:
  5498  0024F2  EF32  F012         	goto	l4008
  5499  0024F6                     l4016:
  5500  0024F6  C038  F02C         	movff	floorf@u,??_floorf
  5501  0024FA  C039  F02D         	movff	floorf@u+1,??_floorf+1
  5502  0024FE  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  5503  002502  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  5504  002506  0E20               	movlw	32
  5505  002508  EF8B  F012         	goto	u4190
  5506  00250C                     u4195:
  5507  00250C  90D8               	bcf	status,0,c
  5508  00250E  322F               	rrcf	(??_floorf+3)^0,f,c
  5509  002510  322E               	rrcf	(??_floorf+2)^0,f,c
  5510  002512  322D               	rrcf	(??_floorf+1)^0,f,c
  5511  002514  322C               	rrcf	??_floorf^0,f,c
  5512  002516                     u4190:
  5513  002516  2EE8               	decfsz	wreg,f,c
  5514  002518  EF86  F012         	goto	u4195
  5515  00251C  502C               	movf	??_floorf^0,w,c
  5516  00251E  102D               	iorwf	(??_floorf+1)^0,w,c
  5517  002520  102E               	iorwf	(??_floorf+2)^0,w,c
  5518  002522  102F               	iorwf	(??_floorf+3)^0,w,c
  5519  002524  B4D8               	btfsc	status,2,c
  5520  002526  EF97  F012         	goto	u4201
  5521  00252A  EF99  F012         	goto	u4200
  5522  00252E                     u4201:
  5523  00252E  EFA1  F012         	goto	l1337
  5524  002532                     u4200:
  5525  002532  5032               	movf	floorf@m^0,w,c
  5526  002534  2638               	addwf	floorf@u^0,f,c
  5527  002536  5033               	movf	(floorf@m+1)^0,w,c
  5528  002538  2239               	addwfc	(floorf@u+1)^0,f,c
  5529  00253A  5034               	movf	(floorf@m+2)^0,w,c
  5530  00253C  223A               	addwfc	(floorf@u+2)^0,f,c
  5531  00253E  5035               	movf	(floorf@m+3)^0,w,c
  5532  002540  223B               	addwfc	(floorf@u+3)^0,f,c
  5533  002542                     l1337:
  5534  002542  1C32               	comf	floorf@m^0,w,c
  5535  002544  6E2C               	movwf	??_floorf^0,c
  5536  002546  1C33               	comf	(floorf@m+1)^0,w,c
  5537  002548  6E2D               	movwf	(??_floorf+1)^0,c
  5538  00254A  1C34               	comf	(floorf@m+2)^0,w,c
  5539  00254C  6E2E               	movwf	(??_floorf+2)^0,c
  5540  00254E  1C35               	comf	(floorf@m+3)^0,w,c
  5541  002550  6E2F               	movwf	(??_floorf+3)^0,c
  5542  002552  502C               	movf	??_floorf^0,w,c
  5543  002554  1638               	andwf	floorf@u^0,f,c
  5544  002556  502D               	movf	(??_floorf+1)^0,w,c
  5545  002558  1639               	andwf	(floorf@u+1)^0,f,c
  5546  00255A  502E               	movf	(??_floorf+2)^0,w,c
  5547  00255C  163A               	andwf	(floorf@u+2)^0,f,c
  5548  00255E  502F               	movf	(??_floorf+3)^0,w,c
  5549  002560  163B               	andwf	(floorf@u+3)^0,f,c
  5550  002562  EFF7  F012         	goto	l4028
  5551  002566                     l4020:
  5552  002566  C038  F02C         	movff	floorf@u,??_floorf
  5553  00256A  C039  F02D         	movff	floorf@u+1,??_floorf+1
  5554  00256E  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  5555  002572  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  5556  002576  0E20               	movlw	32
  5557  002578  EFC3  F012         	goto	u4210
  5558  00257C                     u4215:
  5559  00257C  90D8               	bcf	status,0,c
  5560  00257E  322F               	rrcf	(??_floorf+3)^0,f,c
  5561  002580  322E               	rrcf	(??_floorf+2)^0,f,c
  5562  002582  322D               	rrcf	(??_floorf+1)^0,f,c
  5563  002584  322C               	rrcf	??_floorf^0,f,c
  5564  002586                     u4210:
  5565  002586  2EE8               	decfsz	wreg,f,c
  5566  002588  EFBE  F012         	goto	u4215
  5567  00258C  502C               	movf	??_floorf^0,w,c
  5568  00258E  102D               	iorwf	(??_floorf+1)^0,w,c
  5569  002590  102E               	iorwf	(??_floorf+2)^0,w,c
  5570  002592  102F               	iorwf	(??_floorf+3)^0,w,c
  5571  002594  A4D8               	btfss	status,2,c
  5572  002596  EFCF  F012         	goto	u4221
  5573  00259A  EFD1  F012         	goto	u4220
  5574  00259E                     u4221:
  5575  00259E  EFDB  F012         	goto	l4024
  5576  0025A2                     u4220:
  5577  0025A2  0E00               	movlw	0
  5578  0025A4  6E38               	movwf	floorf@u^0,c
  5579  0025A6  0E00               	movlw	0
  5580  0025A8  6E39               	movwf	(floorf@u+1)^0,c
  5581  0025AA  0E00               	movlw	0
  5582  0025AC  6E3A               	movwf	(floorf@u+2)^0,c
  5583  0025AE  0E00               	movlw	0
  5584  0025B0  6E3B               	movwf	(floorf@u+3)^0,c
  5585  0025B2  EFF7  F012         	goto	l4028
  5586  0025B6                     l4024:
  5587  0025B6  90D8               	bcf	status,0,c
  5588  0025B8  3438               	rlcf	floorf@u^0,w,c
  5589  0025BA  6E2C               	movwf	??_floorf^0,c
  5590  0025BC  3439               	rlcf	(floorf@u+1)^0,w,c
  5591  0025BE  6E2D               	movwf	(??_floorf+1)^0,c
  5592  0025C0  343A               	rlcf	(floorf@u+2)^0,w,c
  5593  0025C2  6E2E               	movwf	(??_floorf+2)^0,c
  5594  0025C4  343B               	rlcf	(floorf@u+3)^0,w,c
  5595  0025C6  6E2F               	movwf	(??_floorf+3)^0,c
  5596  0025C8  502C               	movf	??_floorf^0,w,c
  5597  0025CA  102D               	iorwf	(??_floorf+1)^0,w,c
  5598  0025CC  102E               	iorwf	(??_floorf+2)^0,w,c
  5599  0025CE  102F               	iorwf	(??_floorf+3)^0,w,c
  5600  0025D0  B4D8               	btfsc	status,2,c
  5601  0025D2  EFED  F012         	goto	u4231
  5602  0025D6  EFEF  F012         	goto	u4230
  5603  0025DA                     u4231:
  5604  0025DA  EFF7  F012         	goto	l4028
  5605  0025DE                     u4230:
  5606  0025DE  0E00               	movlw	0
  5607  0025E0  6E38               	movwf	floorf@u^0,c
  5608  0025E2  0E00               	movlw	0
  5609  0025E4  6E39               	movwf	(floorf@u+1)^0,c
  5610  0025E6  0E80               	movlw	128
  5611  0025E8  6E3A               	movwf	(floorf@u+2)^0,c
  5612  0025EA  0EBF               	movlw	191
  5613  0025EC  6E3B               	movwf	(floorf@u+3)^0,c
  5614  0025EE                     l4028:
  5615  0025EE  C038  F028         	movff	floorf@u,?_floorf
  5616  0025F2  C039  F029         	movff	floorf@u+1,?_floorf+1
  5617  0025F6  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  5618  0025FA  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  5619  0025FE                     l1334:
  5620  0025FE  0012               	return		;funcret
  5621  002600                     __end_of_floorf:
  5622                           	callstack 0
  5623                           
  5624 ;; *************** function ___fpclassifyf *****************
  5625 ;; Defined at:
  5626 ;;		line 4 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/__fpclassifyf.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;  x               4    0[COMRAM] float 
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;  u               4   10[COMRAM] struct .
  5631 ;;  e               2    8[COMRAM] int 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  2    0[COMRAM] int 
  5634 ;; Registers used:
  5635 ;;		wreg, status,2, status,0
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5641 ;;      Params:         4       0       0       0       0       0       0
  5642 ;;      Locals:         6       0       0       0       0       0       0
  5643 ;;      Temps:          4       0       0       0       0       0       0
  5644 ;;      Totals:        14       0       0       0       0       0       0
  5645 ;;Total ram usage:       14 bytes
  5646 ;; Hardware stack levels used: 1
  5647 ;; This function calls:
  5648 ;;		Nothing
  5649 ;; This function is called by:
  5650 ;;		_efgtoa
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text22
  5655  002E6E                     __ptext22:
  5656                           	callstack 0
  5657  002E6E                     ___fpclassifyf:
  5658                           	callstack 25
  5659  002E6E  C0D5  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5660  002E72  C0D6  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5661  002E76  C0D7  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5662  002E7A  C0D8  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5663  002E7E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5664  002E82  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5665  002E86  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5666  002E8A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5667  002E8E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5668  002E92  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5669  002E96  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5670  002E9A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5671  002E9E  0E18               	movlw	24
  5672  002EA0  EF57  F017         	goto	u4020
  5673  002EA4                     u4025:
  5674  002EA4  90D8               	bcf	status,0,c
  5675  002EA6  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5676  002EA8  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5677  002EAA  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5678  002EAC  3205               	rrcf	??___fpclassifyf^0,f,c
  5679  002EAE                     u4020:
  5680  002EAE  2EE8               	decfsz	wreg,f,c
  5681  002EB0  EF52  F017         	goto	u4025
  5682  002EB4  5005               	movf	??___fpclassifyf^0,w,c
  5683  002EB6  6E09               	movwf	___fpclassifyf@e^0,c
  5684  002EB8  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5685  002EBA  5009               	movf	___fpclassifyf@e^0,w,c
  5686  002EBC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5687  002EBE  A4D8               	btfss	status,2,c
  5688  002EC0  EF64  F017         	goto	u4031
  5689  002EC4  EF66  F017         	goto	u4030
  5690  002EC8                     u4031:
  5691  002EC8  EF86  F017         	goto	l3980
  5692  002ECC                     u4030:
  5693  002ECC  90D8               	bcf	status,0,c
  5694  002ECE  340B               	rlcf	___fpclassifyf@u^0,w,c
  5695  002ED0  6E05               	movwf	??___fpclassifyf^0,c
  5696  002ED2  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5697  002ED4  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5698  002ED6  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5699  002ED8  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5700  002EDA  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5701  002EDC  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5702  002EDE  5005               	movf	??___fpclassifyf^0,w,c
  5703  002EE0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5704  002EE2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5705  002EE4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5706  002EE6  A4D8               	btfss	status,2,c
  5707  002EE8  EF78  F017         	goto	u4041
  5708  002EEC  EF7A  F017         	goto	u4040
  5709  002EF0                     u4041:
  5710  002EF0  EF80  F017         	goto	l3976
  5711  002EF4                     u4040:
  5712  002EF4  0E00               	movlw	0
  5713  002EF6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5714  002EF8  0E02               	movlw	2
  5715  002EFA  6E01               	movwf	?___fpclassifyf^0,c
  5716  002EFC  EFB5  F017         	goto	l1296
  5717  002F00                     l3976:
  5718  002F00  0E00               	movlw	0
  5719  002F02  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5720  002F04  0E03               	movlw	3
  5721  002F06  6E01               	movwf	?___fpclassifyf^0,c
  5722  002F08  EFB5  F017         	goto	l1296
  5723  002F0C                     l3980:
  5724  002F0C  2809               	incf	___fpclassifyf@e^0,w,c
  5725  002F0E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5726  002F10  A4D8               	btfss	status,2,c
  5727  002F12  EF8D  F017         	goto	u4051
  5728  002F16  EF8F  F017         	goto	u4050
  5729  002F1A                     u4051:
  5730  002F1A  EFB1  F017         	goto	l3986
  5731  002F1E                     u4050:
  5732  002F1E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5733  002F22  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5734  002F26  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5735  002F2A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5736  002F2E  0E09               	movlw	9
  5737  002F30                     u4065:
  5738  002F30  90D8               	bcf	status,0,c
  5739  002F32  3605               	rlcf	??___fpclassifyf^0,f,c
  5740  002F34  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5741  002F36  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5742  002F38  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5743  002F3A  2EE8               	decfsz	wreg,f,c
  5744  002F3C  EF98  F017         	goto	u4065
  5745  002F40  5005               	movf	??___fpclassifyf^0,w,c
  5746  002F42  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5747  002F44  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5748  002F46  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5749  002F48  B4D8               	btfsc	status,2,c
  5750  002F4A  EFA9  F017         	goto	u4071
  5751  002F4E  EFAC  F017         	goto	u4070
  5752  002F52                     u4071:
  5753  002F52  0E01               	movlw	1
  5754  002F54  EFAD  F017         	goto	u4080
  5755  002F58                     u4070:
  5756  002F58  0E00               	movlw	0
  5757  002F5A                     u4080:
  5758  002F5A  6E01               	movwf	?___fpclassifyf^0,c
  5759  002F5C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5760  002F5E  EFB5  F017         	goto	l1296
  5761  002F62                     l3986:
  5762  002F62  0E00               	movlw	0
  5763  002F64  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5764  002F66  0E04               	movlw	4
  5765  002F68  6E01               	movwf	?___fpclassifyf^0,c
  5766  002F6A                     l1296:
  5767  002F6A  0012               	return		;funcret
  5768  002F6C                     __end_of___fpclassifyf:
  5769                           	callstack 0
  5770                           
  5771 ;; *************** function ___fltol *****************
  5772 ;; Defined at:
  5773 ;;		line 43 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  f1              4    0[COMRAM] int 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  exp1            1    9[COMRAM] unsigned char 
  5778 ;;  sign1           1    8[COMRAM] unsigned char 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  4    0[COMRAM] long 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2, status,0
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5788 ;;      Params:         4       0       0       0       0       0       0
  5789 ;;      Locals:         2       0       0       0       0       0       0
  5790 ;;      Temps:          4       0       0       0       0       0       0
  5791 ;;      Totals:        10       0       0       0       0       0       0
  5792 ;;Total ram usage:       10 bytes
  5793 ;; Hardware stack levels used: 1
  5794 ;; This function calls:
  5795 ;;		Nothing
  5796 ;; This function is called by:
  5797 ;;		_efgtoa
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           	psect	text23
  5802  002C64                     __ptext23:
  5803                           	callstack 0
  5804  002C64                     ___fltol:
  5805                           	callstack 25
  5806  002C64  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5807  002C66  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5808  002C68  6E0A               	movwf	___fltol@exp1^0,c
  5809  002C6A  500A               	movf	___fltol@exp1^0,w,c
  5810  002C6C  A4D8               	btfss	status,2,c
  5811  002C6E  EF3B  F016         	goto	u3911
  5812  002C72  EF3D  F016         	goto	u3910
  5813  002C76                     u3911:
  5814  002C76  EF47  F016         	goto	l3908
  5815  002C7A                     u3910:
  5816  002C7A                     l3904:
  5817  002C7A  0E00               	movlw	0
  5818  002C7C  6E01               	movwf	?___fltol^0,c
  5819  002C7E  0E00               	movlw	0
  5820  002C80  6E02               	movwf	(?___fltol+1)^0,c
  5821  002C82  0E00               	movlw	0
  5822  002C84  6E03               	movwf	(?___fltol+2)^0,c
  5823  002C86  0E00               	movlw	0
  5824  002C88  6E04               	movwf	(?___fltol+3)^0,c
  5825  002C8A  EFB4  F016         	goto	l718
  5826  002C8E                     l3908:
  5827  002C8E  C001  F005         	movff	___fltol@f1,??___fltol
  5828  002C92  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5829  002C96  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5830  002C9A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5831  002C9E  0E20               	movlw	32
  5832  002CA0  EF57  F016         	goto	u3920
  5833  002CA4                     u3925:
  5834  002CA4  90D8               	bcf	status,0,c
  5835  002CA6  3208               	rrcf	(??___fltol+3)^0,f,c
  5836  002CA8  3207               	rrcf	(??___fltol+2)^0,f,c
  5837  002CAA  3206               	rrcf	(??___fltol+1)^0,f,c
  5838  002CAC  3205               	rrcf	??___fltol^0,f,c
  5839  002CAE                     u3920:
  5840  002CAE  2EE8               	decfsz	wreg,f,c
  5841  002CB0  EF52  F016         	goto	u3925
  5842  002CB4  5005               	movf	??___fltol^0,w,c
  5843  002CB6  6E09               	movwf	___fltol@sign1^0,c
  5844  002CB8  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5845  002CBA  0EFF               	movlw	255
  5846  002CBC  1601               	andwf	___fltol@f1^0,f,c
  5847  002CBE  0EFF               	movlw	255
  5848  002CC0  1602               	andwf	(___fltol@f1+1)^0,f,c
  5849  002CC2  0EFF               	movlw	255
  5850  002CC4  1603               	andwf	(___fltol@f1+2)^0,f,c
  5851  002CC6  0E00               	movlw	0
  5852  002CC8  1604               	andwf	(___fltol@f1+3)^0,f,c
  5853  002CCA  0E96               	movlw	150
  5854  002CCC  5E0A               	subwf	___fltol@exp1^0,f,c
  5855  002CCE  BE0A               	btfsc	___fltol@exp1^0,7,c
  5856  002CD0  EF6E  F016         	goto	u3930
  5857  002CD4  EF6C  F016         	goto	u3931
  5858  002CD8                     u3931:
  5859  002CD8  EF84  F016         	goto	l3928
  5860  002CDC                     u3930:
  5861  002CDC  500A               	movf	___fltol@exp1^0,w,c
  5862  002CDE  0A80               	xorlw	128
  5863  002CE0  0F97               	addlw	151
  5864  002CE2  B0D8               	btfsc	status,0,c
  5865  002CE4  EF76  F016         	goto	u3941
  5866  002CE8  EF78  F016         	goto	u3940
  5867  002CEC                     u3941:
  5868  002CEC  EF7A  F016         	goto	l3924
  5869  002CF0                     u3940:
  5870  002CF0  EF3D  F016         	goto	l3904
  5871  002CF4                     l3924:
  5872  002CF4  90D8               	bcf	status,0,c
  5873  002CF6  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5874  002CF8  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5875  002CFA  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5876  002CFC  3201               	rrcf	___fltol@f1^0,f,c
  5877  002CFE  3E0A               	incfsz	___fltol@exp1^0,f,c
  5878  002D00  EF7A  F016         	goto	l3924
  5879  002D04  EF9C  F016         	goto	l3938
  5880  002D08                     l3928:
  5881  002D08  0E1F               	movlw	31
  5882  002D0A  640A               	cpfsgt	___fltol@exp1^0,c
  5883  002D0C  EF8A  F016         	goto	u3951
  5884  002D10  EF8C  F016         	goto	u3950
  5885  002D14                     u3951:
  5886  002D14  EF94  F016         	goto	l3936
  5887  002D18                     u3950:
  5888  002D18  EF3D  F016         	goto	l3904
  5889  002D1C                     l3934:
  5890  002D1C  90D8               	bcf	status,0,c
  5891  002D1E  3601               	rlcf	___fltol@f1^0,f,c
  5892  002D20  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5893  002D22  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5894  002D24  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5895  002D26  060A               	decf	___fltol@exp1^0,f,c
  5896  002D28                     l3936:
  5897  002D28  500A               	movf	___fltol@exp1^0,w,c
  5898  002D2A  A4D8               	btfss	status,2,c
  5899  002D2C  EF9A  F016         	goto	u3961
  5900  002D30  EF9C  F016         	goto	u3960
  5901  002D34                     u3961:
  5902  002D34  EF8E  F016         	goto	l3934
  5903  002D38                     u3960:
  5904  002D38                     l3938:
  5905  002D38  5009               	movf	___fltol@sign1^0,w,c
  5906  002D3A  B4D8               	btfsc	status,2,c
  5907  002D3C  EFA2  F016         	goto	u3971
  5908  002D40  EFA4  F016         	goto	u3970
  5909  002D44                     u3971:
  5910  002D44  EFAC  F016         	goto	l3942
  5911  002D48                     u3970:
  5912  002D48  1E04               	comf	(___fltol@f1+3)^0,f,c
  5913  002D4A  1E03               	comf	(___fltol@f1+2)^0,f,c
  5914  002D4C  1E02               	comf	(___fltol@f1+1)^0,f,c
  5915  002D4E  6C01               	negf	___fltol@f1^0,c
  5916  002D50  0E00               	movlw	0
  5917  002D52  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5918  002D54  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5919  002D56  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5920  002D58                     l3942:
  5921  002D58  C001  F001         	movff	___fltol@f1,?___fltol
  5922  002D5C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5923  002D60  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5924  002D64  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5925  002D68                     l718:
  5926  002D68  0012               	return		;funcret
  5927  002D6A                     __end_of___fltol:
  5928                           	callstack 0
  5929                           
  5930 ;; *************** function ___flsub *****************
  5931 ;; Defined at:
  5932 ;;		line 245 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  b               4   55[COMRAM] long 
  5935 ;;  a               4   59[COMRAM] long 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;		None
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  4   55[COMRAM] long 
  5940 ;; Registers used:
  5941 ;;		wreg, status,2, status,0, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5947 ;;      Params:         8       0       0       0       0       0       0
  5948 ;;      Locals:         0       0       0       0       0       0       0
  5949 ;;      Temps:          0       0       0       0       0       0       0
  5950 ;;      Totals:         8       0       0       0       0       0       0
  5951 ;;Total ram usage:        8 bytes
  5952 ;; Hardware stack levels used: 1
  5953 ;; Hardware stack levels required when called: 1
  5954 ;; This function calls:
  5955 ;;		___fladd
  5956 ;; This function is called by:
  5957 ;;		_efgtoa
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text24
  5962  003A74                     __ptext24:
  5963                           	callstack 0
  5964  003A74                     ___flsub:
  5965                           	callstack 24
  5966  003A74  0E00               	movlw	0
  5967  003A76  1A3C               	xorwf	___flsub@a^0,f,c
  5968  003A78  0E00               	movlw	0
  5969  003A7A  1A3D               	xorwf	(___flsub@a+1)^0,f,c
  5970  003A7C  0E00               	movlw	0
  5971  003A7E  1A3E               	xorwf	(___flsub@a+2)^0,f,c
  5972  003A80  0E80               	movlw	128
  5973  003A82  1A3F               	xorwf	(___flsub@a+3)^0,f,c
  5974  003A84  C038  F028         	movff	___flsub@b,___fladd@b
  5975  003A88  C039  F029         	movff	___flsub@b+1,___fladd@b+1
  5976  003A8C  C03A  F02A         	movff	___flsub@b+2,___fladd@b+2
  5977  003A90  C03B  F02B         	movff	___flsub@b+3,___fladd@b+3
  5978  003A94  C03C  F02C         	movff	___flsub@a,___fladd@a
  5979  003A98  C03D  F02D         	movff	___flsub@a+1,___fladd@a+1
  5980  003A9C  C03E  F02E         	movff	___flsub@a+2,___fladd@a+2
  5981  003AA0  C03F  F02F         	movff	___flsub@a+3,___fladd@a+3
  5982  003AA4  ECB5  F00B         	call	___fladd	;wreg free
  5983  003AA8  C028  F038         	movff	?___fladd,?___flsub
  5984  003AAC  C029  F039         	movff	?___fladd+1,?___flsub+1
  5985  003AB0  C02A  F03A         	movff	?___fladd+2,?___flsub+2
  5986  003AB4  C02B  F03B         	movff	?___fladd+3,?___flsub+3
  5987  003AB8  0012               	return		;funcret
  5988  003ABA                     __end_of___flsub:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function ___fladd *****************
  5992 ;; Defined at:
  5993 ;;		line 10 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  b               4   39[COMRAM] long 
  5996 ;;  a               4   43[COMRAM] long 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;  grs             1   54[COMRAM] unsigned char 
  5999 ;;  bexp            1   53[COMRAM] unsigned char 
  6000 ;;  aexp            1   52[COMRAM] unsigned char 
  6001 ;;  signs           1   51[COMRAM] unsigned char 
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  4   39[COMRAM] unsigned char 
  6004 ;; Registers used:
  6005 ;;		wreg, status,2, status,0
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6011 ;;      Params:         8       0       0       0       0       0       0
  6012 ;;      Locals:         4       0       0       0       0       0       0
  6013 ;;      Temps:          4       0       0       0       0       0       0
  6014 ;;      Totals:        16       0       0       0       0       0       0
  6015 ;;Total ram usage:       16 bytes
  6016 ;; Hardware stack levels used: 1
  6017 ;; This function calls:
  6018 ;;		Nothing
  6019 ;; This function is called by:
  6020 ;;		_read_TEMPERATURE
  6021 ;;		___flsub
  6022 ;;		_efgtoa
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           	psect	text25
  6027  00176A                     __ptext25:
  6028                           	callstack 0
  6029  00176A                     ___fladd:
  6030                           	callstack 24
  6031  00176A  502B               	movf	(___fladd@b+3)^0,w,c
  6032  00176C  0B80               	andlw	128
  6033  00176E  6E34               	movwf	___fladd@signs^0,c
  6034  001770  502B               	movf	(___fladd@b+3)^0,w,c
  6035  001772  242B               	addwf	(___fladd@b+3)^0,w,c
  6036  001774  6E36               	movwf	___fladd@bexp^0,c
  6037  001776  AE2A               	btfss	(___fladd@b+2)^0,7,c
  6038  001778  EFC0  F00B         	goto	u2831
  6039  00177C  EFC2  F00B         	goto	u2830
  6040  001780                     u2831:
  6041  001780  EFC3  F00B         	goto	l3274
  6042  001784                     u2830:
  6043  001784  8036               	bsf	___fladd@bexp^0,0,c
  6044  001786                     l3274:
  6045  001786  5036               	movf	___fladd@bexp^0,w,c
  6046  001788  B4D8               	btfsc	status,2,c
  6047  00178A  EFC9  F00B         	goto	u2841
  6048  00178E  EFCB  F00B         	goto	u2840
  6049  001792                     u2841:
  6050  001792  EFE0  F00B         	goto	l3284
  6051  001796                     u2840:
  6052  001796  2836               	incf	___fladd@bexp^0,w,c
  6053  001798  A4D8               	btfss	status,2,c
  6054  00179A  EFD1  F00B         	goto	u2851
  6055  00179E  EFD3  F00B         	goto	u2850
  6056  0017A2                     u2851:
  6057  0017A2  EFDB  F00B         	goto	l3280
  6058  0017A6                     u2850:
  6059  0017A6  0E00               	movlw	0
  6060  0017A8  6E28               	movwf	___fladd@b^0,c
  6061  0017AA  0E00               	movlw	0
  6062  0017AC  6E29               	movwf	(___fladd@b+1)^0,c
  6063  0017AE  0E00               	movlw	0
  6064  0017B0  6E2A               	movwf	(___fladd@b+2)^0,c
  6065  0017B2  0E00               	movlw	0
  6066  0017B4  6E2B               	movwf	(___fladd@b+3)^0,c
  6067  0017B6                     l3280:
  6068  0017B6  8E2A               	bsf	(___fladd@b+2)^0,7,c
  6069  0017B8  0E00               	movlw	0
  6070  0017BA  6E2B               	movwf	(___fladd@b+3)^0,c
  6071  0017BC  EFE8  F00B         	goto	l3286
  6072  0017C0                     l3284:
  6073  0017C0  0E00               	movlw	0
  6074  0017C2  6E28               	movwf	___fladd@b^0,c
  6075  0017C4  0E00               	movlw	0
  6076  0017C6  6E29               	movwf	(___fladd@b+1)^0,c
  6077  0017C8  0E00               	movlw	0
  6078  0017CA  6E2A               	movwf	(___fladd@b+2)^0,c
  6079  0017CC  0E00               	movlw	0
  6080  0017CE  6E2B               	movwf	(___fladd@b+3)^0,c
  6081  0017D0                     l3286:
  6082  0017D0  502F               	movf	(___fladd@a+3)^0,w,c
  6083  0017D2  0B80               	andlw	128
  6084  0017D4  6E35               	movwf	___fladd@aexp^0,c
  6085  0017D6  5034               	movf	___fladd@signs^0,w,c
  6086  0017D8  1835               	xorwf	___fladd@aexp^0,w,c
  6087  0017DA  B4D8               	btfsc	status,2,c
  6088  0017DC  EFF2  F00B         	goto	u2861
  6089  0017E0  EFF4  F00B         	goto	u2860
  6090  0017E4                     u2861:
  6091  0017E4  EFF5  F00B         	goto	l3292
  6092  0017E8                     u2860:
  6093  0017E8  8C34               	bsf	___fladd@signs^0,6,c
  6094  0017EA                     l3292:
  6095  0017EA  502F               	movf	(___fladd@a+3)^0,w,c
  6096  0017EC  242F               	addwf	(___fladd@a+3)^0,w,c
  6097  0017EE  6E35               	movwf	___fladd@aexp^0,c
  6098  0017F0  AE2E               	btfss	(___fladd@a+2)^0,7,c
  6099  0017F2  EFFD  F00B         	goto	u2871
  6100  0017F6  EFFF  F00B         	goto	u2870
  6101  0017FA                     u2871:
  6102  0017FA  EF00  F00C         	goto	l3298
  6103  0017FE                     u2870:
  6104  0017FE  8035               	bsf	___fladd@aexp^0,0,c
  6105  001800                     l3298:
  6106  001800  5035               	movf	___fladd@aexp^0,w,c
  6107  001802  B4D8               	btfsc	status,2,c
  6108  001804  EF06  F00C         	goto	u2881
  6109  001808  EF08  F00C         	goto	u2880
  6110  00180C                     u2881:
  6111  00180C  EF1D  F00C         	goto	l3308
  6112  001810                     u2880:
  6113  001810  2835               	incf	___fladd@aexp^0,w,c
  6114  001812  A4D8               	btfss	status,2,c
  6115  001814  EF0E  F00C         	goto	u2891
  6116  001818  EF10  F00C         	goto	u2890
  6117  00181C                     u2891:
  6118  00181C  EF18  F00C         	goto	l3304
  6119  001820                     u2890:
  6120  001820  0E00               	movlw	0
  6121  001822  6E2C               	movwf	___fladd@a^0,c
  6122  001824  0E00               	movlw	0
  6123  001826  6E2D               	movwf	(___fladd@a+1)^0,c
  6124  001828  0E00               	movlw	0
  6125  00182A  6E2E               	movwf	(___fladd@a+2)^0,c
  6126  00182C  0E00               	movlw	0
  6127  00182E  6E2F               	movwf	(___fladd@a+3)^0,c
  6128  001830                     l3304:
  6129  001830  8E2E               	bsf	(___fladd@a+2)^0,7,c
  6130  001832  0E00               	movlw	0
  6131  001834  6E2F               	movwf	(___fladd@a+3)^0,c
  6132  001836  EF25  F00C         	goto	l3310
  6133  00183A                     l3308:
  6134  00183A  0E00               	movlw	0
  6135  00183C  6E2C               	movwf	___fladd@a^0,c
  6136  00183E  0E00               	movlw	0
  6137  001840  6E2D               	movwf	(___fladd@a+1)^0,c
  6138  001842  0E00               	movlw	0
  6139  001844  6E2E               	movwf	(___fladd@a+2)^0,c
  6140  001846  0E00               	movlw	0
  6141  001848  6E2F               	movwf	(___fladd@a+3)^0,c
  6142  00184A                     l3310:
  6143  00184A  5036               	movf	___fladd@bexp^0,w,c
  6144  00184C  5C35               	subwf	___fladd@aexp^0,w,c
  6145  00184E  B0D8               	btfsc	status,0,c
  6146  001850  EF2C  F00C         	goto	u2901
  6147  001854  EF2E  F00C         	goto	u2900
  6148  001858                     u2901:
  6149  001858  EF55  F00C         	goto	l3346
  6150  00185C                     u2900:
  6151  00185C  AC34               	btfss	___fladd@signs^0,6,c
  6152  00185E  EF33  F00C         	goto	u2911
  6153  001862  EF35  F00C         	goto	u2910
  6154  001866                     u2911:
  6155  001866  EF37  F00C         	goto	l3316
  6156  00186A                     u2910:
  6157  00186A  0E80               	movlw	128
  6158  00186C  1A34               	xorwf	___fladd@signs^0,f,c
  6159  00186E                     l3316:
  6160  00186E  C036  F037         	movff	___fladd@bexp,___fladd@grs
  6161  001872  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  6162  001876  C037  F035         	movff	___fladd@grs,___fladd@aexp
  6163  00187A  C028  F037         	movff	___fladd@b,___fladd@grs
  6164  00187E  C02C  F028         	movff	___fladd@a,___fladd@b
  6165  001882  C037  F02C         	movff	___fladd@grs,___fladd@a
  6166  001886  C029  F037         	movff	___fladd@b+1,___fladd@grs
  6167  00188A  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  6168  00188E  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  6169  001892  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  6170  001896  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  6171  00189A  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  6172  00189E  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  6173  0018A2  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  6174  0018A6  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  6175  0018AA                     l3346:
  6176  0018AA  0E00               	movlw	0
  6177  0018AC  6E37               	movwf	___fladd@grs^0,c
  6178  0018AE  5036               	movf	___fladd@bexp^0,w,c
  6179  0018B0  C035  F030         	movff	___fladd@aexp,??___fladd
  6180  0018B4  6A31               	clrf	(??___fladd+1)^0,c
  6181  0018B6  5E30               	subwf	??___fladd^0,f,c
  6182  0018B8  0E00               	movlw	0
  6183  0018BA  5A31               	subwfb	(??___fladd+1)^0,f,c
  6184  0018BC  BE31               	btfsc	(??___fladd+1)^0,7,c
  6185  0018BE  EF6A  F00C         	goto	u2921
  6186  0018C2  5031               	movf	(??___fladd+1)^0,w,c
  6187  0018C4  E109               	bnz	u2920
  6188  0018C6  0E1A               	movlw	26
  6189  0018C8  5C30               	subwf	??___fladd^0,w,c
  6190  0018CA  A0D8               	btfss	status,0,c
  6191  0018CC  EF6A  F00C         	goto	u2921
  6192  0018D0  EF6C  F00C         	goto	u2920
  6193  0018D4                     u2921:
  6194  0018D4  EFA3  F00C         	goto	l950
  6195  0018D8                     u2920:
  6196  0018D8  5028               	movf	___fladd@b^0,w,c
  6197  0018DA  1029               	iorwf	(___fladd@b+1)^0,w,c
  6198  0018DC  102A               	iorwf	(___fladd@b+2)^0,w,c
  6199  0018DE  102B               	iorwf	(___fladd@b+3)^0,w,c
  6200  0018E0  A4D8               	btfss	status,2,c
  6201  0018E2  EF75  F00C         	goto	u2931
  6202  0018E6  EF78  F00C         	goto	u2930
  6203  0018EA                     u2931:
  6204  0018EA  0E01               	movlw	1
  6205  0018EC  EF79  F00C         	goto	u2940
  6206  0018F0                     u2930:
  6207  0018F0  0E00               	movlw	0
  6208  0018F2                     u2940:
  6209  0018F2  6E37               	movwf	___fladd@grs^0,c
  6210  0018F4  0E00               	movlw	0
  6211  0018F6  6E28               	movwf	___fladd@b^0,c
  6212  0018F8  0E00               	movlw	0
  6213  0018FA  6E29               	movwf	(___fladd@b+1)^0,c
  6214  0018FC  0E00               	movlw	0
  6215  0018FE  6E2A               	movwf	(___fladd@b+2)^0,c
  6216  001900  0E00               	movlw	0
  6217  001902  6E2B               	movwf	(___fladd@b+3)^0,c
  6218  001904  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  6219  001908  EFAC  F00C         	goto	l949
  6220  00190C                     l951:
  6221  00190C  A037               	btfss	___fladd@grs^0,0,c
  6222  00190E  EF8B  F00C         	goto	u2951
  6223  001912  EF8D  F00C         	goto	u2950
  6224  001916                     u2951:
  6225  001916  EF93  F00C         	goto	l3358
  6226  00191A                     u2950:
  6227  00191A  90D8               	bcf	status,0,c
  6228  00191C  3037               	rrcf	___fladd@grs^0,w,c
  6229  00191E  0901               	iorlw	1
  6230  001920  6E37               	movwf	___fladd@grs^0,c
  6231  001922  EF95  F00C         	goto	l3360
  6232  001926                     l3358:
  6233  001926  90D8               	bcf	status,0,c
  6234  001928  3237               	rrcf	___fladd@grs^0,f,c
  6235  00192A                     l3360:
  6236  00192A  A028               	btfss	___fladd@b^0,0,c
  6237  00192C  EF9A  F00C         	goto	u2961
  6238  001930  EF9C  F00C         	goto	u2960
  6239  001934                     u2961:
  6240  001934  EF9D  F00C         	goto	l3364
  6241  001938                     u2960:
  6242  001938  8E37               	bsf	___fladd@grs^0,7,c
  6243  00193A                     l3364:
  6244  00193A  342B               	rlcf	(___fladd@b+3)^0,w,c
  6245  00193C  322B               	rrcf	(___fladd@b+3)^0,f,c
  6246  00193E  322A               	rrcf	(___fladd@b+2)^0,f,c
  6247  001940  3229               	rrcf	(___fladd@b+1)^0,f,c
  6248  001942  3228               	rrcf	___fladd@b^0,f,c
  6249  001944  2A36               	incf	___fladd@bexp^0,f,c
  6250  001946                     l950:
  6251  001946  5035               	movf	___fladd@aexp^0,w,c
  6252  001948  5C36               	subwf	___fladd@bexp^0,w,c
  6253  00194A  A0D8               	btfss	status,0,c
  6254  00194C  EFAA  F00C         	goto	u2971
  6255  001950  EFAC  F00C         	goto	u2970
  6256  001954                     u2971:
  6257  001954  EF86  F00C         	goto	l951
  6258  001958                     u2970:
  6259  001958                     l949:
  6260  001958  BC34               	btfsc	___fladd@signs^0,6,c
  6261  00195A  EFB1  F00C         	goto	u2981
  6262  00195E  EFB3  F00C         	goto	u2980
  6263  001962                     u2981:
  6264  001962  EFF3  F00C         	goto	l3392
  6265  001966                     u2980:
  6266  001966  5036               	movf	___fladd@bexp^0,w,c
  6267  001968  A4D8               	btfss	status,2,c
  6268  00196A  EFB9  F00C         	goto	u2991
  6269  00196E  EFBB  F00C         	goto	u2990
  6270  001972                     u2991:
  6271  001972  EFC5  F00C         	goto	l3374
  6272  001976                     u2990:
  6273  001976  0E00               	movlw	0
  6274  001978  6E28               	movwf	?___fladd^0,c
  6275  00197A  0E00               	movlw	0
  6276  00197C  6E29               	movwf	(?___fladd+1)^0,c
  6277  00197E  0E00               	movlw	0
  6278  001980  6E2A               	movwf	(?___fladd+2)^0,c
  6279  001982  0E00               	movlw	0
  6280  001984  6E2B               	movwf	(?___fladd+3)^0,c
  6281  001986  EF14  F00E         	goto	l958
  6282  00198A                     l3374:
  6283  00198A  502C               	movf	___fladd@a^0,w,c
  6284  00198C  2628               	addwf	___fladd@b^0,f,c
  6285  00198E  502D               	movf	(___fladd@a+1)^0,w,c
  6286  001990  2229               	addwfc	(___fladd@b+1)^0,f,c
  6287  001992  502E               	movf	(___fladd@a+2)^0,w,c
  6288  001994  222A               	addwfc	(___fladd@b+2)^0,f,c
  6289  001996  502F               	movf	(___fladd@a+3)^0,w,c
  6290  001998  222B               	addwfc	(___fladd@b+3)^0,f,c
  6291  00199A  A02B               	btfss	(___fladd@b+3)^0,0,c
  6292  00199C  EFD2  F00C         	goto	u3001
  6293  0019A0  EFD4  F00C         	goto	u3000
  6294  0019A4                     u3001:
  6295  0019A4  EF80  F00D         	goto	l3428
  6296  0019A8                     u3000:
  6297  0019A8  A037               	btfss	___fladd@grs^0,0,c
  6298  0019AA  EFD9  F00C         	goto	u3011
  6299  0019AE  EFDB  F00C         	goto	u3010
  6300  0019B2                     u3011:
  6301  0019B2  EFE1  F00C         	goto	l3382
  6302  0019B6                     u3010:
  6303  0019B6  90D8               	bcf	status,0,c
  6304  0019B8  3037               	rrcf	___fladd@grs^0,w,c
  6305  0019BA  0901               	iorlw	1
  6306  0019BC  6E37               	movwf	___fladd@grs^0,c
  6307  0019BE  EFE3  F00C         	goto	l3384
  6308  0019C2                     l3382:
  6309  0019C2  90D8               	bcf	status,0,c
  6310  0019C4  3237               	rrcf	___fladd@grs^0,f,c
  6311  0019C6                     l3384:
  6312  0019C6  A028               	btfss	___fladd@b^0,0,c
  6313  0019C8  EFE8  F00C         	goto	u3021
  6314  0019CC  EFEA  F00C         	goto	u3020
  6315  0019D0                     u3021:
  6316  0019D0  EFEB  F00C         	goto	l3388
  6317  0019D4                     u3020:
  6318  0019D4  8E37               	bsf	___fladd@grs^0,7,c
  6319  0019D6                     l3388:
  6320  0019D6  342B               	rlcf	(___fladd@b+3)^0,w,c
  6321  0019D8  322B               	rrcf	(___fladd@b+3)^0,f,c
  6322  0019DA  322A               	rrcf	(___fladd@b+2)^0,f,c
  6323  0019DC  3229               	rrcf	(___fladd@b+1)^0,f,c
  6324  0019DE  3228               	rrcf	___fladd@b^0,f,c
  6325  0019E0  2A36               	incf	___fladd@bexp^0,f,c
  6326  0019E2  EF80  F00D         	goto	l3428
  6327  0019E6                     l3392:
  6328  0019E6  502C               	movf	___fladd@a^0,w,c
  6329  0019E8  5C28               	subwf	___fladd@b^0,w,c
  6330  0019EA  502D               	movf	(___fladd@a+1)^0,w,c
  6331  0019EC  5829               	subwfb	(___fladd@b+1)^0,w,c
  6332  0019EE  502E               	movf	(___fladd@a+2)^0,w,c
  6333  0019F0  582A               	subwfb	(___fladd@b+2)^0,w,c
  6334  0019F2  502B               	movf	(___fladd@b+3)^0,w,c
  6335  0019F4  0A80               	xorlw	128
  6336  0019F6  6E30               	movwf	??___fladd^0,c
  6337  0019F8  502F               	movf	(___fladd@a+3)^0,w,c
  6338  0019FA  0A80               	xorlw	128
  6339  0019FC  5830               	subwfb	??___fladd^0,w,c
  6340  0019FE  B0D8               	btfsc	status,0,c
  6341  001A00  EF04  F00D         	goto	u3031
  6342  001A04  EF06  F00D         	goto	u3030
  6343  001A08                     u3031:
  6344  001A08  EF31  F00D         	goto	l3402
  6345  001A0C                     u3030:
  6346  001A0C  5028               	movf	___fladd@b^0,w,c
  6347  001A0E  5C2C               	subwf	___fladd@a^0,w,c
  6348  001A10  6E30               	movwf	??___fladd^0,c
  6349  001A12  5029               	movf	(___fladd@b+1)^0,w,c
  6350  001A14  582D               	subwfb	(___fladd@a+1)^0,w,c
  6351  001A16  6E31               	movwf	(??___fladd+1)^0,c
  6352  001A18  502A               	movf	(___fladd@b+2)^0,w,c
  6353  001A1A  582E               	subwfb	(___fladd@a+2)^0,w,c
  6354  001A1C  6E32               	movwf	(??___fladd+2)^0,c
  6355  001A1E  502B               	movf	(___fladd@b+3)^0,w,c
  6356  001A20  582F               	subwfb	(___fladd@a+3)^0,w,c
  6357  001A22  6E33               	movwf	(??___fladd+3)^0,c
  6358  001A24  0EFF               	movlw	255
  6359  001A26  2430               	addwf	??___fladd^0,w,c
  6360  001A28  6E28               	movwf	___fladd@b^0,c
  6361  001A2A  0EFF               	movlw	255
  6362  001A2C  2031               	addwfc	(??___fladd+1)^0,w,c
  6363  001A2E  6E29               	movwf	(___fladd@b+1)^0,c
  6364  001A30  0EFF               	movlw	255
  6365  001A32  2032               	addwfc	(??___fladd+2)^0,w,c
  6366  001A34  6E2A               	movwf	(___fladd@b+2)^0,c
  6367  001A36  0EFF               	movlw	255
  6368  001A38  2033               	addwfc	(??___fladd+3)^0,w,c
  6369  001A3A  6E2B               	movwf	(___fladd@b+3)^0,c
  6370  001A3C  0E80               	movlw	128
  6371  001A3E  1A34               	xorwf	___fladd@signs^0,f,c
  6372  001A40  6C37               	negf	___fladd@grs^0,c
  6373  001A42  5037               	movf	___fladd@grs^0,w,c
  6374  001A44  A4D8               	btfss	status,2,c
  6375  001A46  EF27  F00D         	goto	u3041
  6376  001A4A  EF29  F00D         	goto	u3040
  6377  001A4E                     u3041:
  6378  001A4E  EF39  F00D         	goto	l966
  6379  001A52                     u3040:
  6380  001A52  0E01               	movlw	1
  6381  001A54  2628               	addwf	___fladd@b^0,f,c
  6382  001A56  0E00               	movlw	0
  6383  001A58  2229               	addwfc	(___fladd@b+1)^0,f,c
  6384  001A5A  222A               	addwfc	(___fladd@b+2)^0,f,c
  6385  001A5C  222B               	addwfc	(___fladd@b+3)^0,f,c
  6386  001A5E  EF39  F00D         	goto	l966
  6387  001A62                     l3402:
  6388  001A62  502C               	movf	___fladd@a^0,w,c
  6389  001A64  5E28               	subwf	___fladd@b^0,f,c
  6390  001A66  502D               	movf	(___fladd@a+1)^0,w,c
  6391  001A68  5A29               	subwfb	(___fladd@b+1)^0,f,c
  6392  001A6A  502E               	movf	(___fladd@a+2)^0,w,c
  6393  001A6C  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  6394  001A6E  502F               	movf	(___fladd@a+3)^0,w,c
  6395  001A70  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  6396  001A72                     l966:
  6397  001A72  5028               	movf	___fladd@b^0,w,c
  6398  001A74  1029               	iorwf	(___fladd@b+1)^0,w,c
  6399  001A76  102A               	iorwf	(___fladd@b+2)^0,w,c
  6400  001A78  102B               	iorwf	(___fladd@b+3)^0,w,c
  6401  001A7A  A4D8               	btfss	status,2,c
  6402  001A7C  EF42  F00D         	goto	u3051
  6403  001A80  EF44  F00D         	goto	u3050
  6404  001A84                     u3051:
  6405  001A84  EF79  F00D         	goto	l3426
  6406  001A88                     u3050:
  6407  001A88  5037               	movf	___fladd@grs^0,w,c
  6408  001A8A  A4D8               	btfss	status,2,c
  6409  001A8C  EF4A  F00D         	goto	u3061
  6410  001A90  EF4C  F00D         	goto	u3060
  6411  001A94                     u3061:
  6412  001A94  EF79  F00D         	goto	l3426
  6413  001A98                     u3060:
  6414  001A98  0E00               	movlw	0
  6415  001A9A  6E28               	movwf	?___fladd^0,c
  6416  001A9C  0E00               	movlw	0
  6417  001A9E  6E29               	movwf	(?___fladd+1)^0,c
  6418  001AA0  0E00               	movlw	0
  6419  001AA2  6E2A               	movwf	(?___fladd+2)^0,c
  6420  001AA4  0E00               	movlw	0
  6421  001AA6  6E2B               	movwf	(?___fladd+3)^0,c
  6422  001AA8  EF14  F00E         	goto	l958
  6423  001AAC                     l3410:
  6424  001AAC  90D8               	bcf	status,0,c
  6425  001AAE  3628               	rlcf	___fladd@b^0,f,c
  6426  001AB0  3629               	rlcf	(___fladd@b+1)^0,f,c
  6427  001AB2  362A               	rlcf	(___fladd@b+2)^0,f,c
  6428  001AB4  362B               	rlcf	(___fladd@b+3)^0,f,c
  6429  001AB6  AE37               	btfss	___fladd@grs^0,7,c
  6430  001AB8  EF60  F00D         	goto	u3071
  6431  001ABC  EF62  F00D         	goto	u3070
  6432  001AC0                     u3071:
  6433  001AC0  EF63  F00D         	goto	l3416
  6434  001AC4                     u3070:
  6435  001AC4  8028               	bsf	___fladd@b^0,0,c
  6436  001AC6                     l3416:
  6437  001AC6  A037               	btfss	___fladd@grs^0,0,c
  6438  001AC8  EF68  F00D         	goto	u3081
  6439  001ACC  EF6A  F00D         	goto	u3080
  6440  001AD0                     u3081:
  6441  001AD0  EF6E  F00D         	goto	l3420
  6442  001AD4                     u3080:
  6443  001AD4  80D8               	bsf	status,0,c
  6444  001AD6  3637               	rlcf	___fladd@grs^0,f,c
  6445  001AD8  EF70  F00D         	goto	l3422
  6446  001ADC                     l3420:
  6447  001ADC  90D8               	bcf	status,0,c
  6448  001ADE  3637               	rlcf	___fladd@grs^0,f,c
  6449  001AE0                     l3422:
  6450  001AE0  5036               	movf	___fladd@bexp^0,w,c
  6451  001AE2  B4D8               	btfsc	status,2,c
  6452  001AE4  EF76  F00D         	goto	u3091
  6453  001AE8  EF78  F00D         	goto	u3090
  6454  001AEC                     u3091:
  6455  001AEC  EF79  F00D         	goto	l3426
  6456  001AF0                     u3090:
  6457  001AF0  0636               	decf	___fladd@bexp^0,f,c
  6458  001AF2                     l3426:
  6459  001AF2  AE2A               	btfss	(___fladd@b+2)^0,7,c
  6460  001AF4  EF7E  F00D         	goto	u3101
  6461  001AF8  EF80  F00D         	goto	u3100
  6462  001AFC                     u3101:
  6463  001AFC  EF56  F00D         	goto	l3410
  6464  001B00                     u3100:
  6465  001B00                     l3428:
  6466  001B00  0E00               	movlw	0
  6467  001B02  6E35               	movwf	___fladd@aexp^0,c
  6468  001B04  AE37               	btfss	___fladd@grs^0,7,c
  6469  001B06  EF87  F00D         	goto	u3111
  6470  001B0A  EF89  F00D         	goto	u3110
  6471  001B0E                     u3111:
  6472  001B0E  EFA1  F00D         	goto	l975
  6473  001B12                     u3110:
  6474  001B12  C037  F030         	movff	___fladd@grs,??___fladd
  6475  001B16  0E7F               	movlw	127
  6476  001B18  1630               	andwf	??___fladd^0,f,c
  6477  001B1A  B4D8               	btfsc	status,2,c
  6478  001B1C  EF92  F00D         	goto	u3121
  6479  001B20  EF94  F00D         	goto	u3120
  6480  001B24                     u3121:
  6481  001B24  EF98  F00D         	goto	l976
  6482  001B28                     u3120:
  6483  001B28                     l3434:
  6484  001B28  0E01               	movlw	1
  6485  001B2A  6E35               	movwf	___fladd@aexp^0,c
  6486  001B2C  EFA1  F00D         	goto	l975
  6487  001B30                     l976:
  6488  001B30  A028               	btfss	___fladd@b^0,0,c
  6489  001B32  EF9D  F00D         	goto	u3131
  6490  001B36  EF9F  F00D         	goto	u3130
  6491  001B3A                     u3131:
  6492  001B3A  EFA1  F00D         	goto	l975
  6493  001B3E                     u3130:
  6494  001B3E  EF94  F00D         	goto	l3434
  6495  001B42                     l975:
  6496  001B42  5035               	movf	___fladd@aexp^0,w,c
  6497  001B44  B4D8               	btfsc	status,2,c
  6498  001B46  EFA7  F00D         	goto	u3141
  6499  001B4A  EFA9  F00D         	goto	u3140
  6500  001B4E                     u3141:
  6501  001B4E  EFD4  F00D         	goto	l3446
  6502  001B52                     u3140:
  6503  001B52  0E01               	movlw	1
  6504  001B54  2628               	addwf	___fladd@b^0,f,c
  6505  001B56  0E00               	movlw	0
  6506  001B58  2229               	addwfc	(___fladd@b+1)^0,f,c
  6507  001B5A  222A               	addwfc	(___fladd@b+2)^0,f,c
  6508  001B5C  222B               	addwfc	(___fladd@b+3)^0,f,c
  6509  001B5E  A02B               	btfss	(___fladd@b+3)^0,0,c
  6510  001B60  EFB4  F00D         	goto	u3151
  6511  001B64  EFB6  F00D         	goto	u3150
  6512  001B68                     u3151:
  6513  001B68  EFD4  F00D         	goto	l3446
  6514  001B6C                     u3150:
  6515  001B6C  C028  F030         	movff	___fladd@b,??___fladd
  6516  001B70  C029  F031         	movff	___fladd@b+1,??___fladd+1
  6517  001B74  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  6518  001B78  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  6519  001B7C  3433               	rlcf	(??___fladd+3)^0,w,c
  6520  001B7E  3233               	rrcf	(??___fladd+3)^0,f,c
  6521  001B80  3232               	rrcf	(??___fladd+2)^0,f,c
  6522  001B82  3231               	rrcf	(??___fladd+1)^0,f,c
  6523  001B84  3230               	rrcf	??___fladd^0,f,c
  6524  001B86  C030  F028         	movff	??___fladd,___fladd@b
  6525  001B8A  C031  F029         	movff	??___fladd+1,___fladd@b+1
  6526  001B8E  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  6527  001B92  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  6528  001B96  2836               	incf	___fladd@bexp^0,w,c
  6529  001B98  B4D8               	btfsc	status,2,c
  6530  001B9A  EFD1  F00D         	goto	u3161
  6531  001B9E  EFD3  F00D         	goto	u3160
  6532  001BA2                     u3161:
  6533  001BA2  EFD4  F00D         	goto	l3446
  6534  001BA6                     u3160:
  6535  001BA6  2A36               	incf	___fladd@bexp^0,f,c
  6536  001BA8                     l3446:
  6537  001BA8  2836               	incf	___fladd@bexp^0,w,c
  6538  001BAA  B4D8               	btfsc	status,2,c
  6539  001BAC  EFDA  F00D         	goto	u3171
  6540  001BB0  EFDC  F00D         	goto	u3170
  6541  001BB4                     u3171:
  6542  001BB4  EFE4  F00D         	goto	l3450
  6543  001BB8                     u3170:
  6544  001BB8  5036               	movf	___fladd@bexp^0,w,c
  6545  001BBA  A4D8               	btfss	status,2,c
  6546  001BBC  EFE2  F00D         	goto	u3181
  6547  001BC0  EFE4  F00D         	goto	u3180
  6548  001BC4                     u3181:
  6549  001BC4  EFF6  F00D         	goto	l3454
  6550  001BC8                     u3180:
  6551  001BC8                     l3450:
  6552  001BC8  0E00               	movlw	0
  6553  001BCA  6E28               	movwf	___fladd@b^0,c
  6554  001BCC  0E00               	movlw	0
  6555  001BCE  6E29               	movwf	(___fladd@b+1)^0,c
  6556  001BD0  0E00               	movlw	0
  6557  001BD2  6E2A               	movwf	(___fladd@b+2)^0,c
  6558  001BD4  0E00               	movlw	0
  6559  001BD6  6E2B               	movwf	(___fladd@b+3)^0,c
  6560  001BD8  5036               	movf	___fladd@bexp^0,w,c
  6561  001BDA  A4D8               	btfss	status,2,c
  6562  001BDC  EFF2  F00D         	goto	u3191
  6563  001BE0  EFF4  F00D         	goto	u3190
  6564  001BE4                     u3191:
  6565  001BE4  EFF6  F00D         	goto	l3454
  6566  001BE8                     u3190:
  6567  001BE8  0E00               	movlw	0
  6568  001BEA  6E34               	movwf	___fladd@signs^0,c
  6569  001BEC                     l3454:
  6570  001BEC  A036               	btfss	___fladd@bexp^0,0,c
  6571  001BEE  EFFB  F00D         	goto	u3201
  6572  001BF2  EFFD  F00D         	goto	u3200
  6573  001BF6                     u3201:
  6574  001BF6  EF00  F00E         	goto	l3458
  6575  001BFA                     u3200:
  6576  001BFA  8E2A               	bsf	(___fladd@b+2)^0,7,c
  6577  001BFC  EF01  F00E         	goto	l3460
  6578  001C00                     l3458:
  6579  001C00  9E2A               	bcf	(___fladd@b+2)^0,7,c
  6580  001C02                     l3460:
  6581  001C02  90D8               	bcf	status,0,c
  6582  001C04  3036               	rrcf	___fladd@bexp^0,w,c
  6583  001C06  6E2B               	movwf	(___fladd@b+3)^0,c
  6584  001C08  AE34               	btfss	___fladd@signs^0,7,c
  6585  001C0A  EF09  F00E         	goto	u3211
  6586  001C0E  EF0B  F00E         	goto	u3210
  6587  001C12                     u3211:
  6588  001C12  EF0C  F00E         	goto	l3466
  6589  001C16                     u3210:
  6590  001C16  8E2B               	bsf	(___fladd@b+3)^0,7,c
  6591  001C18                     l3466:
  6592  001C18  C028  F028         	movff	___fladd@b,?___fladd
  6593  001C1C  C029  F029         	movff	___fladd@b+1,?___fladd+1
  6594  001C20  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  6595  001C24  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  6596  001C28                     l958:
  6597  001C28  0012               	return		;funcret
  6598  001C2A                     __end_of___fladd:
  6599                           	callstack 0
  6600                           
  6601 ;; *************** function ___flneg *****************
  6602 ;; Defined at:
  6603 ;;		line 15 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/flneg.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  f1              4    0[COMRAM] unsigned char 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;		None
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  4    0[COMRAM] unsigned char 
  6610 ;; Registers used:
  6611 ;;		wreg, status,2, status,0
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6617 ;;      Params:         4       0       0       0       0       0       0
  6618 ;;      Locals:         0       0       0       0       0       0       0
  6619 ;;      Temps:          0       0       0       0       0       0       0
  6620 ;;      Totals:         4       0       0       0       0       0       0
  6621 ;;Total ram usage:        4 bytes
  6622 ;; Hardware stack levels used: 1
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_efgtoa
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text26
  6631  003BB8                     __ptext26:
  6632                           	callstack 0
  6633  003BB8                     ___flneg:
  6634                           	callstack 25
  6635  003BB8  5001               	movf	___flneg@f1^0,w,c
  6636  003BBA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6637  003BBC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6638  003BBE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6639  003BC0  B4D8               	btfsc	status,2,c
  6640  003BC2  EFE5  F01D         	goto	u3901
  6641  003BC6  EFE7  F01D         	goto	u3900
  6642  003BCA                     u3901:
  6643  003BCA  EFEF  F01D         	goto	l3898
  6644  003BCE                     u3900:
  6645  003BCE  0E00               	movlw	0
  6646  003BD0  1A01               	xorwf	___flneg@f1^0,f,c
  6647  003BD2  0E00               	movlw	0
  6648  003BD4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6649  003BD6  0E00               	movlw	0
  6650  003BD8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6651  003BDA  0E80               	movlw	128
  6652  003BDC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6653  003BDE                     l3898:
  6654  003BDE  C001  F001         	movff	___flneg@f1,?___flneg
  6655  003BE2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6656  003BE6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6657  003BEA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6658  003BEE  0012               	return		;funcret
  6659  003BF0                     __end_of___flneg:
  6660                           	callstack 0
  6661                           
  6662 ;; *************** function ___flmul *****************
  6663 ;; Defined at:
  6664 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/sprcmul.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;  b               4    0[COMRAM] unsigned char 
  6667 ;;  a               4    4[COMRAM] unsigned char 
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;  prod            4   19[COMRAM] struct .
  6670 ;;  grs             4   13[COMRAM] unsigned long 
  6671 ;;  temp            2   23[COMRAM] struct .
  6672 ;;  bexp            1   18[COMRAM] unsigned char 
  6673 ;;  aexp            1   17[COMRAM] unsigned char 
  6674 ;;  sign            1   12[COMRAM] unsigned char 
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  4    0[COMRAM] unsigned char 
  6677 ;; Registers used:
  6678 ;;		wreg, status,2, status,0, prodl, prodh
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6684 ;;      Params:         8       0       0       0       0       0       0
  6685 ;;      Locals:        13       0       0       0       0       0       0
  6686 ;;      Temps:          4       0       0       0       0       0       0
  6687 ;;      Totals:        25       0       0       0       0       0       0
  6688 ;;Total ram usage:       25 bytes
  6689 ;; Hardware stack levels used: 1
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_efgtoa
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text27
  6698  001C2A                     __ptext27:
  6699                           	callstack 0
  6700  001C2A                     ___flmul:
  6701                           	callstack 25
  6702  001C2A  5004               	movf	(___flmul@b+3)^0,w,c
  6703  001C2C  0B80               	andlw	128
  6704  001C2E  6E0D               	movwf	___flmul@sign^0,c
  6705  001C30  5004               	movf	(___flmul@b+3)^0,w,c
  6706  001C32  2404               	addwf	(___flmul@b+3)^0,w,c
  6707  001C34  6E13               	movwf	___flmul@bexp^0,c
  6708  001C36  AE03               	btfss	(___flmul@b+2)^0,7,c
  6709  001C38  EF20  F00E         	goto	u3511
  6710  001C3C  EF22  F00E         	goto	u3510
  6711  001C40                     u3511:
  6712  001C40  EF23  F00E         	goto	l3646
  6713  001C44                     u3510:
  6714  001C44  8013               	bsf	___flmul@bexp^0,0,c
  6715  001C46                     l3646:
  6716  001C46  5013               	movf	___flmul@bexp^0,w,c
  6717  001C48  B4D8               	btfsc	status,2,c
  6718  001C4A  EF29  F00E         	goto	u3521
  6719  001C4E  EF2B  F00E         	goto	u3520
  6720  001C52                     u3521:
  6721  001C52  EF3E  F00E         	goto	l3654
  6722  001C56                     u3520:
  6723  001C56  2813               	incf	___flmul@bexp^0,w,c
  6724  001C58  A4D8               	btfss	status,2,c
  6725  001C5A  EF31  F00E         	goto	u3531
  6726  001C5E  EF33  F00E         	goto	u3530
  6727  001C62                     u3531:
  6728  001C62  EF3B  F00E         	goto	l3652
  6729  001C66                     u3530:
  6730  001C66  0E00               	movlw	0
  6731  001C68  6E01               	movwf	___flmul@b^0,c
  6732  001C6A  0E00               	movlw	0
  6733  001C6C  6E02               	movwf	(___flmul@b+1)^0,c
  6734  001C6E  0E00               	movlw	0
  6735  001C70  6E03               	movwf	(___flmul@b+2)^0,c
  6736  001C72  0E00               	movlw	0
  6737  001C74  6E04               	movwf	(___flmul@b+3)^0,c
  6738  001C76                     l3652:
  6739  001C76  8E03               	bsf	(___flmul@b+2)^0,7,c
  6740  001C78  EF46  F00E         	goto	l3656
  6741  001C7C                     l3654:
  6742  001C7C  0E00               	movlw	0
  6743  001C7E  6E01               	movwf	___flmul@b^0,c
  6744  001C80  0E00               	movlw	0
  6745  001C82  6E02               	movwf	(___flmul@b+1)^0,c
  6746  001C84  0E00               	movlw	0
  6747  001C86  6E03               	movwf	(___flmul@b+2)^0,c
  6748  001C88  0E00               	movlw	0
  6749  001C8A  6E04               	movwf	(___flmul@b+3)^0,c
  6750  001C8C                     l3656:
  6751  001C8C  5008               	movf	(___flmul@a+3)^0,w,c
  6752  001C8E  0B80               	andlw	128
  6753  001C90  1A0D               	xorwf	___flmul@sign^0,f,c
  6754  001C92  5008               	movf	(___flmul@a+3)^0,w,c
  6755  001C94  2408               	addwf	(___flmul@a+3)^0,w,c
  6756  001C96  6E12               	movwf	___flmul@aexp^0,c
  6757  001C98  AE07               	btfss	(___flmul@a+2)^0,7,c
  6758  001C9A  EF51  F00E         	goto	u3541
  6759  001C9E  EF53  F00E         	goto	u3540
  6760  001CA2                     u3541:
  6761  001CA2  EF54  F00E         	goto	l3664
  6762  001CA6                     u3540:
  6763  001CA6  8012               	bsf	___flmul@aexp^0,0,c
  6764  001CA8                     l3664:
  6765  001CA8  5012               	movf	___flmul@aexp^0,w,c
  6766  001CAA  B4D8               	btfsc	status,2,c
  6767  001CAC  EF5A  F00E         	goto	u3551
  6768  001CB0  EF5C  F00E         	goto	u3550
  6769  001CB4                     u3551:
  6770  001CB4  EF6F  F00E         	goto	l3672
  6771  001CB8                     u3550:
  6772  001CB8  2812               	incf	___flmul@aexp^0,w,c
  6773  001CBA  A4D8               	btfss	status,2,c
  6774  001CBC  EF62  F00E         	goto	u3561
  6775  001CC0  EF64  F00E         	goto	u3560
  6776  001CC4                     u3561:
  6777  001CC4  EF6C  F00E         	goto	l3670
  6778  001CC8                     u3560:
  6779  001CC8  0E00               	movlw	0
  6780  001CCA  6E05               	movwf	___flmul@a^0,c
  6781  001CCC  0E00               	movlw	0
  6782  001CCE  6E06               	movwf	(___flmul@a+1)^0,c
  6783  001CD0  0E00               	movlw	0
  6784  001CD2  6E07               	movwf	(___flmul@a+2)^0,c
  6785  001CD4  0E00               	movlw	0
  6786  001CD6  6E08               	movwf	(___flmul@a+3)^0,c
  6787  001CD8                     l3670:
  6788  001CD8  8E07               	bsf	(___flmul@a+2)^0,7,c
  6789  001CDA  EF77  F00E         	goto	l1035
  6790  001CDE                     l3672:
  6791  001CDE  0E00               	movlw	0
  6792  001CE0  6E05               	movwf	___flmul@a^0,c
  6793  001CE2  0E00               	movlw	0
  6794  001CE4  6E06               	movwf	(___flmul@a+1)^0,c
  6795  001CE6  0E00               	movlw	0
  6796  001CE8  6E07               	movwf	(___flmul@a+2)^0,c
  6797  001CEA  0E00               	movlw	0
  6798  001CEC  6E08               	movwf	(___flmul@a+3)^0,c
  6799  001CEE                     l1035:
  6800  001CEE  5012               	movf	___flmul@aexp^0,w,c
  6801  001CF0  B4D8               	btfsc	status,2,c
  6802  001CF2  EF7D  F00E         	goto	u3571
  6803  001CF6  EF7F  F00E         	goto	u3570
  6804  001CFA                     u3571:
  6805  001CFA  EF87  F00E         	goto	l3676
  6806  001CFE                     u3570:
  6807  001CFE  5013               	movf	___flmul@bexp^0,w,c
  6808  001D00  A4D8               	btfss	status,2,c
  6809  001D02  EF85  F00E         	goto	u3581
  6810  001D06  EF87  F00E         	goto	u3580
  6811  001D0A                     u3581:
  6812  001D0A  EF91  F00E         	goto	l3680
  6813  001D0E                     u3580:
  6814  001D0E                     l3676:
  6815  001D0E  0E00               	movlw	0
  6816  001D10  6E01               	movwf	?___flmul^0,c
  6817  001D12  0E00               	movlw	0
  6818  001D14  6E02               	movwf	(?___flmul+1)^0,c
  6819  001D16  0E00               	movlw	0
  6820  001D18  6E03               	movwf	(?___flmul+2)^0,c
  6821  001D1A  0E00               	movlw	0
  6822  001D1C  6E04               	movwf	(?___flmul+3)^0,c
  6823  001D1E  EF29  F010         	goto	l1039
  6824  001D22                     l3680:
  6825  001D22  5007               	movf	(___flmul@a+2)^0,w,c
  6826  001D24  0201               	mulwf	___flmul@b^0,c
  6827  001D26  CFF3 F018          	movff	prodl,___flmul@temp
  6828  001D2A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6829  001D2E  5018               	movf	___flmul@temp^0,w,c
  6830  001D30  6E0E               	movwf	___flmul@grs^0,c
  6831  001D32  6A0F               	clrf	(___flmul@grs+1)^0,c
  6832  001D34  6A10               	clrf	(___flmul@grs+2)^0,c
  6833  001D36  6A11               	clrf	(___flmul@grs+3)^0,c
  6834  001D38  5019               	movf	(___flmul@temp+1)^0,w,c
  6835  001D3A  6E14               	movwf	___flmul@prod^0,c
  6836  001D3C  6A15               	clrf	(___flmul@prod+1)^0,c
  6837  001D3E  6A16               	clrf	(___flmul@prod+2)^0,c
  6838  001D40  6A17               	clrf	(___flmul@prod+3)^0,c
  6839  001D42  5006               	movf	(___flmul@a+1)^0,w,c
  6840  001D44  0202               	mulwf	(___flmul@b+1)^0,c
  6841  001D46  CFF3 F018          	movff	prodl,___flmul@temp
  6842  001D4A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6843  001D4E  5018               	movf	___flmul@temp^0,w,c
  6844  001D50  260E               	addwf	___flmul@grs^0,f,c
  6845  001D52  0E00               	movlw	0
  6846  001D54  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6847  001D56  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6848  001D58  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6849  001D5A  5019               	movf	(___flmul@temp+1)^0,w,c
  6850  001D5C  2614               	addwf	___flmul@prod^0,f,c
  6851  001D5E  0E00               	movlw	0
  6852  001D60  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6853  001D62  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6854  001D64  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6855  001D66  5005               	movf	___flmul@a^0,w,c
  6856  001D68  0203               	mulwf	(___flmul@b+2)^0,c
  6857  001D6A  CFF3 F018          	movff	prodl,___flmul@temp
  6858  001D6E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6859  001D72  5018               	movf	___flmul@temp^0,w,c
  6860  001D74  260E               	addwf	___flmul@grs^0,f,c
  6861  001D76  0E00               	movlw	0
  6862  001D78  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6863  001D7A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6864  001D7C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6865  001D7E  5019               	movf	(___flmul@temp+1)^0,w,c
  6866  001D80  2614               	addwf	___flmul@prod^0,f,c
  6867  001D82  0E00               	movlw	0
  6868  001D84  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6869  001D86  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6870  001D88  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6871  001D8A  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6872  001D8E  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6873  001D92  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6874  001D96  6A0E               	clrf	___flmul@grs^0,c
  6875  001D98  5005               	movf	___flmul@a^0,w,c
  6876  001D9A  0202               	mulwf	(___flmul@b+1)^0,c
  6877  001D9C  CFF3 F018          	movff	prodl,___flmul@temp
  6878  001DA0  CFF4 F019          	movff	prodh,___flmul@temp+1
  6879  001DA4  5018               	movf	___flmul@temp^0,w,c
  6880  001DA6  260E               	addwf	___flmul@grs^0,f,c
  6881  001DA8  5019               	movf	(___flmul@temp+1)^0,w,c
  6882  001DAA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6883  001DAC  0E00               	movlw	0
  6884  001DAE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6885  001DB0  0E00               	movlw	0
  6886  001DB2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6887  001DB4  5006               	movf	(___flmul@a+1)^0,w,c
  6888  001DB6  0201               	mulwf	___flmul@b^0,c
  6889  001DB8  CFF3 F018          	movff	prodl,___flmul@temp
  6890  001DBC  CFF4 F019          	movff	prodh,___flmul@temp+1
  6891  001DC0  5018               	movf	___flmul@temp^0,w,c
  6892  001DC2  260E               	addwf	___flmul@grs^0,f,c
  6893  001DC4  5019               	movf	(___flmul@temp+1)^0,w,c
  6894  001DC6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6895  001DC8  0E00               	movlw	0
  6896  001DCA  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6897  001DCC  0E00               	movlw	0
  6898  001DCE  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6899  001DD0  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6900  001DD4  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6901  001DD8  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6902  001DDC  6A0E               	clrf	___flmul@grs^0,c
  6903  001DDE  5005               	movf	___flmul@a^0,w,c
  6904  001DE0  0201               	mulwf	___flmul@b^0,c
  6905  001DE2  CFF3 F018          	movff	prodl,___flmul@temp
  6906  001DE6  CFF4 F019          	movff	prodh,___flmul@temp+1
  6907  001DEA  5018               	movf	___flmul@temp^0,w,c
  6908  001DEC  260E               	addwf	___flmul@grs^0,f,c
  6909  001DEE  5019               	movf	(___flmul@temp+1)^0,w,c
  6910  001DF0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6911  001DF2  0E00               	movlw	0
  6912  001DF4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6913  001DF6  0E00               	movlw	0
  6914  001DF8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6915  001DFA  5007               	movf	(___flmul@a+2)^0,w,c
  6916  001DFC  0202               	mulwf	(___flmul@b+1)^0,c
  6917  001DFE  CFF3 F018          	movff	prodl,___flmul@temp
  6918  001E02  CFF4 F019          	movff	prodh,___flmul@temp+1
  6919  001E06  5018               	movf	___flmul@temp^0,w,c
  6920  001E08  2614               	addwf	___flmul@prod^0,f,c
  6921  001E0A  5019               	movf	(___flmul@temp+1)^0,w,c
  6922  001E0C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6923  001E0E  0E00               	movlw	0
  6924  001E10  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6925  001E12  0E00               	movlw	0
  6926  001E14  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6927  001E16  5006               	movf	(___flmul@a+1)^0,w,c
  6928  001E18  0203               	mulwf	(___flmul@b+2)^0,c
  6929  001E1A  CFF3 F018          	movff	prodl,___flmul@temp
  6930  001E1E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6931  001E22  5018               	movf	___flmul@temp^0,w,c
  6932  001E24  2614               	addwf	___flmul@prod^0,f,c
  6933  001E26  5019               	movf	(___flmul@temp+1)^0,w,c
  6934  001E28  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6935  001E2A  0E00               	movlw	0
  6936  001E2C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6937  001E2E  0E00               	movlw	0
  6938  001E30  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6939  001E32  5007               	movf	(___flmul@a+2)^0,w,c
  6940  001E34  0203               	mulwf	(___flmul@b+2)^0,c
  6941  001E36  CFF3 F018          	movff	prodl,___flmul@temp
  6942  001E3A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6943  001E3E  5018               	movf	___flmul@temp^0,w,c
  6944  001E40  6E09               	movwf	??___flmul^0,c
  6945  001E42  5019               	movf	(___flmul@temp+1)^0,w,c
  6946  001E44  6E0A               	movwf	(??___flmul+1)^0,c
  6947  001E46  6A0B               	clrf	(??___flmul+2)^0,c
  6948  001E48  6A0C               	clrf	(??___flmul+3)^0,c
  6949  001E4A  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6950  001E4E  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6951  001E52  C009  F00A         	movff	??___flmul,??___flmul+1
  6952  001E56  6A09               	clrf	??___flmul^0,c
  6953  001E58  5009               	movf	??___flmul^0,w,c
  6954  001E5A  2614               	addwf	___flmul@prod^0,f,c
  6955  001E5C  500A               	movf	(??___flmul+1)^0,w,c
  6956  001E5E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6957  001E60  500B               	movf	(??___flmul+2)^0,w,c
  6958  001E62  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6959  001E64  500C               	movf	(??___flmul+3)^0,w,c
  6960  001E66  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6961  001E68  C00E  F009         	movff	___flmul@grs,??___flmul
  6962  001E6C  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6963  001E70  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6964  001E74  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6965  001E78  0E19               	movlw	25
  6966  001E7A  EF44  F00F         	goto	u3590
  6967  001E7E                     u3595:
  6968  001E7E  90D8               	bcf	status,0,c
  6969  001E80  320C               	rrcf	(??___flmul+3)^0,f,c
  6970  001E82  320B               	rrcf	(??___flmul+2)^0,f,c
  6971  001E84  320A               	rrcf	(??___flmul+1)^0,f,c
  6972  001E86  3209               	rrcf	??___flmul^0,f,c
  6973  001E88                     u3590:
  6974  001E88  2EE8               	decfsz	wreg,f,c
  6975  001E8A  EF3F  F00F         	goto	u3595
  6976  001E8E  5009               	movf	??___flmul^0,w,c
  6977  001E90  2614               	addwf	___flmul@prod^0,f,c
  6978  001E92  500A               	movf	(??___flmul+1)^0,w,c
  6979  001E94  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6980  001E96  500B               	movf	(??___flmul+2)^0,w,c
  6981  001E98  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6982  001E9A  500C               	movf	(??___flmul+3)^0,w,c
  6983  001E9C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6984  001E9E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6985  001EA2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6986  001EA6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6987  001EAA  6A0E               	clrf	___flmul@grs^0,c
  6988  001EAC  5012               	movf	___flmul@aexp^0,w,c
  6989  001EAE  C013  F009         	movff	___flmul@bexp,??___flmul
  6990  001EB2  6A0A               	clrf	(??___flmul+1)^0,c
  6991  001EB4  2609               	addwf	??___flmul^0,f,c
  6992  001EB6  0E00               	movlw	0
  6993  001EB8  220A               	addwfc	(??___flmul+1)^0,f,c
  6994  001EBA  0E82               	movlw	130
  6995  001EBC  2409               	addwf	??___flmul^0,w,c
  6996  001EBE  6E18               	movwf	___flmul@temp^0,c
  6997  001EC0  0EFF               	movlw	255
  6998  001EC2  200A               	addwfc	(??___flmul+1)^0,w,c
  6999  001EC4  6E19               	movwf	(___flmul@temp+1)^0,c
  7000  001EC6  EF7A  F00F         	goto	l3728
  7001  001ECA                     l3722:
  7002  001ECA  90D8               	bcf	status,0,c
  7003  001ECC  3614               	rlcf	___flmul@prod^0,f,c
  7004  001ECE  3615               	rlcf	(___flmul@prod+1)^0,f,c
  7005  001ED0  3616               	rlcf	(___flmul@prod+2)^0,f,c
  7006  001ED2  3617               	rlcf	(___flmul@prod+3)^0,f,c
  7007  001ED4  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7008  001ED6  EF6F  F00F         	goto	u3601
  7009  001EDA  EF71  F00F         	goto	u3600
  7010  001EDE                     u3601:
  7011  001EDE  EF72  F00F         	goto	l1042
  7012  001EE2                     u3600:
  7013  001EE2  8014               	bsf	___flmul@prod^0,0,c
  7014  001EE4                     l1042:
  7015  001EE4  90D8               	bcf	status,0,c
  7016  001EE6  360E               	rlcf	___flmul@grs^0,f,c
  7017  001EE8  360F               	rlcf	(___flmul@grs+1)^0,f,c
  7018  001EEA  3610               	rlcf	(___flmul@grs+2)^0,f,c
  7019  001EEC  3611               	rlcf	(___flmul@grs+3)^0,f,c
  7020  001EEE  0618               	decf	___flmul@temp^0,f,c
  7021  001EF0  A0D8               	btfss	status,0,c
  7022  001EF2  0619               	decf	(___flmul@temp+1)^0,f,c
  7023  001EF4                     l3728:
  7024  001EF4  AE16               	btfss	(___flmul@prod+2)^0,7,c
  7025  001EF6  EF7F  F00F         	goto	u3611
  7026  001EFA  EF81  F00F         	goto	u3610
  7027  001EFE                     u3611:
  7028  001EFE  EF65  F00F         	goto	l3722
  7029  001F02                     u3610:
  7030  001F02  0E00               	movlw	0
  7031  001F04  6E12               	movwf	___flmul@aexp^0,c
  7032  001F06  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7033  001F08  EF88  F00F         	goto	u3621
  7034  001F0C  EF8A  F00F         	goto	u3620
  7035  001F10                     u3621:
  7036  001F10  EFAE  F00F         	goto	l1044
  7037  001F14                     u3620:
  7038  001F14  0EFF               	movlw	255
  7039  001F16  140E               	andwf	___flmul@grs^0,w,c
  7040  001F18  6E09               	movwf	??___flmul^0,c
  7041  001F1A  0EFF               	movlw	255
  7042  001F1C  140F               	andwf	(___flmul@grs+1)^0,w,c
  7043  001F1E  6E0A               	movwf	(??___flmul+1)^0,c
  7044  001F20  0EFF               	movlw	255
  7045  001F22  1410               	andwf	(___flmul@grs+2)^0,w,c
  7046  001F24  6E0B               	movwf	(??___flmul+2)^0,c
  7047  001F26  0E7F               	movlw	127
  7048  001F28  1411               	andwf	(___flmul@grs+3)^0,w,c
  7049  001F2A  6E0C               	movwf	(??___flmul+3)^0,c
  7050  001F2C  5009               	movf	??___flmul^0,w,c
  7051  001F2E  100A               	iorwf	(??___flmul+1)^0,w,c
  7052  001F30  100B               	iorwf	(??___flmul+2)^0,w,c
  7053  001F32  100C               	iorwf	(??___flmul+3)^0,w,c
  7054  001F34  B4D8               	btfsc	status,2,c
  7055  001F36  EF9F  F00F         	goto	u3631
  7056  001F3A  EFA1  F00F         	goto	u3630
  7057  001F3E                     u3631:
  7058  001F3E  EFA5  F00F         	goto	l1045
  7059  001F42                     u3630:
  7060  001F42                     l3736:
  7061  001F42  0E01               	movlw	1
  7062  001F44  6E12               	movwf	___flmul@aexp^0,c
  7063  001F46  EFAE  F00F         	goto	l1044
  7064  001F4A                     l1045:
  7065  001F4A  A014               	btfss	___flmul@prod^0,0,c
  7066  001F4C  EFAA  F00F         	goto	u3641
  7067  001F50  EFAC  F00F         	goto	u3640
  7068  001F54                     u3641:
  7069  001F54  EFAE  F00F         	goto	l1044
  7070  001F58                     u3640:
  7071  001F58  EFA1  F00F         	goto	l3736
  7072  001F5C                     l1044:
  7073  001F5C  5012               	movf	___flmul@aexp^0,w,c
  7074  001F5E  B4D8               	btfsc	status,2,c
  7075  001F60  EFB4  F00F         	goto	u3651
  7076  001F64  EFB6  F00F         	goto	u3650
  7077  001F68                     u3651:
  7078  001F68  EFDA  F00F         	goto	l3748
  7079  001F6C                     u3650:
  7080  001F6C  0E01               	movlw	1
  7081  001F6E  2614               	addwf	___flmul@prod^0,f,c
  7082  001F70  0E00               	movlw	0
  7083  001F72  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7084  001F74  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7085  001F76  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7086  001F78  A017               	btfss	(___flmul@prod+3)^0,0,c
  7087  001F7A  EFC1  F00F         	goto	u3661
  7088  001F7E  EFC3  F00F         	goto	u3660
  7089  001F82                     u3661:
  7090  001F82  EFDA  F00F         	goto	l3748
  7091  001F86                     u3660:
  7092  001F86  C014  F009         	movff	___flmul@prod,??___flmul
  7093  001F8A  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  7094  001F8E  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  7095  001F92  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  7096  001F96  340C               	rlcf	(??___flmul+3)^0,w,c
  7097  001F98  320C               	rrcf	(??___flmul+3)^0,f,c
  7098  001F9A  320B               	rrcf	(??___flmul+2)^0,f,c
  7099  001F9C  320A               	rrcf	(??___flmul+1)^0,f,c
  7100  001F9E  3209               	rrcf	??___flmul^0,f,c
  7101  001FA0  C009  F014         	movff	??___flmul,___flmul@prod
  7102  001FA4  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  7103  001FA8  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  7104  001FAC  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  7105  001FB0  4A18               	infsnz	___flmul@temp^0,f,c
  7106  001FB2  2A19               	incf	(___flmul@temp+1)^0,f,c
  7107  001FB4                     l3748:
  7108  001FB4  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7109  001FB6  EFE5  F00F         	goto	u3671
  7110  001FBA  5019               	movf	(___flmul@temp+1)^0,w,c
  7111  001FBC  E108               	bnz	u3670
  7112  001FBE  2818               	incf	___flmul@temp^0,w,c
  7113  001FC0  A0D8               	btfss	status,0,c
  7114  001FC2  EFE5  F00F         	goto	u3671
  7115  001FC6  EFE7  F00F         	goto	u3670
  7116  001FCA                     u3671:
  7117  001FCA  EFF1  F00F         	goto	l3752
  7118  001FCE                     u3670:
  7119  001FCE  0E00               	movlw	0
  7120  001FD0  6E14               	movwf	___flmul@prod^0,c
  7121  001FD2  0E00               	movlw	0
  7122  001FD4  6E15               	movwf	(___flmul@prod+1)^0,c
  7123  001FD6  0E80               	movlw	128
  7124  001FD8  6E16               	movwf	(___flmul@prod+2)^0,c
  7125  001FDA  0E7F               	movlw	127
  7126  001FDC  6E17               	movwf	(___flmul@prod+3)^0,c
  7127  001FDE  EF1F  F010         	goto	l3764
  7128  001FE2                     l3752:
  7129  001FE2  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7130  001FE4  EFFE  F00F         	goto	u3680
  7131  001FE8  5019               	movf	(___flmul@temp+1)^0,w,c
  7132  001FEA  E106               	bnz	u3681
  7133  001FEC  0418               	decf	___flmul@temp^0,w,c
  7134  001FEE  B0D8               	btfsc	status,0,c
  7135  001FF0  EFFC  F00F         	goto	u3681
  7136  001FF4  EFFE  F00F         	goto	u3680
  7137  001FF8                     u3681:
  7138  001FF8  EF0A  F010         	goto	l1052
  7139  001FFC                     u3680:
  7140  001FFC  0E00               	movlw	0
  7141  001FFE  6E14               	movwf	___flmul@prod^0,c
  7142  002000  0E00               	movlw	0
  7143  002002  6E15               	movwf	(___flmul@prod+1)^0,c
  7144  002004  0E00               	movlw	0
  7145  002006  6E16               	movwf	(___flmul@prod+2)^0,c
  7146  002008  0E00               	movlw	0
  7147  00200A  6E17               	movwf	(___flmul@prod+3)^0,c
  7148  00200C  0E00               	movlw	0
  7149  00200E  6E0D               	movwf	___flmul@sign^0,c
  7150  002010  EF1F  F010         	goto	l3764
  7151  002014                     l1052:
  7152  002014  C018  F013         	movff	___flmul@temp,___flmul@bexp
  7153  002018  0EFF               	movlw	255
  7154  00201A  1614               	andwf	___flmul@prod^0,f,c
  7155  00201C  0EFF               	movlw	255
  7156  00201E  1615               	andwf	(___flmul@prod+1)^0,f,c
  7157  002020  0E7F               	movlw	127
  7158  002022  1616               	andwf	(___flmul@prod+2)^0,f,c
  7159  002024  0E00               	movlw	0
  7160  002026  1617               	andwf	(___flmul@prod+3)^0,f,c
  7161  002028  A013               	btfss	___flmul@bexp^0,0,c
  7162  00202A  EF19  F010         	goto	u3691
  7163  00202E  EF1B  F010         	goto	u3690
  7164  002032                     u3691:
  7165  002032  EF1C  F010         	goto	l3762
  7166  002036                     u3690:
  7167  002036  8E16               	bsf	(___flmul@prod+2)^0,7,c
  7168  002038                     l3762:
  7169  002038  90D8               	bcf	status,0,c
  7170  00203A  3013               	rrcf	___flmul@bexp^0,w,c
  7171  00203C  6E17               	movwf	(___flmul@prod+3)^0,c
  7172  00203E                     l3764:
  7173  00203E  500D               	movf	___flmul@sign^0,w,c
  7174  002040  1217               	iorwf	(___flmul@prod+3)^0,f,c
  7175  002042  C014  F001         	movff	___flmul@prod,?___flmul
  7176  002046  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  7177  00204A  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  7178  00204E  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  7179  002052                     l1039:
  7180  002052  0012               	return		;funcret
  7181  002054                     __end_of___flmul:
  7182                           	callstack 0
  7183                           
  7184 ;; *************** function ___flge *****************
  7185 ;; Defined at:
  7186 ;;		line 4 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;  ff1             4   25[COMRAM] unsigned char 
  7189 ;;  ff2             4   29[COMRAM] unsigned char 
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;		None
  7192 ;; Return value:  Size  Location     Type
  7193 ;;		None               void
  7194 ;; Registers used:
  7195 ;;		wreg, status,2, status,0
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7201 ;;      Params:         8       0       0       0       0       0       0
  7202 ;;      Locals:         0       0       0       0       0       0       0
  7203 ;;      Temps:          4       0       0       0       0       0       0
  7204 ;;      Totals:        12       0       0       0       0       0       0
  7205 ;;Total ram usage:       12 bytes
  7206 ;; Hardware stack levels used: 1
  7207 ;; This function calls:
  7208 ;;		Nothing
  7209 ;; This function is called by:
  7210 ;;		_efgtoa
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           	psect	text28
  7215  002D6A                     __ptext28:
  7216                           	callstack 0
  7217  002D6A                     ___flge:
  7218                           	callstack 25
  7219  002D6A  0E00               	movlw	0
  7220  002D6C  141A               	andwf	___flge@ff1^0,w,c
  7221  002D6E  6E22               	movwf	??___flge^0,c
  7222  002D70  0E00               	movlw	0
  7223  002D72  141B               	andwf	(___flge@ff1+1)^0,w,c
  7224  002D74  6E23               	movwf	(??___flge+1)^0,c
  7225  002D76  0E80               	movlw	128
  7226  002D78  141C               	andwf	(___flge@ff1+2)^0,w,c
  7227  002D7A  6E24               	movwf	(??___flge+2)^0,c
  7228  002D7C  0E7F               	movlw	127
  7229  002D7E  141D               	andwf	(___flge@ff1+3)^0,w,c
  7230  002D80  6E25               	movwf	(??___flge+3)^0,c
  7231  002D82  5022               	movf	??___flge^0,w,c
  7232  002D84  1023               	iorwf	(??___flge+1)^0,w,c
  7233  002D86  1024               	iorwf	(??___flge+2)^0,w,c
  7234  002D88  1025               	iorwf	(??___flge+3)^0,w,c
  7235  002D8A  A4D8               	btfss	status,2,c
  7236  002D8C  EFCA  F016         	goto	u3851
  7237  002D90  EFCC  F016         	goto	u3850
  7238  002D94                     u3851:
  7239  002D94  EFD4  F016         	goto	l3876
  7240  002D98                     u3850:
  7241  002D98  0E00               	movlw	0
  7242  002D9A  6E1A               	movwf	___flge@ff1^0,c
  7243  002D9C  0E00               	movlw	0
  7244  002D9E  6E1B               	movwf	(___flge@ff1+1)^0,c
  7245  002DA0  0E00               	movlw	0
  7246  002DA2  6E1C               	movwf	(___flge@ff1+2)^0,c
  7247  002DA4  0E00               	movlw	0
  7248  002DA6  6E1D               	movwf	(___flge@ff1+3)^0,c
  7249  002DA8                     l3876:
  7250  002DA8  0E00               	movlw	0
  7251  002DAA  141E               	andwf	___flge@ff2^0,w,c
  7252  002DAC  6E22               	movwf	??___flge^0,c
  7253  002DAE  0E00               	movlw	0
  7254  002DB0  141F               	andwf	(___flge@ff2+1)^0,w,c
  7255  002DB2  6E23               	movwf	(??___flge+1)^0,c
  7256  002DB4  0E80               	movlw	128
  7257  002DB6  1420               	andwf	(___flge@ff2+2)^0,w,c
  7258  002DB8  6E24               	movwf	(??___flge+2)^0,c
  7259  002DBA  0E7F               	movlw	127
  7260  002DBC  1421               	andwf	(___flge@ff2+3)^0,w,c
  7261  002DBE  6E25               	movwf	(??___flge+3)^0,c
  7262  002DC0  5022               	movf	??___flge^0,w,c
  7263  002DC2  1023               	iorwf	(??___flge+1)^0,w,c
  7264  002DC4  1024               	iorwf	(??___flge+2)^0,w,c
  7265  002DC6  1025               	iorwf	(??___flge+3)^0,w,c
  7266  002DC8  A4D8               	btfss	status,2,c
  7267  002DCA  EFE9  F016         	goto	u3861
  7268  002DCE  EFEB  F016         	goto	u3860
  7269  002DD2                     u3861:
  7270  002DD2  EFF3  F016         	goto	l3880
  7271  002DD6                     u3860:
  7272  002DD6  0E00               	movlw	0
  7273  002DD8  6E1E               	movwf	___flge@ff2^0,c
  7274  002DDA  0E00               	movlw	0
  7275  002DDC  6E1F               	movwf	(___flge@ff2+1)^0,c
  7276  002DDE  0E00               	movlw	0
  7277  002DE0  6E20               	movwf	(___flge@ff2+2)^0,c
  7278  002DE2  0E00               	movlw	0
  7279  002DE4  6E21               	movwf	(___flge@ff2+3)^0,c
  7280  002DE6                     l3880:
  7281  002DE6  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  7282  002DE8  EFF8  F016         	goto	u3871
  7283  002DEC  EFFA  F016         	goto	u3870
  7284  002DF0                     u3871:
  7285  002DF0  EF03  F017         	goto	l3884
  7286  002DF4                     u3870:
  7287  002DF4  6C1A               	negf	___flge@ff1^0,c
  7288  002DF6  1E1B               	comf	(___flge@ff1+1)^0,f,c
  7289  002DF8  B0D8               	btfsc	status,0,c
  7290  002DFA  2A1B               	incf	(___flge@ff1+1)^0,f,c
  7291  002DFC  1E1C               	comf	(___flge@ff1+2)^0,f,c
  7292  002DFE  B0D8               	btfsc	status,0,c
  7293  002E00  2A1C               	incf	(___flge@ff1+2)^0,f,c
  7294  002E02  0E80               	movlw	128
  7295  002E04  561D               	subfwb	(___flge@ff1+3)^0,f,c
  7296  002E06                     l3884:
  7297  002E06  AE21               	btfss	(___flge@ff2+3)^0,7,c
  7298  002E08  EF08  F017         	goto	u3881
  7299  002E0C  EF0A  F017         	goto	u3880
  7300  002E10                     u3881:
  7301  002E10  EF13  F017         	goto	l686
  7302  002E14                     u3880:
  7303  002E14  6C1E               	negf	___flge@ff2^0,c
  7304  002E16  1E1F               	comf	(___flge@ff2+1)^0,f,c
  7305  002E18  B0D8               	btfsc	status,0,c
  7306  002E1A  2A1F               	incf	(___flge@ff2+1)^0,f,c
  7307  002E1C  1E20               	comf	(___flge@ff2+2)^0,f,c
  7308  002E1E  B0D8               	btfsc	status,0,c
  7309  002E20  2A20               	incf	(___flge@ff2+2)^0,f,c
  7310  002E22  0E80               	movlw	128
  7311  002E24  5621               	subfwb	(___flge@ff2+3)^0,f,c
  7312  002E26                     l686:
  7313  002E26  0E00               	movlw	0
  7314  002E28  1A1A               	xorwf	___flge@ff1^0,f,c
  7315  002E2A  0E00               	movlw	0
  7316  002E2C  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  7317  002E2E  0E00               	movlw	0
  7318  002E30  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  7319  002E32  0E80               	movlw	128
  7320  002E34  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  7321  002E36  0E00               	movlw	0
  7322  002E38  1A1E               	xorwf	___flge@ff2^0,f,c
  7323  002E3A  0E00               	movlw	0
  7324  002E3C  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  7325  002E3E  0E00               	movlw	0
  7326  002E40  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  7327  002E42  0E80               	movlw	128
  7328  002E44  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  7329  002E46  501E               	movf	___flge@ff2^0,w,c
  7330  002E48  5C1A               	subwf	___flge@ff1^0,w,c
  7331  002E4A  501F               	movf	(___flge@ff2+1)^0,w,c
  7332  002E4C  581B               	subwfb	(___flge@ff1+1)^0,w,c
  7333  002E4E  5020               	movf	(___flge@ff2+2)^0,w,c
  7334  002E50  581C               	subwfb	(___flge@ff1+2)^0,w,c
  7335  002E52  5021               	movf	(___flge@ff2+3)^0,w,c
  7336  002E54  581D               	subwfb	(___flge@ff1+3)^0,w,c
  7337  002E56  B0D8               	btfsc	status,0,c
  7338  002E58  EF30  F017         	goto	u3891
  7339  002E5C  EF32  F017         	goto	u3890
  7340  002E60                     u3891:
  7341  002E60  EF35  F017         	goto	l3890
  7342  002E64                     u3890:
  7343  002E64  90D8               	bcf	status,0,c
  7344  002E66  EF36  F017         	goto	l691
  7345  002E6A                     l3890:
  7346  002E6A  80D8               	bsf	status,0,c
  7347  002E6C                     l691:
  7348  002E6C  0012               	return		;funcret
  7349  002E6E                     __end_of___flge:
  7350                           	callstack 0
  7351                           
  7352 ;; *************** function ___fleq *****************
  7353 ;; Defined at:
  7354 ;;		line 4 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/fleq.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;  ff1             4    0[COMRAM] unsigned char 
  7357 ;;  ff2             4    4[COMRAM] unsigned char 
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;		None
  7360 ;; Return value:  Size  Location     Type
  7361 ;;		None               void
  7362 ;; Registers used:
  7363 ;;		wreg, status,2, status,0
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7369 ;;      Params:         8       0       0       0       0       0       0
  7370 ;;      Locals:         0       0       0       0       0       0       0
  7371 ;;      Temps:          4       0       0       0       0       0       0
  7372 ;;      Totals:        12       0       0       0       0       0       0
  7373 ;;Total ram usage:       12 bytes
  7374 ;; Hardware stack levels used: 1
  7375 ;; This function calls:
  7376 ;;		Nothing
  7377 ;; This function is called by:
  7378 ;;		_efgtoa
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           	psect	text29
  7383  003656                     __ptext29:
  7384                           	callstack 0
  7385  003656                     ___fleq:
  7386                           	callstack 25
  7387  003656  0E00               	movlw	0
  7388  003658  1401               	andwf	___fleq@ff1^0,w,c
  7389  00365A  6E09               	movwf	??___fleq^0,c
  7390  00365C  0E00               	movlw	0
  7391  00365E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7392  003660  6E0A               	movwf	(??___fleq+1)^0,c
  7393  003662  0E80               	movlw	128
  7394  003664  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7395  003666  6E0B               	movwf	(??___fleq+2)^0,c
  7396  003668  0E7F               	movlw	127
  7397  00366A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7398  00366C  6E0C               	movwf	(??___fleq+3)^0,c
  7399  00366E  5009               	movf	??___fleq^0,w,c
  7400  003670  100A               	iorwf	(??___fleq+1)^0,w,c
  7401  003672  100B               	iorwf	(??___fleq+2)^0,w,c
  7402  003674  100C               	iorwf	(??___fleq+3)^0,w,c
  7403  003676  A4D8               	btfss	status,2,c
  7404  003678  EF40  F01B         	goto	u3821
  7405  00367C  EF42  F01B         	goto	u3820
  7406  003680                     u3821:
  7407  003680  EF4A  F01B         	goto	l3860
  7408  003684                     u3820:
  7409  003684  0E00               	movlw	0
  7410  003686  6E01               	movwf	___fleq@ff1^0,c
  7411  003688  0E00               	movlw	0
  7412  00368A  6E02               	movwf	(___fleq@ff1+1)^0,c
  7413  00368C  0E00               	movlw	0
  7414  00368E  6E03               	movwf	(___fleq@ff1+2)^0,c
  7415  003690  0E00               	movlw	0
  7416  003692  6E04               	movwf	(___fleq@ff1+3)^0,c
  7417  003694                     l3860:
  7418  003694  0E00               	movlw	0
  7419  003696  1405               	andwf	___fleq@ff2^0,w,c
  7420  003698  6E09               	movwf	??___fleq^0,c
  7421  00369A  0E00               	movlw	0
  7422  00369C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7423  00369E  6E0A               	movwf	(??___fleq+1)^0,c
  7424  0036A0  0E80               	movlw	128
  7425  0036A2  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7426  0036A4  6E0B               	movwf	(??___fleq+2)^0,c
  7427  0036A6  0E7F               	movlw	127
  7428  0036A8  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7429  0036AA  6E0C               	movwf	(??___fleq+3)^0,c
  7430  0036AC  5009               	movf	??___fleq^0,w,c
  7431  0036AE  100A               	iorwf	(??___fleq+1)^0,w,c
  7432  0036B0  100B               	iorwf	(??___fleq+2)^0,w,c
  7433  0036B2  100C               	iorwf	(??___fleq+3)^0,w,c
  7434  0036B4  A4D8               	btfss	status,2,c
  7435  0036B6  EF5F  F01B         	goto	u3831
  7436  0036BA  EF61  F01B         	goto	u3830
  7437  0036BE                     u3831:
  7438  0036BE  EF69  F01B         	goto	l3864
  7439  0036C2                     u3830:
  7440  0036C2  0E00               	movlw	0
  7441  0036C4  6E05               	movwf	___fleq@ff2^0,c
  7442  0036C6  0E00               	movlw	0
  7443  0036C8  6E06               	movwf	(___fleq@ff2+1)^0,c
  7444  0036CA  0E00               	movlw	0
  7445  0036CC  6E07               	movwf	(___fleq@ff2+2)^0,c
  7446  0036CE  0E00               	movlw	0
  7447  0036D0  6E08               	movwf	(___fleq@ff2+3)^0,c
  7448  0036D2                     l3864:
  7449  0036D2  5005               	movf	___fleq@ff2^0,w,c
  7450  0036D4  1801               	xorwf	___fleq@ff1^0,w,c
  7451  0036D6  E10F               	bnz	u3840
  7452  0036D8  5006               	movf	(___fleq@ff2+1)^0,w,c
  7453  0036DA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7454  0036DC  E10C               	bnz	u3840
  7455  0036DE  5007               	movf	(___fleq@ff2+2)^0,w,c
  7456  0036E0  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7457  0036E2  E109               	bnz	u3840
  7458  0036E4  5008               	movf	(___fleq@ff2+3)^0,w,c
  7459  0036E6  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7460  0036E8  B4D8               	btfsc	status,2,c
  7461  0036EA  EF79  F01B         	goto	u3841
  7462  0036EE  EF7B  F01B         	goto	u3840
  7463  0036F2                     u3841:
  7464  0036F2  EF7E  F01B         	goto	l3868
  7465  0036F6                     u3840:
  7466  0036F6  90D8               	bcf	status,0,c
  7467  0036F8  EF7F  F01B         	goto	l680
  7468  0036FC                     l3868:
  7469  0036FC  80D8               	bsf	status,0,c
  7470  0036FE                     l680:
  7471  0036FE  0012               	return		;funcret
  7472  003700                     __end_of___fleq:
  7473                           	callstack 0
  7474                           
  7475 ;; *************** function ___awmod *****************
  7476 ;; Defined at:
  7477 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/awmod.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  dividend        2    0[COMRAM] int 
  7480 ;;  divisor         2    2[COMRAM] int 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;  sign            1    5[COMRAM] unsigned char 
  7483 ;;  counter         1    4[COMRAM] unsigned char 
  7484 ;; Return value:  Size  Location     Type
  7485 ;;                  2    0[COMRAM] int 
  7486 ;; Registers used:
  7487 ;;		wreg, status,2, status,0
  7488 ;; Tracked objects:
  7489 ;;		On entry : 0/0
  7490 ;;		On exit  : 0/0
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7493 ;;      Params:         4       0       0       0       0       0       0
  7494 ;;      Locals:         2       0       0       0       0       0       0
  7495 ;;      Temps:          0       0       0       0       0       0       0
  7496 ;;      Totals:         6       0       0       0       0       0       0
  7497 ;;Total ram usage:        6 bytes
  7498 ;; Hardware stack levels used: 1
  7499 ;; This function calls:
  7500 ;;		Nothing
  7501 ;; This function is called by:
  7502 ;;		_efgtoa
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           	psect	text30
  7507  0034FA                     __ptext30:
  7508                           	callstack 0
  7509  0034FA                     ___awmod:
  7510                           	callstack 25
  7511  0034FA  0E00               	movlw	0
  7512  0034FC  6E06               	movwf	___awmod@sign^0,c
  7513  0034FE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7514  003500  EF86  F01A         	goto	u3760
  7515  003504  EF84  F01A         	goto	u3761
  7516  003508                     u3761:
  7517  003508  EF8C  F01A         	goto	l3828
  7518  00350C                     u3760:
  7519  00350C  6C01               	negf	___awmod@dividend^0,c
  7520  00350E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7521  003510  B0D8               	btfsc	status,0,c
  7522  003512  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7523  003514  0E01               	movlw	1
  7524  003516  6E06               	movwf	___awmod@sign^0,c
  7525  003518                     l3828:
  7526  003518  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7527  00351A  EF93  F01A         	goto	u3770
  7528  00351E  EF91  F01A         	goto	u3771
  7529  003522                     u3771:
  7530  003522  EF97  F01A         	goto	l3832
  7531  003526                     u3770:
  7532  003526  6C03               	negf	___awmod@divisor^0,c
  7533  003528  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7534  00352A  B0D8               	btfsc	status,0,c
  7535  00352C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7536  00352E                     l3832:
  7537  00352E  5003               	movf	___awmod@divisor^0,w,c
  7538  003530  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7539  003532  B4D8               	btfsc	status,2,c
  7540  003534  EF9E  F01A         	goto	u3781
  7541  003538  EFA0  F01A         	goto	u3780
  7542  00353C                     u3781:
  7543  00353C  EFC4  F01A         	goto	l3848
  7544  003540                     u3780:
  7545  003540  0E01               	movlw	1
  7546  003542  6E05               	movwf	___awmod@counter^0,c
  7547  003544  EFA8  F01A         	goto	l3838
  7548  003548                     l3836:
  7549  003548  90D8               	bcf	status,0,c
  7550  00354A  3603               	rlcf	___awmod@divisor^0,f,c
  7551  00354C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7552  00354E  2A05               	incf	___awmod@counter^0,f,c
  7553  003550                     l3838:
  7554  003550  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7555  003552  EFAD  F01A         	goto	u3791
  7556  003556  EFAF  F01A         	goto	u3790
  7557  00355A                     u3791:
  7558  00355A  EFA4  F01A         	goto	l3836
  7559  00355E                     u3790:
  7560  00355E                     l3840:
  7561  00355E  5003               	movf	___awmod@divisor^0,w,c
  7562  003560  5C01               	subwf	___awmod@dividend^0,w,c
  7563  003562  5004               	movf	(___awmod@divisor+1)^0,w,c
  7564  003564  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7565  003566  A0D8               	btfss	status,0,c
  7566  003568  EFB8  F01A         	goto	u3801
  7567  00356C  EFBA  F01A         	goto	u3800
  7568  003570                     u3801:
  7569  003570  EFBE  F01A         	goto	l3844
  7570  003574                     u3800:
  7571  003574  5003               	movf	___awmod@divisor^0,w,c
  7572  003576  5E01               	subwf	___awmod@dividend^0,f,c
  7573  003578  5004               	movf	(___awmod@divisor+1)^0,w,c
  7574  00357A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7575  00357C                     l3844:
  7576  00357C  90D8               	bcf	status,0,c
  7577  00357E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7578  003580  3203               	rrcf	___awmod@divisor^0,f,c
  7579  003582  2E05               	decfsz	___awmod@counter^0,f,c
  7580  003584  EFAF  F01A         	goto	l3840
  7581  003588                     l3848:
  7582  003588  5006               	movf	___awmod@sign^0,w,c
  7583  00358A  B4D8               	btfsc	status,2,c
  7584  00358C  EFCA  F01A         	goto	u3811
  7585  003590  EFCC  F01A         	goto	u3810
  7586  003594                     u3811:
  7587  003594  EFD0  F01A         	goto	l3852
  7588  003598                     u3810:
  7589  003598  6C01               	negf	___awmod@dividend^0,c
  7590  00359A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7591  00359C  B0D8               	btfsc	status,0,c
  7592  00359E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7593  0035A0                     l3852:
  7594  0035A0  C001  F001         	movff	___awmod@dividend,?___awmod
  7595  0035A4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7596  0035A8  0012               	return		;funcret
  7597  0035AA                     __end_of___awmod:
  7598                           	callstack 0
  7599                           
  7600 ;; *************** function ___awdiv *****************
  7601 ;; Defined at:
  7602 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/awdiv.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;  dividend        2    0[COMRAM] int 
  7605 ;;  divisor         2    2[COMRAM] int 
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;  quotient        2    6[COMRAM] int 
  7608 ;;  sign            1    5[COMRAM] unsigned char 
  7609 ;;  counter         1    4[COMRAM] unsigned char 
  7610 ;; Return value:  Size  Location     Type
  7611 ;;                  2    0[COMRAM] int 
  7612 ;; Registers used:
  7613 ;;		wreg, status,2, status,0
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7619 ;;      Params:         4       0       0       0       0       0       0
  7620 ;;      Locals:         4       0       0       0       0       0       0
  7621 ;;      Temps:          0       0       0       0       0       0       0
  7622 ;;      Totals:         8       0       0       0       0       0       0
  7623 ;;Total ram usage:        8 bytes
  7624 ;; Hardware stack levels used: 1
  7625 ;; This function calls:
  7626 ;;		Nothing
  7627 ;; This function is called by:
  7628 ;;		_efgtoa
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text31
  7633  00337C                     __ptext31:
  7634                           	callstack 0
  7635  00337C                     ___awdiv:
  7636                           	callstack 25
  7637  00337C  0E00               	movlw	0
  7638  00337E  6E06               	movwf	___awdiv@sign^0,c
  7639  003380  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7640  003382  EFC7  F019         	goto	u3700
  7641  003386  EFC5  F019         	goto	u3701
  7642  00338A                     u3701:
  7643  00338A  EFCD  F019         	goto	l3784
  7644  00338E                     u3700:
  7645  00338E  6C03               	negf	___awdiv@divisor^0,c
  7646  003390  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7647  003392  B0D8               	btfsc	status,0,c
  7648  003394  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7649  003396  0E01               	movlw	1
  7650  003398  6E06               	movwf	___awdiv@sign^0,c
  7651  00339A                     l3784:
  7652  00339A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7653  00339C  EFD4  F019         	goto	u3710
  7654  0033A0  EFD2  F019         	goto	u3711
  7655  0033A4                     u3711:
  7656  0033A4  EFDA  F019         	goto	l3790
  7657  0033A8                     u3710:
  7658  0033A8  6C01               	negf	___awdiv@dividend^0,c
  7659  0033AA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7660  0033AC  B0D8               	btfsc	status,0,c
  7661  0033AE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7662  0033B0  0E01               	movlw	1
  7663  0033B2  1A06               	xorwf	___awdiv@sign^0,f,c
  7664  0033B4                     l3790:
  7665  0033B4  0E00               	movlw	0
  7666  0033B6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7667  0033B8  0E00               	movlw	0
  7668  0033BA  6E07               	movwf	___awdiv@quotient^0,c
  7669  0033BC  5003               	movf	___awdiv@divisor^0,w,c
  7670  0033BE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7671  0033C0  B4D8               	btfsc	status,2,c
  7672  0033C2  EFE5  F019         	goto	u3721
  7673  0033C6  EFE7  F019         	goto	u3720
  7674  0033CA                     u3721:
  7675  0033CA  EF0F  F01A         	goto	l3812
  7676  0033CE                     u3720:
  7677  0033CE  0E01               	movlw	1
  7678  0033D0  6E05               	movwf	___awdiv@counter^0,c
  7679  0033D2  EFEF  F019         	goto	l3798
  7680  0033D6                     l3796:
  7681  0033D6  90D8               	bcf	status,0,c
  7682  0033D8  3603               	rlcf	___awdiv@divisor^0,f,c
  7683  0033DA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7684  0033DC  2A05               	incf	___awdiv@counter^0,f,c
  7685  0033DE                     l3798:
  7686  0033DE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7687  0033E0  EFF4  F019         	goto	u3731
  7688  0033E4  EFF6  F019         	goto	u3730
  7689  0033E8                     u3731:
  7690  0033E8  EFEB  F019         	goto	l3796
  7691  0033EC                     u3730:
  7692  0033EC                     l3800:
  7693  0033EC  90D8               	bcf	status,0,c
  7694  0033EE  3607               	rlcf	___awdiv@quotient^0,f,c
  7695  0033F0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7696  0033F2  5003               	movf	___awdiv@divisor^0,w,c
  7697  0033F4  5C01               	subwf	___awdiv@dividend^0,w,c
  7698  0033F6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7699  0033F8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7700  0033FA  A0D8               	btfss	status,0,c
  7701  0033FC  EF02  F01A         	goto	u3741
  7702  003400  EF04  F01A         	goto	u3740
  7703  003404                     u3741:
  7704  003404  EF09  F01A         	goto	l3808
  7705  003408                     u3740:
  7706  003408  5003               	movf	___awdiv@divisor^0,w,c
  7707  00340A  5E01               	subwf	___awdiv@dividend^0,f,c
  7708  00340C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7709  00340E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7710  003410  8007               	bsf	___awdiv@quotient^0,0,c
  7711  003412                     l3808:
  7712  003412  90D8               	bcf	status,0,c
  7713  003414  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7714  003416  3203               	rrcf	___awdiv@divisor^0,f,c
  7715  003418  2E05               	decfsz	___awdiv@counter^0,f,c
  7716  00341A  EFF6  F019         	goto	l3800
  7717  00341E                     l3812:
  7718  00341E  5006               	movf	___awdiv@sign^0,w,c
  7719  003420  B4D8               	btfsc	status,2,c
  7720  003422  EF15  F01A         	goto	u3751
  7721  003426  EF17  F01A         	goto	u3750
  7722  00342A                     u3751:
  7723  00342A  EF1B  F01A         	goto	l3816
  7724  00342E                     u3750:
  7725  00342E  6C07               	negf	___awdiv@quotient^0,c
  7726  003430  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7727  003432  B0D8               	btfsc	status,0,c
  7728  003434  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7729  003436                     l3816:
  7730  003436  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7731  00343A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7732  00343E  0012               	return		;funcret
  7733  003440                     __end_of___awdiv:
  7734                           	callstack 0
  7735                           
  7736 ;; *************** function _ctoa *****************
  7737 ;; Defined at:
  7738 ;;		line 259 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7741 ;;		 -> sprintf@f(6), 
  7742 ;;  c               1   11[COMRAM] unsigned char 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;  w               2   15[COMRAM] int 
  7745 ;;  l               2   13[COMRAM] int 
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  2    9[COMRAM] int 
  7748 ;; Registers used:
  7749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7755 ;;      Params:         3       0       0       0       0       0       0
  7756 ;;      Locals:         4       0       0       0       0       0       0
  7757 ;;      Temps:          1       0       0       0       0       0       0
  7758 ;;      Totals:         8       0       0       0       0       0       0
  7759 ;;Total ram usage:        8 bytes
  7760 ;; Hardware stack levels used: 1
  7761 ;; Hardware stack levels required when called: 2
  7762 ;; This function calls:
  7763 ;;		_fputc
  7764 ;; This function is called by:
  7765 ;;		_vfpfcnvrt
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text32
  7770  002F6C                     __ptext32:
  7771                           	callstack 0
  7772  002F6C                     _ctoa:
  7773                           	callstack 24
  7774  002F6C                     
  7775                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
  7776  002F6C  0100               	movlb	0	; () banked
  7777  002F6E  51DB               	movf	_width& (0+255),w,b
  7778  002F70  11DC               	iorwf	(_width+1)& (0+255),w,b
  7779  002F72  A4D8               	btfss	status,2,c
  7780  002F74  EFBE  F017         	goto	u4281
  7781  002F78  EFC0  F017         	goto	u4280
  7782  002F7C                     u4281:
  7783  002F7C  EFC6  F017         	goto	l4058
  7784  002F80                     u4280:
  7785  002F80                     
  7786                           ; BSR set to: 0
  7787  002F80  C0DB  F010         	movff	_width,ctoa@w
  7788  002F84  C0DC  F011         	movff	_width+1,ctoa@w+1
  7789  002F88  EFCC  F017         	goto	l4060
  7790  002F8C                     l4058:
  7791                           
  7792                           ; BSR set to: 0
  7793  002F8C  0EFF               	movlw	255
  7794  002F8E  25DB               	addwf	_width& (0+255),w,b
  7795  002F90  6E10               	movwf	ctoa@w^0,c
  7796  002F92  0EFF               	movlw	255
  7797  002F94  21DC               	addwfc	(_width+1)& (0+255),w,b
  7798  002F96  6E11               	movwf	(ctoa@w+1)^0,c
  7799  002F98                     l4060:
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 267:     if (flags &
      +                           (1 << 0)) {
  7803  002F98  A1DF               	btfss	_flags& (0+255),0,b
  7804  002F9A  EFD1  F017         	goto	u4291
  7805  002F9E  EFD3  F017         	goto	u4290
  7806  002FA2                     u4291:
  7807  002FA2  EFDC  F017         	goto	l4064
  7808  002FA6                     u4290:
  7809  002FA6                     
  7810                           ; BSR set to: 0
  7811                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 268:         fputc(c
      +                          , fp);
  7812  002FA6  C00C  F001         	movff	ctoa@c,fputc@c
  7813  002FAA  6A02               	clrf	(fputc@c+1)^0,c
  7814  002FAC  C00A  F003         	movff	ctoa@fp,fputc@fp
  7815  002FB0  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  7816  002FB4  ECF6  F018         	call	_fputc	;wreg free
  7817  002FB8                     l4064:
  7818                           
  7819                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 271:     w = (w < 0)
      +                           ? 0 : w;
  7820  002FB8  BE11               	btfsc	(ctoa@w+1)^0,7,c
  7821  002FBA  EFE1  F017         	goto	u4301
  7822  002FBE  EFE3  F017         	goto	u4300
  7823  002FC2                     u4301:
  7824  002FC2  EFE5  F017         	goto	l4068
  7825  002FC6                     u4300:
  7826  002FC6  EFE9  F017         	goto	l1156
  7827  002FCA                     l4068:
  7828  002FCA  0E00               	movlw	0
  7829  002FCC  6E11               	movwf	(ctoa@w+1)^0,c
  7830  002FCE  0E00               	movlw	0
  7831  002FD0  6E10               	movwf	ctoa@w^0,c
  7832  002FD2                     l1156:
  7833                           
  7834                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 272:     l = 0;
  7835  002FD2  0E00               	movlw	0
  7836  002FD4  6E0F               	movwf	(ctoa@l+1)^0,c
  7837  002FD6  0E00               	movlw	0
  7838  002FD8  6E0E               	movwf	ctoa@l^0,c
  7839                           
  7840                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
  7841  002FDA  EFFB  F017         	goto	l4074
  7842  002FDE                     l4070:
  7843                           
  7844                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 274:         fputc('
      +                           ', fp);
  7845  002FDE  0E00               	movlw	0
  7846  002FE0  6E02               	movwf	(fputc@c+1)^0,c
  7847  002FE2  0E20               	movlw	32
  7848  002FE4  6E01               	movwf	fputc@c^0,c
  7849  002FE6  C00A  F003         	movff	ctoa@fp,fputc@fp
  7850  002FEA  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  7851  002FEE  ECF6  F018         	call	_fputc	;wreg free
  7852  002FF2                     
  7853                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 275:         ++l;
  7854  002FF2  4A0E               	infsnz	ctoa@l^0,f,c
  7855  002FF4  2A0F               	incf	(ctoa@l+1)^0,f,c
  7856  002FF6                     l4074:
  7857                           
  7858                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
  7859  002FF6  5010               	movf	ctoa@w^0,w,c
  7860  002FF8  5C0E               	subwf	ctoa@l^0,w,c
  7861  002FFA  500F               	movf	(ctoa@l+1)^0,w,c
  7862  002FFC  0A80               	xorlw	128
  7863  002FFE  6E0D               	movwf	??_ctoa^0,c
  7864  003000  5011               	movf	(ctoa@w+1)^0,w,c
  7865  003002  0A80               	xorlw	128
  7866  003004  580D               	subwfb	??_ctoa^0,w,c
  7867  003006  A0D8               	btfss	status,0,c
  7868  003008  EF08  F018         	goto	u4311
  7869  00300C  EF0A  F018         	goto	u4310
  7870  003010                     u4311:
  7871  003010  EFEF  F017         	goto	l4070
  7872  003014                     u4310:
  7873  003014                     
  7874                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 278:     if (!(flags
      +                           & (1 << 0))) {
  7875  003014  0100               	movlb	0	; () banked
  7876  003016  B1DF               	btfsc	_flags& (0+255),0,b
  7877  003018  EF10  F018         	goto	u4321
  7878  00301C  EF12  F018         	goto	u4320
  7879  003020                     u4321:
  7880  003020  EF1B  F018         	goto	l4078
  7881  003024                     u4320:
  7882  003024                     
  7883                           ; BSR set to: 0
  7884                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 279:         fputc(c
      +                          , fp);
  7885  003024  C00C  F001         	movff	ctoa@c,fputc@c
  7886  003028  6A02               	clrf	(fputc@c+1)^0,c
  7887  00302A  C00A  F003         	movff	ctoa@fp,fputc@fp
  7888  00302E  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  7889  003032  ECF6  F018         	call	_fputc	;wreg free
  7890  003036                     l4078:
  7891                           
  7892                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 282:     return l+1;
  7893  003036  0E01               	movlw	1
  7894  003038  240E               	addwf	ctoa@l^0,w,c
  7895  00303A  6E0A               	movwf	?_ctoa^0,c
  7896  00303C  0E00               	movlw	0
  7897  00303E  200F               	addwfc	(ctoa@l+1)^0,w,c
  7898  003040  6E0B               	movwf	(?_ctoa+1)^0,c
  7899  003042  0012               	return		;funcret
  7900  003044                     __end_of_ctoa:
  7901                           	callstack 0
  7902                           
  7903 ;; *************** function _fputc *****************
  7904 ;; Defined at:
  7905 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputc.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  c               2    0[COMRAM] int 
  7908 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7909 ;;		 -> sprintf@f(6), 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;		None
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  2    0[COMRAM] int 
  7914 ;; Registers used:
  7915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7921 ;;      Params:         4       0       0       0       0       0       0
  7922 ;;      Locals:         0       0       0       0       0       0       0
  7923 ;;      Temps:          5       0       0       0       0       0       0
  7924 ;;      Totals:         9       0       0       0       0       0       0
  7925 ;;Total ram usage:        9 bytes
  7926 ;; Hardware stack levels used: 1
  7927 ;; Hardware stack levels required when called: 1
  7928 ;; This function calls:
  7929 ;;		_putch
  7930 ;; This function is called by:
  7931 ;;		_pad
  7932 ;;		_ctoa
  7933 ;;		_vfpfcnvrt
  7934 ;;		_fputs
  7935 ;; This function uses a non-reentrant model
  7936 ;;
  7937                           
  7938                           	psect	text33
  7939  0031EC                     __ptext33:
  7940                           	callstack 0
  7941  0031EC                     _fputc:
  7942                           	callstack 25
  7943  0031EC  5003               	movf	fputc@fp^0,w,c
  7944  0031EE  1004               	iorwf	(fputc@fp+1)^0,w,c
  7945  0031F0  B4D8               	btfsc	status,2,c
  7946  0031F2  EFFD  F018         	goto	u2791
  7947  0031F6  EFFF  F018         	goto	u2790
  7948  0031FA                     u2791:
  7949  0031FA  EF08  F019         	goto	l3258
  7950  0031FE                     u2790:
  7951  0031FE  5003               	movf	fputc@fp^0,w,c
  7952  003200  1004               	iorwf	(fputc@fp+1)^0,w,c
  7953  003202  A4D8               	btfss	status,2,c
  7954  003204  EF06  F019         	goto	u2801
  7955  003208  EF08  F019         	goto	u2800
  7956  00320C                     u2801:
  7957  00320C  EF0D  F019         	goto	l3260
  7958  003210                     u2800:
  7959  003210                     l3258:
  7960  003210  5001               	movf	fputc@c^0,w,c
  7961  003212  ECE9  F01E         	call	_putch
  7962  003216  EF5A  F019         	goto	l1373
  7963  00321A                     l3260:
  7964  00321A  EE20 F004          	lfsr	2,4
  7965  00321E  5003               	movf	fputc@fp^0,w,c
  7966  003220  26D9               	addwf	fsr2l,f,c
  7967  003222  5004               	movf	(fputc@fp+1)^0,w,c
  7968  003224  22DA               	addwfc	fsr2h,f,c
  7969  003226  50DE               	movf	postinc2,w,c
  7970  003228  10DE               	iorwf	postinc2,w,c
  7971  00322A  B4D8               	btfsc	status,2,c
  7972  00322C  EF1A  F019         	goto	u2811
  7973  003230  EF1C  F019         	goto	u2810
  7974  003234                     u2811:
  7975  003234  EF37  F019         	goto	l3264
  7976  003238                     u2810:
  7977  003238  EE20 F004          	lfsr	2,4
  7978  00323C  5003               	movf	fputc@fp^0,w,c
  7979  00323E  26D9               	addwf	fsr2l,f,c
  7980  003240  5004               	movf	(fputc@fp+1)^0,w,c
  7981  003242  22DA               	addwfc	fsr2h,f,c
  7982  003244  EE10 F002          	lfsr	1,2
  7983  003248  5003               	movf	fputc@fp^0,w,c
  7984  00324A  26E1               	addwf	fsr1l,f,c
  7985  00324C  5004               	movf	(fputc@fp+1)^0,w,c
  7986  00324E  22E2               	addwfc	fsr1h,f,c
  7987  003250  50DE               	movf	postinc2,w,c
  7988  003252  5CE6               	subwf	postinc1,w,c
  7989  003254  50E6               	movf	postinc1,w,c
  7990  003256  0A80               	xorlw	128
  7991  003258  6E09               	movwf	(??_fputc+4)^0,c
  7992  00325A  50DE               	movf	postinc2,w,c
  7993  00325C  0A80               	xorlw	128
  7994  00325E  5809               	subwfb	(??_fputc+4)^0,w,c
  7995  003260  B0D8               	btfsc	status,0,c
  7996  003262  EF35  F019         	goto	u2821
  7997  003266  EF37  F019         	goto	u2820
  7998  00326A                     u2821:
  7999  00326A  EF5A  F019         	goto	l1373
  8000  00326E                     u2820:
  8001  00326E                     l3264:
  8002  00326E  EE20 F002          	lfsr	2,2
  8003  003272  5003               	movf	fputc@fp^0,w,c
  8004  003274  26D9               	addwf	fsr2l,f,c
  8005  003276  5004               	movf	(fputc@fp+1)^0,w,c
  8006  003278  22DA               	addwfc	fsr2h,f,c
  8007  00327A  CFDE F005          	movff	postinc2,??_fputc
  8008  00327E  CFDD F006          	movff	postdec2,??_fputc+1
  8009  003282  C003  FFD9         	movff	fputc@fp,fsr2l
  8010  003286  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8011  00328A  CFDE F007          	movff	postinc2,??_fputc+2
  8012  00328E  CFDD F008          	movff	postdec2,??_fputc+3
  8013  003292  5005               	movf	??_fputc^0,w,c
  8014  003294  2407               	addwf	(??_fputc+2)^0,w,c
  8015  003296  6ED9               	movwf	fsr2l,c
  8016  003298  5006               	movf	(??_fputc+1)^0,w,c
  8017  00329A  2008               	addwfc	(??_fputc+3)^0,w,c
  8018  00329C  6EDA               	movwf	fsr2h,c
  8019  00329E  C001  FFDF         	movff	fputc@c,indf2
  8020  0032A2  EE20 F002          	lfsr	2,2
  8021  0032A6  5003               	movf	fputc@fp^0,w,c
  8022  0032A8  26D9               	addwf	fsr2l,f,c
  8023  0032AA  5004               	movf	(fputc@fp+1)^0,w,c
  8024  0032AC  22DA               	addwfc	fsr2h,f,c
  8025  0032AE  2ADE               	incf	postinc2,f,c
  8026  0032B0  0E00               	movlw	0
  8027  0032B2  22DD               	addwfc	postdec2,f,c
  8028  0032B4                     l1373:
  8029  0032B4  0012               	return		;funcret
  8030  0032B6                     __end_of_fputc:
  8031                           	callstack 0
  8032                           
  8033 ;; *************** function _putch *****************
  8034 ;; Defined at:
  8035 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/putch.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  c               1    wreg     unsigned char 
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;  c               1    0[COMRAM] unsigned char 
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1    wreg      void 
  8042 ;; Registers used:
  8043 ;;		wreg
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8049 ;;      Params:         0       0       0       0       0       0       0
  8050 ;;      Locals:         0       0       0       0       0       0       0
  8051 ;;      Temps:          0       0       0       0       0       0       0
  8052 ;;      Totals:         0       0       0       0       0       0       0
  8053 ;;Total ram usage:        0 bytes
  8054 ;; Hardware stack levels used: 1
  8055 ;; This function calls:
  8056 ;;		Nothing
  8057 ;; This function is called by:
  8058 ;;		_fputc
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           	psect	text34
  8063  003DD2                     __ptext34:
  8064                           	callstack 0
  8065  003DD2                     _putch:
  8066                           	callstack 25
  8067  003DD2  0012               	return		;funcret
  8068  003DD4                     __end_of_putch:
  8069                           	callstack 0
  8070                           
  8071 ;; *************** function _atoi *****************
  8072 ;; Defined at:
  8073 ;;		line 4 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/atoi.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8076 ;;		 -> STR_3(12), STR_2(12), STR_1(12), 
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;  n               2   20[COMRAM] int 
  8079 ;;  neg             2   13[COMRAM] int 
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  2    7[COMRAM] int 
  8082 ;; Registers used:
  8083 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8089 ;;      Params:         2       0       0       0       0       0       0
  8090 ;;      Locals:         9       0       0       0       0       0       0
  8091 ;;      Temps:          4       0       0       0       0       0       0
  8092 ;;      Totals:        15       0       0       0       0       0       0
  8093 ;;Total ram usage:       15 bytes
  8094 ;; Hardware stack levels used: 1
  8095 ;; Hardware stack levels required when called: 1
  8096 ;; This function calls:
  8097 ;;		___wmul
  8098 ;;		_isdigit
  8099 ;;		_isspace
  8100 ;; This function is called by:
  8101 ;;		_vfpfcnvrt
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105                           	psect	text35
  8106  0027B4                     __ptext35:
  8107                           	callstack 0
  8108  0027B4                     _atoi:
  8109                           	callstack 25
  8110  0027B4  0E00               	movlw	0
  8111  0027B6  6E16               	movwf	(atoi@n+1)^0,c
  8112  0027B8  0E00               	movlw	0
  8113  0027BA  6E15               	movwf	atoi@n^0,c
  8114  0027BC  0E00               	movlw	0
  8115  0027BE  6E0F               	movwf	(atoi@neg+1)^0,c
  8116  0027C0  0E00               	movlw	0
  8117  0027C2  6E0E               	movwf	atoi@neg^0,c
  8118  0027C4  EFE6  F013         	goto	l4394
  8119  0027C8                     l4392:
  8120  0027C8  4A08               	infsnz	atoi@s^0,f,c
  8121  0027CA  2A09               	incf	(atoi@s+1)^0,f,c
  8122  0027CC                     l4394:
  8123  0027CC  0E01               	movlw	1
  8124  0027CE  6E14               	movwf	_atoi$1594^0,c
  8125  0027D0  C008  FFF6         	movff	atoi@s,tblptrl
  8126  0027D4  C009  FFF7         	movff	atoi@s+1,tblptrh
  8127  0027D8                     	if	0	;tblptru may be non-zero
  8128  0027D8                     	endif
  8129  0027D8                     	if	0	;tblptru may be non-zero
  8130  0027D8                     	endif
  8131  0027D8  0008               	tblrd		*
  8132  0027DA  50F5               	movf	tablat,w,c
  8133  0027DC  0A20               	xorlw	32
  8134  0027DE  B4D8               	btfsc	status,2,c
  8135  0027E0  EFF4  F013         	goto	u4871
  8136  0027E4  EFF6  F013         	goto	u4870
  8137  0027E8                     u4871:
  8138  0027E8  EF13  F014         	goto	l4402
  8139  0027EC                     u4870:
  8140  0027EC  0EF7               	movlw	247
  8141  0027EE  6E0A               	movwf	??_atoi^0,c
  8142  0027F0  0EFF               	movlw	255
  8143  0027F2  6E0B               	movwf	(??_atoi+1)^0,c
  8144  0027F4  C008  FFF6         	movff	atoi@s,tblptrl
  8145  0027F8  C009  FFF7         	movff	atoi@s+1,tblptrh
  8146  0027FC                     	if	0	;tblptru may be non-zero
  8147  0027FC                     	endif
  8148  0027FC                     	if	0	;tblptru may be non-zero
  8149  0027FC                     	endif
  8150  0027FC  0008               	tblrd		*
  8151  0027FE  50F5               	movf	tablat,w,c
  8152  002800  6E0C               	movwf	(??_atoi+2)^0,c
  8153  002802  6A0D               	clrf	(??_atoi+3)^0,c
  8154  002804  500A               	movf	??_atoi^0,w,c
  8155  002806  260C               	addwf	(??_atoi+2)^0,f,c
  8156  002808  500B               	movf	(??_atoi+1)^0,w,c
  8157  00280A  220D               	addwfc	(??_atoi+3)^0,f,c
  8158  00280C  500D               	movf	(??_atoi+3)^0,w,c
  8159  00280E  E109               	bnz	u4880
  8160  002810  0E05               	movlw	5
  8161  002812  5C0C               	subwf	(??_atoi+2)^0,w,c
  8162  002814  A0D8               	btfss	status,0,c
  8163  002816  EF0F  F014         	goto	u4881
  8164  00281A  EF11  F014         	goto	u4880
  8165  00281E                     u4881:
  8166  00281E  EF13  F014         	goto	l4402
  8167  002822                     u4880:
  8168  002822  0E00               	movlw	0
  8169  002824  6E14               	movwf	_atoi$1594^0,c
  8170  002826                     l4402:
  8171  002826  C014  F010         	movff	_atoi$1594,_atoi$1593
  8172  00282A  6A11               	clrf	(_atoi$1593+1)^0,c
  8173  00282C  5010               	movf	_atoi$1593^0,w,c
  8174  00282E  1011               	iorwf	(_atoi$1593+1)^0,w,c
  8175  002830  A4D8               	btfss	status,2,c
  8176  002832  EF1D  F014         	goto	u4891
  8177  002836  EF1F  F014         	goto	u4890
  8178  00283A                     u4891:
  8179  00283A  EFE4  F013         	goto	l4392
  8180  00283E                     u4890:
  8181  00283E  EF29  F014         	goto	l4412
  8182  002842                     l4408:
  8183  002842  0E00               	movlw	0
  8184  002844  6E0F               	movwf	(atoi@neg+1)^0,c
  8185  002846  0E01               	movlw	1
  8186  002848  6E0E               	movwf	atoi@neg^0,c
  8187  00284A                     l4410:
  8188  00284A  4A08               	infsnz	atoi@s^0,f,c
  8189  00284C  2A09               	incf	(atoi@s+1)^0,f,c
  8190  00284E  EF5E  F014         	goto	l4418
  8191  002852                     l4412:
  8192  002852  C008  FFF6         	movff	atoi@s,tblptrl
  8193  002856  C009  FFF7         	movff	atoi@s+1,tblptrh
  8194  00285A                     	if	0	;tblptru may be non-zero
  8195  00285A                     	endif
  8196  00285A                     	if	0	;tblptru may be non-zero
  8197  00285A                     	endif
  8198  00285A  0008               	tblrd		*
  8199  00285C  50F5               	movf	tablat,w,c
  8200  00285E  6E0A               	movwf	??_atoi^0,c
  8201  002860  6A0B               	clrf	(??_atoi+1)^0,c
  8202                           
  8203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8204                           ; Switch size 1, requested type "simple"
  8205                           ; Number of cases is 1, Range of values is 0 to 0
  8206                           ; switch strategies available:
  8207                           ; Name         Instructions Cycles
  8208                           ; simple_byte            4     3 (average)
  8209                           ;	Chosen strategy is simple_byte
  8210  002862  500B               	movf	(??_atoi+1)^0,w,c
  8211  002864  0A00               	xorlw	0	; case 0
  8212  002866  B4D8               	btfsc	status,2,c
  8213  002868  EF38  F014         	goto	l4988
  8214  00286C  EF5E  F014         	goto	l4418
  8215  002870                     l4988:
  8216                           
  8217                           ; Switch size 1, requested type "simple"
  8218                           ; Number of cases is 2, Range of values is 43 to 45
  8219                           ; switch strategies available:
  8220                           ; Name         Instructions Cycles
  8221                           ; simple_byte            7     4 (average)
  8222                           ;	Chosen strategy is simple_byte
  8223  002870  500A               	movf	??_atoi^0,w,c
  8224  002872  0A2B               	xorlw	43	; case 43
  8225  002874  B4D8               	btfsc	status,2,c
  8226  002876  EF25  F014         	goto	l4410
  8227  00287A  0A06               	xorlw	6	; case 45
  8228  00287C  B4D8               	btfsc	status,2,c
  8229  00287E  EF21  F014         	goto	l4408
  8230  002882  EF5E  F014         	goto	l4418
  8231  002886                     l4414:
  8232  002886  C015  F001         	movff	atoi@n,___wmul@multiplier
  8233  00288A  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8234  00288E  0E00               	movlw	0
  8235  002890  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8236  002892  0E0A               	movlw	10
  8237  002894  6E03               	movwf	___wmul@multiplicand^0,c
  8238  002896  EC5A  F01E         	call	___wmul	;wreg free
  8239  00289A  C008  FFF6         	movff	atoi@s,tblptrl
  8240  00289E  C009  FFF7         	movff	atoi@s+1,tblptrh
  8241  0028A2                     	if	0	;tblptru may be non-zero
  8242  0028A2                     	endif
  8243  0028A2                     	if	0	;tblptru may be non-zero
  8244  0028A2                     	endif
  8245  0028A2  0008               	tblrd		*
  8246  0028A4  50F5               	movf	tablat,w,c
  8247  0028A6  5E01               	subwf	?___wmul^0,f,c
  8248  0028A8  0E00               	movlw	0
  8249  0028AA  5A02               	subwfb	(?___wmul+1)^0,f,c
  8250  0028AC  0E30               	movlw	48
  8251  0028AE  2401               	addwf	?___wmul^0,w,c
  8252  0028B0  6E15               	movwf	atoi@n^0,c
  8253  0028B2  0E00               	movlw	0
  8254  0028B4  2002               	addwfc	(?___wmul+1)^0,w,c
  8255  0028B6  6E16               	movwf	(atoi@n+1)^0,c
  8256  0028B8  EF25  F014         	goto	l4410
  8257  0028BC                     l4418:
  8258  0028BC  0ED0               	movlw	208
  8259  0028BE  6E0A               	movwf	??_atoi^0,c
  8260  0028C0  0EFF               	movlw	255
  8261  0028C2  6E0B               	movwf	(??_atoi+1)^0,c
  8262  0028C4  C008  FFF6         	movff	atoi@s,tblptrl
  8263  0028C8  C009  FFF7         	movff	atoi@s+1,tblptrh
  8264  0028CC                     	if	0	;tblptru may be non-zero
  8265  0028CC                     	endif
  8266  0028CC                     	if	0	;tblptru may be non-zero
  8267  0028CC                     	endif
  8268  0028CC  0008               	tblrd		*
  8269  0028CE  50F5               	movf	tablat,w,c
  8270  0028D0  6E0C               	movwf	(??_atoi+2)^0,c
  8271  0028D2  6A0D               	clrf	(??_atoi+3)^0,c
  8272  0028D4  500A               	movf	??_atoi^0,w,c
  8273  0028D6  260C               	addwf	(??_atoi+2)^0,f,c
  8274  0028D8  500B               	movf	(??_atoi+1)^0,w,c
  8275  0028DA  220D               	addwfc	(??_atoi+3)^0,f,c
  8276  0028DC  500D               	movf	(??_atoi+3)^0,w,c
  8277  0028DE  E10A               	bnz	u4900
  8278  0028E0  0E0A               	movlw	10
  8279  0028E2  5C0C               	subwf	(??_atoi+2)^0,w,c
  8280  0028E4  A0D8               	btfss	status,0,c
  8281  0028E6  EF77  F014         	goto	u4901
  8282  0028EA  EF7A  F014         	goto	u4900
  8283  0028EE                     u4901:
  8284  0028EE  0E01               	movlw	1
  8285  0028F0  EF7B  F014         	goto	u4910
  8286  0028F4                     u4900:
  8287  0028F4  0E00               	movlw	0
  8288  0028F6                     u4910:
  8289  0028F6  6E12               	movwf	_atoi$1595^0,c
  8290  0028F8  6A13               	clrf	(_atoi$1595+1)^0,c
  8291  0028FA  5012               	movf	_atoi$1595^0,w,c
  8292  0028FC  1013               	iorwf	(_atoi$1595+1)^0,w,c
  8293  0028FE  A4D8               	btfss	status,2,c
  8294  002900  EF84  F014         	goto	u4921
  8295  002904  EF86  F014         	goto	u4920
  8296  002908                     u4921:
  8297  002908  EF43  F014         	goto	l4414
  8298  00290C                     u4920:
  8299  00290C  500E               	movf	atoi@neg^0,w,c
  8300  00290E  100F               	iorwf	(atoi@neg+1)^0,w,c
  8301  002910  A4D8               	btfss	status,2,c
  8302  002912  EF8D  F014         	goto	u4931
  8303  002916  EF8F  F014         	goto	u4930
  8304  00291A                     u4931:
  8305  00291A  EF9D  F014         	goto	l1325
  8306  00291E                     u4930:
  8307  00291E  C015  F00A         	movff	atoi@n,??_atoi
  8308  002922  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8309  002926  1E0A               	comf	??_atoi^0,f,c
  8310  002928  1E0B               	comf	(??_atoi+1)^0,f,c
  8311  00292A  4A0A               	infsnz	??_atoi^0,f,c
  8312  00292C  2A0B               	incf	(??_atoi+1)^0,f,c
  8313  00292E  C00A  F008         	movff	??_atoi,?_atoi
  8314  002932  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8315  002936  EFA1  F014         	goto	l1328
  8316  00293A                     l1325:
  8317  00293A  C015  F008         	movff	atoi@n,?_atoi
  8318  00293E  C016  F009         	movff	atoi@n+1,?_atoi+1
  8319  002942                     l1328:
  8320  002942  0012               	return		;funcret
  8321  002944                     __end_of_atoi:
  8322                           	callstack 0
  8323                           
  8324 ;; *************** function _isspace *****************
  8325 ;; Defined at:
  8326 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/isspace.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  c               2    0[COMRAM] int 
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;		None
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  2    0[COMRAM] int 
  8333 ;; Registers used:
  8334 ;;		wreg, status,2, status,0
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8340 ;;      Params:         2       0       0       0       0       0       0
  8341 ;;      Locals:         1       0       0       0       0       0       0
  8342 ;;      Temps:          4       0       0       0       0       0       0
  8343 ;;      Totals:         7       0       0       0       0       0       0
  8344 ;;Total ram usage:        7 bytes
  8345 ;; Hardware stack levels used: 1
  8346 ;; This function calls:
  8347 ;;		Nothing
  8348 ;; This function is called by:
  8349 ;;		_atoi
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           	psect	text36
  8354  003A22                     __ptext36:
  8355                           	callstack 0
  8356  003A22                     _isspace:
  8357                           	callstack 25
  8358  003A22  0E01               	movlw	1
  8359  003A24  6E07               	movwf	_isspace$1624^0,c
  8360  003A26  0E20               	movlw	32
  8361  003A28  1801               	xorwf	isspace@c^0,w,c
  8362  003A2A  1002               	iorwf	(isspace@c+1)^0,w,c
  8363  003A2C  B4D8               	btfsc	status,2,c
  8364  003A2E  EF1B  F01D         	goto	u4261
  8365  003A32  EF1D  F01D         	goto	u4260
  8366  003A36                     u4261:
  8367  003A36  EF36  F01D         	goto	l4044
  8368  003A3A                     u4260:
  8369  003A3A  0EF7               	movlw	247
  8370  003A3C  6E03               	movwf	??_isspace^0,c
  8371  003A3E  0EFF               	movlw	255
  8372  003A40  6E04               	movwf	(??_isspace+1)^0,c
  8373  003A42  C001  F005         	movff	isspace@c,??_isspace+2
  8374  003A46  C002  F006         	movff	isspace@c+1,??_isspace+3
  8375  003A4A  5003               	movf	??_isspace^0,w,c
  8376  003A4C  2605               	addwf	(??_isspace+2)^0,f,c
  8377  003A4E  5004               	movf	(??_isspace+1)^0,w,c
  8378  003A50  2206               	addwfc	(??_isspace+3)^0,f,c
  8379  003A52  5006               	movf	(??_isspace+3)^0,w,c
  8380  003A54  E109               	bnz	u4270
  8381  003A56  0E05               	movlw	5
  8382  003A58  5C05               	subwf	(??_isspace+2)^0,w,c
  8383  003A5A  A0D8               	btfss	status,0,c
  8384  003A5C  EF32  F01D         	goto	u4271
  8385  003A60  EF34  F01D         	goto	u4270
  8386  003A64                     u4271:
  8387  003A64  EF36  F01D         	goto	l4044
  8388  003A68                     u4270:
  8389  003A68  0E00               	movlw	0
  8390  003A6A  6E07               	movwf	_isspace$1624^0,c
  8391  003A6C                     l4044:
  8392  003A6C  C007  F001         	movff	_isspace$1624,?_isspace
  8393  003A70  6A02               	clrf	(?_isspace+1)^0,c
  8394  003A72  0012               	return		;funcret
  8395  003A74                     __end_of_isspace:
  8396                           	callstack 0
  8397                           
  8398 ;; *************** function _isdigit *****************
  8399 ;; Defined at:
  8400 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/isdigit.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;  c               2    0[COMRAM] int 
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;		None
  8405 ;; Return value:  Size  Location     Type
  8406 ;;                  2    0[COMRAM] int 
  8407 ;; Registers used:
  8408 ;;		wreg, status,2, status,0
  8409 ;; Tracked objects:
  8410 ;;		On entry : 0/0
  8411 ;;		On exit  : 0/0
  8412 ;;		Unchanged: 0/0
  8413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8414 ;;      Params:         2       0       0       0       0       0       0
  8415 ;;      Locals:         0       0       0       0       0       0       0
  8416 ;;      Temps:          4       0       0       0       0       0       0
  8417 ;;      Totals:         6       0       0       0       0       0       0
  8418 ;;Total ram usage:        6 bytes
  8419 ;; Hardware stack levels used: 1
  8420 ;; This function calls:
  8421 ;;		Nothing
  8422 ;; This function is called by:
  8423 ;;		_vfpfcnvrt
  8424 ;;		_atoi
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           	psect	text37
  8429  003BF0                     __ptext37:
  8430                           	callstack 0
  8431  003BF0                     _isdigit:
  8432                           	callstack 26
  8433  003BF0  0ED0               	movlw	208
  8434  003BF2  6E03               	movwf	??_isdigit^0,c
  8435  003BF4  0EFF               	movlw	255
  8436  003BF6  6E04               	movwf	(??_isdigit+1)^0,c
  8437  003BF8  C001  F005         	movff	isdigit@c,??_isdigit+2
  8438  003BFC  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8439  003C00  5003               	movf	??_isdigit^0,w,c
  8440  003C02  2605               	addwf	(??_isdigit+2)^0,f,c
  8441  003C04  5004               	movf	(??_isdigit+1)^0,w,c
  8442  003C06  2206               	addwfc	(??_isdigit+3)^0,f,c
  8443  003C08  5006               	movf	(??_isdigit+3)^0,w,c
  8444  003C0A  E10A               	bnz	u4240
  8445  003C0C  0E0A               	movlw	10
  8446  003C0E  5C05               	subwf	(??_isdigit+2)^0,w,c
  8447  003C10  A0D8               	btfss	status,0,c
  8448  003C12  EF0D  F01E         	goto	u4241
  8449  003C16  EF10  F01E         	goto	u4240
  8450  003C1A                     u4241:
  8451  003C1A  0E01               	movlw	1
  8452  003C1C  EF11  F01E         	goto	u4250
  8453  003C20                     u4240:
  8454  003C20  0E00               	movlw	0
  8455  003C22                     u4250:
  8456  003C22  6E01               	movwf	?_isdigit^0,c
  8457  003C24  6A02               	clrf	(?_isdigit+1)^0,c
  8458  003C26  0012               	return		;funcret
  8459  003C28                     __end_of_isdigit:
  8460                           	callstack 0
  8461                           
  8462 ;; *************** function ___wmul *****************
  8463 ;; Defined at:
  8464 ;;		line 15 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  8465 ;; Parameters:    Size  Location     Type
  8466 ;;  multiplier      2    0[COMRAM] unsigned int 
  8467 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8468 ;; Auto vars:     Size  Location     Type
  8469 ;;  product         2    4[COMRAM] unsigned int 
  8470 ;; Return value:  Size  Location     Type
  8471 ;;                  2    0[COMRAM] unsigned int 
  8472 ;; Registers used:
  8473 ;;		wreg, status,2, status,0, prodl, prodh
  8474 ;; Tracked objects:
  8475 ;;		On entry : 0/0
  8476 ;;		On exit  : 0/0
  8477 ;;		Unchanged: 0/0
  8478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8479 ;;      Params:         4       0       0       0       0       0       0
  8480 ;;      Locals:         2       0       0       0       0       0       0
  8481 ;;      Temps:          0       0       0       0       0       0       0
  8482 ;;      Totals:         6       0       0       0       0       0       0
  8483 ;;Total ram usage:        6 bytes
  8484 ;; Hardware stack levels used: 1
  8485 ;; This function calls:
  8486 ;;		Nothing
  8487 ;; This function is called by:
  8488 ;;		_atoi
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           
  8492                           	psect	text38
  8493  003CB4                     __ptext38:
  8494                           	callstack 0
  8495  003CB4                     ___wmul:
  8496                           	callstack 25
  8497  003CB4  5001               	movf	___wmul@multiplier^0,w,c
  8498  003CB6  0203               	mulwf	___wmul@multiplicand^0,c
  8499  003CB8  CFF3 F005          	movff	prodl,___wmul@product
  8500  003CBC  CFF4 F006          	movff	prodh,___wmul@product+1
  8501  003CC0  5001               	movf	___wmul@multiplier^0,w,c
  8502  003CC2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8503  003CC4  50F3               	movf	243,w,c
  8504  003CC6  2606               	addwf	(___wmul@product+1)^0,f,c
  8505  003CC8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8506  003CCA  0203               	mulwf	___wmul@multiplicand^0,c
  8507  003CCC  50F3               	movf	243,w,c
  8508  003CCE  2606               	addwf	(___wmul@product+1)^0,f,c
  8509  003CD0  C005  F001         	movff	___wmul@product,?___wmul
  8510  003CD4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8511  003CD8  0012               	return		;funcret
  8512  003CDA                     __end_of___wmul:
  8513                           	callstack 0
  8514                           
  8515 ;; *************** function _read_ACCEL *****************
  8516 ;; Defined at:
  8517 ;;		line 415 in file "./MPU6050.h"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;  axis            1    wreg     unsigned char 
  8520 ;; Auto vars:     Size  Location     Type
  8521 ;;  axis            1   47[COMRAM] unsigned char 
  8522 ;;  output          2   45[COMRAM] int 
  8523 ;;  output_L        1   49[COMRAM] unsigned char 
  8524 ;;  output_H        1   48[COMRAM] unsigned char 
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  4   39[COMRAM] float 
  8527 ;; Registers used:
  8528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8534 ;;      Params:         4       0       0       0       0       0       0
  8535 ;;      Locals:         5       0       0       0       0       0       0
  8536 ;;      Temps:          2       0       0       0       0       0       0
  8537 ;;      Totals:        11       0       0       0       0       0       0
  8538 ;;Total ram usage:       11 bytes
  8539 ;; Hardware stack levels used: 1
  8540 ;; Hardware stack levels required when called: 4
  8541 ;; This function calls:
  8542 ;;		___fldiv
  8543 ;;		___xxtofl
  8544 ;;		_readI2C1
  8545 ;; This function is called by:
  8546 ;;		_send_ACCEL
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text39
  8551  002B5A                     __ptext39:
  8552                           	callstack 0
  8553  002B5A                     _read_ACCEL:
  8554                           	callstack 24
  8555                           
  8556                           ;incstack = 0
  8557                           ;read_ACCEL@axis stored from wreg
  8558  002B5A  6E30               	movwf	read_ACCEL@axis^0,c
  8559  002B5C                     
  8560                           ;./MPU6050.h: 417:     uint8_t output_L = 0;
  8561  002B5C  0E00               	movlw	0
  8562  002B5E  6E32               	movwf	read_ACCEL@output_L^0,c
  8563                           
  8564                           ;./MPU6050.h: 418:     int output = 0;
  8565  002B60  0E00               	movlw	0
  8566  002B62  6E2F               	movwf	(read_ACCEL@output+1)^0,c
  8567  002B64  0E00               	movlw	0
  8568  002B66  6E2E               	movwf	read_ACCEL@output^0,c
  8569  002B68                     
  8570                           ;./MPU6050.h: 420:     if(axis == 0) {
  8571  002B68  5030               	movf	read_ACCEL@axis^0,w,c
  8572  002B6A  A4D8               	btfss	status,2,c
  8573  002B6C  EFBA  F015         	goto	u5301
  8574  002B70  EFBC  F015         	goto	u5300
  8575  002B74                     u5301:
  8576  002B74  EFD5  F015         	goto	l4680
  8577  002B78                     u5300:
  8578  002B78                     
  8579                           ;./MPU6050.h: 421:         output_H = readI2C1(0b11010000, 0x3B);
  8580  002B78  0E3B               	movlw	59
  8581  002B7A  6E03               	movwf	readI2C1@address^0,c
  8582  002B7C  0ED0               	movlw	208
  8583  002B7E  EC45  F01E         	call	_readI2C1
  8584  002B82  6E31               	movwf	read_ACCEL@output_H^0,c
  8585                           
  8586                           ;./MPU6050.h: 422:         output_L = readI2C1(0b11010000, 0x3C);
  8587  002B84  0E3C               	movlw	60
  8588  002B86  6E03               	movwf	readI2C1@address^0,c
  8589  002B88  0ED0               	movlw	208
  8590  002B8A  EC45  F01E         	call	_readI2C1
  8591  002B8E  6E32               	movwf	read_ACCEL@output_L^0,c
  8592  002B90                     l4678:
  8593                           
  8594                           ;./MPU6050.h: 423:         output = ((int)output_H << 8) | (int)output_L;
  8595  002B90  5032               	movf	read_ACCEL@output_L^0,w,c
  8596  002B92  C031  F02C         	movff	read_ACCEL@output_H,??_read_ACCEL
  8597  002B96  6A2D               	clrf	(??_read_ACCEL+1)^0,c
  8598  002B98  C02C  F02D         	movff	??_read_ACCEL,??_read_ACCEL+1
  8599  002B9C  6A2C               	clrf	??_read_ACCEL^0,c
  8600  002B9E  102C               	iorwf	??_read_ACCEL^0,w,c
  8601  002BA0  6E2E               	movwf	read_ACCEL@output^0,c
  8602  002BA2  502D               	movf	(??_read_ACCEL+1)^0,w,c
  8603  002BA4  6E2F               	movwf	(read_ACCEL@output+1)^0,c
  8604                           
  8605                           ;./MPU6050.h: 425:     } else if(axis == 1) {
  8606  002BA6  EF02  F016         	goto	l4692
  8607  002BAA                     l4680:
  8608  002BAA  0430               	decf	read_ACCEL@axis^0,w,c
  8609  002BAC  A4D8               	btfss	status,2,c
  8610  002BAE  EFDB  F015         	goto	u5311
  8611  002BB2  EFDD  F015         	goto	u5310
  8612  002BB6                     u5311:
  8613  002BB6  EFEB  F015         	goto	l4686
  8614  002BBA                     u5310:
  8615  002BBA                     
  8616                           ;./MPU6050.h: 426:         output_H = readI2C1(0b11010000, 0x3D);
  8617  002BBA  0E3D               	movlw	61
  8618  002BBC  6E03               	movwf	readI2C1@address^0,c
  8619  002BBE  0ED0               	movlw	208
  8620  002BC0  EC45  F01E         	call	_readI2C1
  8621  002BC4  6E31               	movwf	read_ACCEL@output_H^0,c
  8622                           
  8623                           ;./MPU6050.h: 427:         output_L = readI2C1(0b11010000, 0x3E);
  8624  002BC6  0E3E               	movlw	62
  8625  002BC8  6E03               	movwf	readI2C1@address^0,c
  8626  002BCA  0ED0               	movlw	208
  8627  002BCC  EC45  F01E         	call	_readI2C1
  8628  002BD0  6E32               	movwf	read_ACCEL@output_L^0,c
  8629  002BD2  EFC8  F015         	goto	l4678
  8630  002BD6                     l4686:
  8631  002BD6  0E02               	movlw	2
  8632  002BD8  1830               	xorwf	read_ACCEL@axis^0,w,c
  8633  002BDA  A4D8               	btfss	status,2,c
  8634  002BDC  EFF2  F015         	goto	u5321
  8635  002BE0  EFF4  F015         	goto	u5320
  8636  002BE4                     u5321:
  8637  002BE4  EF02  F016         	goto	l4692
  8638  002BE8                     u5320:
  8639  002BE8                     
  8640                           ;./MPU6050.h: 431:         output_H = readI2C1(0b11010000, 0x3F);
  8641  002BE8  0E3F               	movlw	63
  8642  002BEA  6E03               	movwf	readI2C1@address^0,c
  8643  002BEC  0ED0               	movlw	208
  8644  002BEE  EC45  F01E         	call	_readI2C1
  8645  002BF2  6E31               	movwf	read_ACCEL@output_H^0,c
  8646                           
  8647                           ;./MPU6050.h: 432:         output_L = readI2C1(0b11010000, 0x40);
  8648  002BF4  0E40               	movlw	64
  8649  002BF6  6E03               	movwf	readI2C1@address^0,c
  8650  002BF8  0ED0               	movlw	208
  8651  002BFA  EC45  F01E         	call	_readI2C1
  8652  002BFE  6E32               	movwf	read_ACCEL@output_L^0,c
  8653  002C00  EFC8  F015         	goto	l4678
  8654  002C04                     l4692:
  8655                           
  8656                           ;./MPU6050.h: 437:     return (float)output/accel_sensitivity[accel_range];
  8657  002C04  C02E  F001         	movff	read_ACCEL@output,___xxtofl@val
  8658  002C08  C02F  F002         	movff	read_ACCEL@output+1,___xxtofl@val+1
  8659  002C0C  0E00               	movlw	0
  8660  002C0E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8661  002C10  0EFF               	movlw	-1
  8662  002C12  6E03               	movwf	(___xxtofl@val+2)^0,c
  8663  002C14  6E04               	movwf	(___xxtofl@val+3)^0,c
  8664  002C16  0E01               	movlw	1
  8665  002C18  EC00  F013         	call	___xxtofl
  8666  002C1C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  8667  002C20  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  8668  002C24  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  8669  002C28  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  8670  002C2C  0100               	movlb	0	; () banked
  8671  002C2E  51F0               	movf	_accel_range& (0+255),w,b
  8672  002C30  0D04               	mullw	4
  8673  002C32  0E50               	movlw	low _accel_sensitivity
  8674  002C34  24F3               	addwf	243,w,c
  8675  002C36  6ED9               	movwf	fsr2l,c
  8676  002C38  0E01               	movlw	high _accel_sensitivity
  8677  002C3A  20F4               	addwfc	prodh,w,c
  8678  002C3C  6EDA               	movwf	fsr2h,c
  8679  002C3E  CFDE F013          	movff	postinc2,___fldiv@a
  8680  002C42  CFDE F014          	movff	postinc2,___fldiv@a+1
  8681  002C46  CFDE F015          	movff	postinc2,___fldiv@a+2
  8682  002C4A  CFDE F016          	movff	postinc2,___fldiv@a+3
  8683  002C4E  EC2A  F010         	call	___fldiv	;wreg free
  8684  002C52  C00F  F028         	movff	?___fldiv,?_read_ACCEL
  8685  002C56  C010  F029         	movff	?___fldiv+1,?_read_ACCEL+1
  8686  002C5A  C011  F02A         	movff	?___fldiv+2,?_read_ACCEL+2
  8687  002C5E  C012  F02B         	movff	?___fldiv+3,?_read_ACCEL+3
  8688  002C62  0012               	return		;funcret
  8689  002C64                     __end_of_read_ACCEL:
  8690                           	callstack 0
  8691                           
  8692 ;; *************** function _readI2C1 *****************
  8693 ;; Defined at:
  8694 ;;		line 118 in file "./I2C.h"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;  module_addre    1    wreg     unsigned char 
  8697 ;;  address         1    2[COMRAM] unsigned char 
  8698 ;; Auto vars:     Size  Location     Type
  8699 ;;  module_addre    1    4[COMRAM] unsigned char 
  8700 ;;  data            1    3[COMRAM] unsigned char 
  8701 ;; Return value:  Size  Location     Type
  8702 ;;                  1    wreg      unsigned char 
  8703 ;; Registers used:
  8704 ;;		wreg, status,2, status,0, cstack
  8705 ;; Tracked objects:
  8706 ;;		On entry : 0/0
  8707 ;;		On exit  : 0/0
  8708 ;;		Unchanged: 0/0
  8709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8710 ;;      Params:         1       0       0       0       0       0       0
  8711 ;;      Locals:         2       0       0       0       0       0       0
  8712 ;;      Temps:          0       0       0       0       0       0       0
  8713 ;;      Totals:         3       0       0       0       0       0       0
  8714 ;;Total ram usage:        3 bytes
  8715 ;; Hardware stack levels used: 1
  8716 ;; Hardware stack levels required when called: 3
  8717 ;; This function calls:
  8718 ;;		_rawReadI2C1
  8719 ;;		_rawSendI2C1
  8720 ;;		_restart_condition1
  8721 ;;		_start_condition1
  8722 ;;		_stop_condition1
  8723 ;; This function is called by:
  8724 ;;		_read_GYRO
  8725 ;;		_read_ACCEL
  8726 ;;		_read_TEMPERATURE
  8727 ;;		_raw_read_GYRO
  8728 ;;		_raw_read_ACCEL
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           	psect	text40
  8733  003C8A                     __ptext40:
  8734                           	callstack 0
  8735  003C8A                     _readI2C1:
  8736                           	callstack 25
  8737                           
  8738                           ;incstack = 0
  8739                           ;readI2C1@module_address stored from wreg
  8740  003C8A  6E05               	movwf	readI2C1@module_address^0,c
  8741  003C8C                     
  8742                           ;./I2C.h: 120:     uint8_t data;;./I2C.h: 123:     start_condition1();
  8743  003C8C  ECE2  F01E         	call	_start_condition1	;wreg free
  8744                           
  8745                           ;./I2C.h: 124:     rawSendI2C1(module_address);
  8746  003C90  5005               	movf	readI2C1@module_address^0,w,c
  8747  003C92  ECC7  F01E         	call	_rawSendI2C1
  8748                           
  8749                           ;./I2C.h: 125:     rawSendI2C1(address);
  8750  003C96  5003               	movf	readI2C1@address^0,w,c
  8751  003C98  ECC7  F01E         	call	_rawSendI2C1
  8752                           
  8753                           ;./I2C.h: 126:     restart_condition1();
  8754  003C9C  ECDA  F01E         	call	_restart_condition1	;wreg free
  8755                           
  8756                           ;./I2C.h: 127:     rawSendI2C1(module_address+1);
  8757  003CA0  2805               	incf	readI2C1@module_address^0,w,c
  8758  003CA2  ECC7  F01E         	call	_rawSendI2C1
  8759                           
  8760                           ;./I2C.h: 128:     data = rawReadI2C1();
  8761  003CA6  EC9F  F01E         	call	_rawReadI2C1	;wreg free
  8762  003CAA  6E04               	movwf	readI2C1@data^0,c
  8763                           
  8764                           ;./I2C.h: 129:     stop_condition1();
  8765  003CAC  ECDE  F01E         	call	_stop_condition1	;wreg free
  8766  003CB0                     
  8767                           ;./I2C.h: 131:     return data;
  8768  003CB0  5004               	movf	readI2C1@data^0,w,c
  8769  003CB2  0012               	return		;funcret
  8770  003CB4                     __end_of_readI2C1:
  8771                           	callstack 0
  8772                           
  8773 ;; *************** function _restart_condition1 *****************
  8774 ;; Defined at:
  8775 ;;		line 47 in file "./I2C.h"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;		None
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;		None
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      void 
  8782 ;; Registers used:
  8783 ;;		wreg, status,2, status,0, cstack
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8789 ;;      Params:         0       0       0       0       0       0       0
  8790 ;;      Locals:         0       0       0       0       0       0       0
  8791 ;;      Temps:          0       0       0       0       0       0       0
  8792 ;;      Totals:         0       0       0       0       0       0       0
  8793 ;;Total ram usage:        0 bytes
  8794 ;; Hardware stack levels used: 1
  8795 ;; Hardware stack levels required when called: 1
  8796 ;; This function calls:
  8797 ;;		_wait1
  8798 ;; This function is called by:
  8799 ;;		_readI2C1
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           	psect	text41
  8804  003DB4                     __ptext41:
  8805                           	callstack 0
  8806  003DB4                     _restart_condition1:
  8807                           	callstack 26
  8808  003DB4                     
  8809                           ;./I2C.h: 49:   wait1();
  8810  003DB4  EC6D  F01E         	call	_wait1	;wreg free
  8811  003DB8                     
  8812                           ;./I2C.h: 50:   RSEN1 = 1;
  8813  003DB8  82C5               	bsf	4037,1,c	;volatile
  8814  003DBA  0012               	return		;funcret
  8815  003DBC                     __end_of_restart_condition1:
  8816                           	callstack 0
  8817                           
  8818 ;; *************** function _rawReadI2C1 *****************
  8819 ;; Defined at:
  8820 ;;		line 100 in file "./I2C.h"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;		None
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;  Data            1    1[COMRAM] unsigned char 
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  1    wreg      unsigned char 
  8827 ;; Registers used:
  8828 ;;		wreg, status,2, status,0, cstack
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8834 ;;      Params:         0       0       0       0       0       0       0
  8835 ;;      Locals:         1       0       0       0       0       0       0
  8836 ;;      Temps:          0       0       0       0       0       0       0
  8837 ;;      Totals:         1       0       0       0       0       0       0
  8838 ;;Total ram usage:        1 bytes
  8839 ;; Hardware stack levels used: 1
  8840 ;; Hardware stack levels required when called: 2
  8841 ;; This function calls:
  8842 ;;		_sendNACK1
  8843 ;;		_wait1
  8844 ;; This function is called by:
  8845 ;;		_readI2C1
  8846 ;;		_basicReadI2C1
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           	psect	text42
  8851  003D3E                     __ptext42:
  8852                           	callstack 0
  8853  003D3E                     _rawReadI2C1:
  8854                           	callstack 25
  8855  003D3E                     
  8856                           ;./I2C.h: 101:     uint8_t Data;;./I2C.h: 102:     wait1();
  8857  003D3E  EC6D  F01E         	call	_wait1	;wreg free
  8858  003D42                     
  8859                           ;./I2C.h: 103:     RCEN1 = 1;
  8860  003D42  86C5               	bsf	4037,3,c	;volatile
  8861                           
  8862                           ;./I2C.h: 104:     wait1();
  8863  003D44  EC6D  F01E         	call	_wait1	;wreg free
  8864  003D48                     
  8865                           ;./I2C.h: 105:     Data = SSP1BUF;
  8866  003D48  CFC9 F002          	movff	4041,rawReadI2C1@Data	;volatile
  8867                           
  8868                           ;./I2C.h: 106:     sendNACK1();
  8869  003D4C  ECD5  F01E         	call	_sendNACK1	;wreg free
  8870  003D50                     
  8871                           ;./I2C.h: 107:     return Data;
  8872  003D50  5002               	movf	rawReadI2C1@Data^0,w,c
  8873  003D52  0012               	return		;funcret
  8874  003D54                     __end_of_rawReadI2C1:
  8875                           	callstack 0
  8876                           
  8877 ;; *************** function _sendNACK1 *****************
  8878 ;; Defined at:
  8879 ;;		line 60 in file "./I2C.h"
  8880 ;; Parameters:    Size  Location     Type
  8881 ;;		None
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;		None
  8884 ;; Return value:  Size  Location     Type
  8885 ;;                  1    wreg      void 
  8886 ;; Registers used:
  8887 ;;		wreg, status,2, status,0, cstack
  8888 ;; Tracked objects:
  8889 ;;		On entry : 0/0
  8890 ;;		On exit  : 0/0
  8891 ;;		Unchanged: 0/0
  8892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8893 ;;      Params:         0       0       0       0       0       0       0
  8894 ;;      Locals:         0       0       0       0       0       0       0
  8895 ;;      Temps:          0       0       0       0       0       0       0
  8896 ;;      Totals:         0       0       0       0       0       0       0
  8897 ;;Total ram usage:        0 bytes
  8898 ;; Hardware stack levels used: 1
  8899 ;; Hardware stack levels required when called: 1
  8900 ;; This function calls:
  8901 ;;		_wait1
  8902 ;; This function is called by:
  8903 ;;		_rawReadI2C1
  8904 ;; This function uses a non-reentrant model
  8905 ;;
  8906                           
  8907                           	psect	text43
  8908  003DAA                     __ptext43:
  8909                           	callstack 0
  8910  003DAA                     _sendNACK1:
  8911                           	callstack 25
  8912  003DAA                     
  8913                           ;./I2C.h: 62:   wait1();
  8914  003DAA  EC6D  F01E         	call	_wait1	;wreg free
  8915  003DAE                     
  8916                           ;./I2C.h: 63:   ACKDT1 = 1;
  8917  003DAE  8AC5               	bsf	4037,5,c	;volatile
  8918  003DB0                     
  8919                           ;./I2C.h: 64:   ACKEN1 = 1;
  8920  003DB0  88C5               	bsf	4037,4,c	;volatile
  8921  003DB2  0012               	return		;funcret
  8922  003DB4                     __end_of_sendNACK1:
  8923                           	callstack 0
  8924                           
  8925 ;; *************** function ___xxtofl *****************
  8926 ;; Defined at:
  8927 ;;		line 10 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;  sign            1    wreg     unsigned char 
  8930 ;;  val             4    0[COMRAM] long 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;  sign            1    8[COMRAM] unsigned char 
  8933 ;;  arg             4   10[COMRAM] unsigned long 
  8934 ;;  exp             1    9[COMRAM] unsigned char 
  8935 ;; Return value:  Size  Location     Type
  8936 ;;                  4    0[COMRAM] unsigned char 
  8937 ;; Registers used:
  8938 ;;		wreg, status,2, status,0
  8939 ;; Tracked objects:
  8940 ;;		On entry : 0/0
  8941 ;;		On exit  : 0/0
  8942 ;;		Unchanged: 0/0
  8943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8944 ;;      Params:         4       0       0       0       0       0       0
  8945 ;;      Locals:         6       0       0       0       0       0       0
  8946 ;;      Temps:          4       0       0       0       0       0       0
  8947 ;;      Totals:        14       0       0       0       0       0       0
  8948 ;;Total ram usage:       14 bytes
  8949 ;; Hardware stack levels used: 1
  8950 ;; This function calls:
  8951 ;;		Nothing
  8952 ;; This function is called by:
  8953 ;;		_read_GYRO
  8954 ;;		_read_ACCEL
  8955 ;;		_read_TEMPERATURE
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           	psect	text44
  8960  002600                     __ptext44:
  8961                           	callstack 0
  8962  002600                     ___xxtofl:
  8963                           	callstack 28
  8964                           
  8965                           ;incstack = 0
  8966                           ;___xxtofl@sign stored from wreg
  8967  002600  6E09               	movwf	___xxtofl@sign^0,c
  8968  002602  5009               	movf	___xxtofl@sign^0,w,c
  8969  002604  B4D8               	btfsc	status,2,c
  8970  002606  EF07  F013         	goto	u5141
  8971  00260A  EF09  F013         	goto	u5140
  8972  00260E                     u5141:
  8973  00260E  EF2B  F013         	goto	l1076
  8974  002612                     u5140:
  8975  002612  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8976  002614  EF10  F013         	goto	u5150
  8977  002618  EF0E  F013         	goto	u5151
  8978  00261C                     u5151:
  8979  00261C  EF2B  F013         	goto	l1076
  8980  002620                     u5150:
  8981  002620  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8982  002624  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8983  002628  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8984  00262C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8985  002630  1E05               	comf	??___xxtofl^0,f,c
  8986  002632  1E06               	comf	(??___xxtofl+1)^0,f,c
  8987  002634  1E07               	comf	(??___xxtofl+2)^0,f,c
  8988  002636  1E08               	comf	(??___xxtofl+3)^0,f,c
  8989  002638  2A05               	incf	??___xxtofl^0,f,c
  8990  00263A  0E00               	movlw	0
  8991  00263C  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8992  00263E  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8993  002640  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8994  002642  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8995  002646  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8996  00264A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8997  00264E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8998  002652  EF33  F013         	goto	l4592
  8999  002656                     l1076:
  9000  002656  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9001  00265A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9002  00265E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9003  002662  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9004  002666                     l4592:
  9005  002666  5001               	movf	___xxtofl@val^0,w,c
  9006  002668  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9007  00266A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9008  00266C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9009  00266E  A4D8               	btfss	status,2,c
  9010  002670  EF3C  F013         	goto	u5161
  9011  002674  EF3E  F013         	goto	u5160
  9012  002678                     u5161:
  9013  002678  EF48  F013         	goto	l4598
  9014  00267C                     u5160:
  9015  00267C  0E00               	movlw	0
  9016  00267E  6E01               	movwf	?___xxtofl^0,c
  9017  002680  0E00               	movlw	0
  9018  002682  6E02               	movwf	(?___xxtofl+1)^0,c
  9019  002684  0E00               	movlw	0
  9020  002686  6E03               	movwf	(?___xxtofl+2)^0,c
  9021  002688  0E00               	movlw	0
  9022  00268A  6E04               	movwf	(?___xxtofl+3)^0,c
  9023  00268C  EFD9  F013         	goto	l1079
  9024  002690                     l4598:
  9025  002690  0E96               	movlw	150
  9026  002692  6E0A               	movwf	___xxtofl@exp^0,c
  9027  002694  EF52  F013         	goto	l4602
  9028  002698                     l4600:
  9029  002698  2A0A               	incf	___xxtofl@exp^0,f,c
  9030  00269A  90D8               	bcf	status,0,c
  9031  00269C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9032  00269E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9033  0026A0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9034  0026A2  320B               	rrcf	___xxtofl@arg^0,f,c
  9035  0026A4                     l4602:
  9036  0026A4  0E00               	movlw	0
  9037  0026A6  140B               	andwf	___xxtofl@arg^0,w,c
  9038  0026A8  6E05               	movwf	??___xxtofl^0,c
  9039  0026AA  0E00               	movlw	0
  9040  0026AC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9041  0026AE  6E06               	movwf	(??___xxtofl+1)^0,c
  9042  0026B0  0E00               	movlw	0
  9043  0026B2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9044  0026B4  6E07               	movwf	(??___xxtofl+2)^0,c
  9045  0026B6  0EFE               	movlw	254
  9046  0026B8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9047  0026BA  6E08               	movwf	(??___xxtofl+3)^0,c
  9048  0026BC  5005               	movf	??___xxtofl^0,w,c
  9049  0026BE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9050  0026C0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9051  0026C2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9052  0026C4  A4D8               	btfss	status,2,c
  9053  0026C6  EF67  F013         	goto	u5171
  9054  0026CA  EF69  F013         	goto	u5170
  9055  0026CE                     u5171:
  9056  0026CE  EF4C  F013         	goto	l4600
  9057  0026D2                     u5170:
  9058  0026D2  EF77  F013         	goto	l1083
  9059  0026D6                     l4604:
  9060  0026D6  2A0A               	incf	___xxtofl@exp^0,f,c
  9061  0026D8  0E01               	movlw	1
  9062  0026DA  260B               	addwf	___xxtofl@arg^0,f,c
  9063  0026DC  0E00               	movlw	0
  9064  0026DE  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9065  0026E0  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9066  0026E2  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9067  0026E4  90D8               	bcf	status,0,c
  9068  0026E6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9069  0026E8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9070  0026EA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9071  0026EC  320B               	rrcf	___xxtofl@arg^0,f,c
  9072  0026EE                     l1083:
  9073  0026EE  0E00               	movlw	0
  9074  0026F0  140B               	andwf	___xxtofl@arg^0,w,c
  9075  0026F2  6E05               	movwf	??___xxtofl^0,c
  9076  0026F4  0E00               	movlw	0
  9077  0026F6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9078  0026F8  6E06               	movwf	(??___xxtofl+1)^0,c
  9079  0026FA  0E00               	movlw	0
  9080  0026FC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9081  0026FE  6E07               	movwf	(??___xxtofl+2)^0,c
  9082  002700  0EFF               	movlw	255
  9083  002702  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9084  002704  6E08               	movwf	(??___xxtofl+3)^0,c
  9085  002706  5005               	movf	??___xxtofl^0,w,c
  9086  002708  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9087  00270A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9088  00270C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9089  00270E  A4D8               	btfss	status,2,c
  9090  002710  EF8C  F013         	goto	u5181
  9091  002714  EF8E  F013         	goto	u5180
  9092  002718                     u5181:
  9093  002718  EF6B  F013         	goto	l4604
  9094  00271C                     u5180:
  9095  00271C  EF96  F013         	goto	l4612
  9096  002720                     l4610:
  9097  002720  060A               	decf	___xxtofl@exp^0,f,c
  9098  002722  90D8               	bcf	status,0,c
  9099  002724  360B               	rlcf	___xxtofl@arg^0,f,c
  9100  002726  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9101  002728  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9102  00272A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9103  00272C                     l4612:
  9104  00272C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9105  00272E  EF9B  F013         	goto	u5191
  9106  002732  EF9D  F013         	goto	u5190
  9107  002736                     u5191:
  9108  002736  EFA5  F013         	goto	l1090
  9109  00273A                     u5190:
  9110  00273A  0E02               	movlw	2
  9111  00273C  600A               	cpfslt	___xxtofl@exp^0,c
  9112  00273E  EFA3  F013         	goto	u5201
  9113  002742  EFA5  F013         	goto	u5200
  9114  002746                     u5201:
  9115  002746  EF90  F013         	goto	l4610
  9116  00274A                     u5200:
  9117  00274A                     l1090:
  9118  00274A  B00A               	btfsc	___xxtofl@exp^0,0,c
  9119  00274C  EFAA  F013         	goto	u5211
  9120  002750  EFAC  F013         	goto	u5210
  9121  002754                     u5211:
  9122  002754  EFAD  F013         	goto	l4618
  9123  002758                     u5210:
  9124  002758  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9125  00275A                     l4618:
  9126  00275A  90D8               	bcf	status,0,c
  9127  00275C  320A               	rrcf	___xxtofl@exp^0,f,c
  9128  00275E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9129  002762  6A06               	clrf	(??___xxtofl+1)^0,c
  9130  002764  6A07               	clrf	(??___xxtofl+2)^0,c
  9131  002766  6A08               	clrf	(??___xxtofl+3)^0,c
  9132  002768  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9133  00276C  6A07               	clrf	(??___xxtofl+2)^0,c
  9134  00276E  6A06               	clrf	(??___xxtofl+1)^0,c
  9135  002770  6A05               	clrf	??___xxtofl^0,c
  9136  002772  5005               	movf	??___xxtofl^0,w,c
  9137  002774  120B               	iorwf	___xxtofl@arg^0,f,c
  9138  002776  5006               	movf	(??___xxtofl+1)^0,w,c
  9139  002778  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9140  00277A  5007               	movf	(??___xxtofl+2)^0,w,c
  9141  00277C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9142  00277E  5008               	movf	(??___xxtofl+3)^0,w,c
  9143  002780  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9144  002782  5009               	movf	___xxtofl@sign^0,w,c
  9145  002784  B4D8               	btfsc	status,2,c
  9146  002786  EFC7  F013         	goto	u5221
  9147  00278A  EFC9  F013         	goto	u5220
  9148  00278E                     u5221:
  9149  00278E  EFD1  F013         	goto	l4628
  9150  002792                     u5220:
  9151  002792  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9152  002794  EFD0  F013         	goto	u5230
  9153  002798  EFCE  F013         	goto	u5231
  9154  00279C                     u5231:
  9155  00279C  EFD1  F013         	goto	l4628
  9156  0027A0                     u5230:
  9157  0027A0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9158  0027A2                     l4628:
  9159  0027A2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9160  0027A6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9161  0027AA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9162  0027AE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9163  0027B2                     l1079:
  9164  0027B2  0012               	return		;funcret
  9165  0027B4                     __end_of___xxtofl:
  9166                           	callstack 0
  9167                           
  9168 ;; *************** function ___fldiv *****************
  9169 ;; Defined at:
  9170 ;;		line 11 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/sprcdiv.c"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;  b               4   14[COMRAM] unsigned char 
  9173 ;;  a               4   18[COMRAM] unsigned char 
  9174 ;; Auto vars:     Size  Location     Type
  9175 ;;  grs             4   33[COMRAM] unsigned long 
  9176 ;;  rem             4   26[COMRAM] unsigned long 
  9177 ;;  new_exp         2   31[COMRAM] short 
  9178 ;;  aexp            1   38[COMRAM] unsigned char 
  9179 ;;  bexp            1   37[COMRAM] unsigned char 
  9180 ;;  sign            1   30[COMRAM] unsigned char 
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  4   14[COMRAM] unsigned char 
  9183 ;; Registers used:
  9184 ;;		wreg, status,2, status,0
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9190 ;;      Params:         8       0       0       0       0       0       0
  9191 ;;      Locals:        13       0       0       0       0       0       0
  9192 ;;      Temps:          4       0       0       0       0       0       0
  9193 ;;      Totals:        25       0       0       0       0       0       0
  9194 ;;Total ram usage:       25 bytes
  9195 ;; Hardware stack levels used: 1
  9196 ;; This function calls:
  9197 ;;		Nothing
  9198 ;; This function is called by:
  9199 ;;		_read_GYRO
  9200 ;;		_read_ACCEL
  9201 ;;		_read_TEMPERATURE
  9202 ;;		_efgtoa
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           	psect	text45
  9207  002054                     __ptext45:
  9208                           	callstack 0
  9209  002054                     ___fldiv:
  9210                           	callstack 25
  9211  002054  5012               	movf	(___fldiv@b+3)^0,w,c
  9212  002056  0B80               	andlw	128
  9213  002058  6E1F               	movwf	___fldiv@sign^0,c
  9214  00205A  5012               	movf	(___fldiv@b+3)^0,w,c
  9215  00205C  2412               	addwf	(___fldiv@b+3)^0,w,c
  9216  00205E  6E26               	movwf	___fldiv@bexp^0,c
  9217  002060  AE11               	btfss	(___fldiv@b+2)^0,7,c
  9218  002062  EF35  F010         	goto	u3281
  9219  002066  EF37  F010         	goto	u3280
  9220  00206A                     u3281:
  9221  00206A  EF38  F010         	goto	l3508
  9222  00206E                     u3280:
  9223  00206E  8026               	bsf	___fldiv@bexp^0,0,c
  9224  002070                     l3508:
  9225  002070  5026               	movf	___fldiv@bexp^0,w,c
  9226  002072  B4D8               	btfsc	status,2,c
  9227  002074  EF3E  F010         	goto	u3291
  9228  002078  EF40  F010         	goto	u3290
  9229  00207C                     u3291:
  9230  00207C  EF55  F010         	goto	l3518
  9231  002080                     u3290:
  9232  002080  2826               	incf	___fldiv@bexp^0,w,c
  9233  002082  A4D8               	btfss	status,2,c
  9234  002084  EF46  F010         	goto	u3301
  9235  002088  EF48  F010         	goto	u3300
  9236  00208C                     u3301:
  9237  00208C  EF50  F010         	goto	l3514
  9238  002090                     u3300:
  9239  002090  0E00               	movlw	0
  9240  002092  6E0F               	movwf	___fldiv@b^0,c
  9241  002094  0E00               	movlw	0
  9242  002096  6E10               	movwf	(___fldiv@b+1)^0,c
  9243  002098  0E00               	movlw	0
  9244  00209A  6E11               	movwf	(___fldiv@b+2)^0,c
  9245  00209C  0E00               	movlw	0
  9246  00209E  6E12               	movwf	(___fldiv@b+3)^0,c
  9247  0020A0                     l3514:
  9248  0020A0  8E11               	bsf	(___fldiv@b+2)^0,7,c
  9249  0020A2  0E00               	movlw	0
  9250  0020A4  6E12               	movwf	(___fldiv@b+3)^0,c
  9251  0020A6  EF5D  F010         	goto	l3520
  9252  0020AA                     l3518:
  9253  0020AA  0E00               	movlw	0
  9254  0020AC  6E0F               	movwf	___fldiv@b^0,c
  9255  0020AE  0E00               	movlw	0
  9256  0020B0  6E10               	movwf	(___fldiv@b+1)^0,c
  9257  0020B2  0E00               	movlw	0
  9258  0020B4  6E11               	movwf	(___fldiv@b+2)^0,c
  9259  0020B6  0E00               	movlw	0
  9260  0020B8  6E12               	movwf	(___fldiv@b+3)^0,c
  9261  0020BA                     l3520:
  9262  0020BA  5016               	movf	(___fldiv@a+3)^0,w,c
  9263  0020BC  0B80               	andlw	128
  9264  0020BE  1A1F               	xorwf	___fldiv@sign^0,f,c
  9265  0020C0  5016               	movf	(___fldiv@a+3)^0,w,c
  9266  0020C2  2416               	addwf	(___fldiv@a+3)^0,w,c
  9267  0020C4  6E27               	movwf	___fldiv@aexp^0,c
  9268  0020C6  AE15               	btfss	(___fldiv@a+2)^0,7,c
  9269  0020C8  EF68  F010         	goto	u3311
  9270  0020CC  EF6A  F010         	goto	u3310
  9271  0020D0                     u3311:
  9272  0020D0  EF6B  F010         	goto	l3528
  9273  0020D4                     u3310:
  9274  0020D4  8027               	bsf	___fldiv@aexp^0,0,c
  9275  0020D6                     l3528:
  9276  0020D6  5027               	movf	___fldiv@aexp^0,w,c
  9277  0020D8  B4D8               	btfsc	status,2,c
  9278  0020DA  EF71  F010         	goto	u3321
  9279  0020DE  EF73  F010         	goto	u3320
  9280  0020E2                     u3321:
  9281  0020E2  EF88  F010         	goto	l3538
  9282  0020E6                     u3320:
  9283  0020E6  2827               	incf	___fldiv@aexp^0,w,c
  9284  0020E8  A4D8               	btfss	status,2,c
  9285  0020EA  EF79  F010         	goto	u3331
  9286  0020EE  EF7B  F010         	goto	u3330
  9287  0020F2                     u3331:
  9288  0020F2  EF83  F010         	goto	l3534
  9289  0020F6                     u3330:
  9290  0020F6  0E00               	movlw	0
  9291  0020F8  6E13               	movwf	___fldiv@a^0,c
  9292  0020FA  0E00               	movlw	0
  9293  0020FC  6E14               	movwf	(___fldiv@a+1)^0,c
  9294  0020FE  0E00               	movlw	0
  9295  002100  6E15               	movwf	(___fldiv@a+2)^0,c
  9296  002102  0E00               	movlw	0
  9297  002104  6E16               	movwf	(___fldiv@a+3)^0,c
  9298  002106                     l3534:
  9299  002106  8E15               	bsf	(___fldiv@a+2)^0,7,c
  9300  002108  0E00               	movlw	0
  9301  00210A  6E16               	movwf	(___fldiv@a+3)^0,c
  9302  00210C  EF90  F010         	goto	l3540
  9303  002110                     l3538:
  9304  002110  0E00               	movlw	0
  9305  002112  6E13               	movwf	___fldiv@a^0,c
  9306  002114  0E00               	movlw	0
  9307  002116  6E14               	movwf	(___fldiv@a+1)^0,c
  9308  002118  0E00               	movlw	0
  9309  00211A  6E15               	movwf	(___fldiv@a+2)^0,c
  9310  00211C  0E00               	movlw	0
  9311  00211E  6E16               	movwf	(___fldiv@a+3)^0,c
  9312  002120                     l3540:
  9313  002120  5013               	movf	___fldiv@a^0,w,c
  9314  002122  1014               	iorwf	(___fldiv@a+1)^0,w,c
  9315  002124  1015               	iorwf	(___fldiv@a+2)^0,w,c
  9316  002126  1016               	iorwf	(___fldiv@a+3)^0,w,c
  9317  002128  A4D8               	btfss	status,2,c
  9318  00212A  EF99  F010         	goto	u3341
  9319  00212E  EF9B  F010         	goto	u3340
  9320  002132                     u3341:
  9321  002132  EFB3  F010         	goto	l3552
  9322  002136                     u3340:
  9323  002136  0E00               	movlw	0
  9324  002138  6E0F               	movwf	___fldiv@b^0,c
  9325  00213A  0E00               	movlw	0
  9326  00213C  6E10               	movwf	(___fldiv@b+1)^0,c
  9327  00213E  0E00               	movlw	0
  9328  002140  6E11               	movwf	(___fldiv@b+2)^0,c
  9329  002142  0E00               	movlw	0
  9330  002144  6E12               	movwf	(___fldiv@b+3)^0,c
  9331  002146  0E80               	movlw	128
  9332  002148  1211               	iorwf	(___fldiv@b+2)^0,f,c
  9333  00214A  0E7F               	movlw	127
  9334  00214C  1212               	iorwf	(___fldiv@b+3)^0,f,c
  9335  00214E                     l3546:
  9336  00214E  501F               	movf	___fldiv@sign^0,w,c
  9337  002150  1212               	iorwf	(___fldiv@b+3)^0,f,c
  9338  002152  C00F  F00F         	movff	___fldiv@b,?___fldiv
  9339  002156  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  9340  00215A  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  9341  00215E  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  9342  002162  EFF6  F011         	goto	l1003
  9343  002166                     l3552:
  9344  002166  5026               	movf	___fldiv@bexp^0,w,c
  9345  002168  A4D8               	btfss	status,2,c
  9346  00216A  EFB9  F010         	goto	u3351
  9347  00216E  EFBB  F010         	goto	u3350
  9348  002172                     u3351:
  9349  002172  EFC5  F010         	goto	l3560
  9350  002176                     u3350:
  9351  002176  0E00               	movlw	0
  9352  002178  6E0F               	movwf	?___fldiv^0,c
  9353  00217A  0E00               	movlw	0
  9354  00217C  6E10               	movwf	(?___fldiv+1)^0,c
  9355  00217E  0E00               	movlw	0
  9356  002180  6E11               	movwf	(?___fldiv+2)^0,c
  9357  002182  0E00               	movlw	0
  9358  002184  6E12               	movwf	(?___fldiv+3)^0,c
  9359  002186  EFF6  F011         	goto	l1003
  9360  00218A                     l3560:
  9361  00218A  5027               	movf	___fldiv@aexp^0,w,c
  9362  00218C  C026  F017         	movff	___fldiv@bexp,??___fldiv
  9363  002190  6A18               	clrf	(??___fldiv+1)^0,c
  9364  002192  5E17               	subwf	??___fldiv^0,f,c
  9365  002194  0E00               	movlw	0
  9366  002196  5A18               	subwfb	(??___fldiv+1)^0,f,c
  9367  002198  0E7F               	movlw	127
  9368  00219A  2417               	addwf	??___fldiv^0,w,c
  9369  00219C  6E20               	movwf	___fldiv@new_exp^0,c
  9370  00219E  0E00               	movlw	0
  9371  0021A0  2018               	addwfc	(??___fldiv+1)^0,w,c
  9372  0021A2  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  9373  0021A4  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  9374  0021A8  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  9375  0021AC  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  9376  0021B0  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  9377  0021B4  0E00               	movlw	0
  9378  0021B6  6E0F               	movwf	___fldiv@b^0,c
  9379  0021B8  0E00               	movlw	0
  9380  0021BA  6E10               	movwf	(___fldiv@b+1)^0,c
  9381  0021BC  0E00               	movlw	0
  9382  0021BE  6E11               	movwf	(___fldiv@b+2)^0,c
  9383  0021C0  0E00               	movlw	0
  9384  0021C2  6E12               	movwf	(___fldiv@b+3)^0,c
  9385  0021C4  0E00               	movlw	0
  9386  0021C6  6E22               	movwf	___fldiv@grs^0,c
  9387  0021C8  0E00               	movlw	0
  9388  0021CA  6E23               	movwf	(___fldiv@grs+1)^0,c
  9389  0021CC  0E00               	movlw	0
  9390  0021CE  6E24               	movwf	(___fldiv@grs+2)^0,c
  9391  0021D0  0E00               	movlw	0
  9392  0021D2  6E25               	movwf	(___fldiv@grs+3)^0,c
  9393  0021D4  0E00               	movlw	0
  9394  0021D6  6E27               	movwf	___fldiv@aexp^0,c
  9395  0021D8  EF26  F011         	goto	l1005
  9396  0021DC                     l3570:
  9397  0021DC  5027               	movf	___fldiv@aexp^0,w,c
  9398  0021DE  B4D8               	btfsc	status,2,c
  9399  0021E0  EFF4  F010         	goto	u3361
  9400  0021E4  EFF6  F010         	goto	u3360
  9401  0021E8                     u3361:
  9402  0021E8  EF0D  F011         	goto	l3578
  9403  0021EC                     u3360:
  9404  0021EC  90D8               	bcf	status,0,c
  9405  0021EE  361B               	rlcf	___fldiv@rem^0,f,c
  9406  0021F0  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  9407  0021F2  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  9408  0021F4  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  9409  0021F6  90D8               	bcf	status,0,c
  9410  0021F8  360F               	rlcf	___fldiv@b^0,f,c
  9411  0021FA  3610               	rlcf	(___fldiv@b+1)^0,f,c
  9412  0021FC  3611               	rlcf	(___fldiv@b+2)^0,f,c
  9413  0021FE  3612               	rlcf	(___fldiv@b+3)^0,f,c
  9414  002200  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9415  002202  EF05  F011         	goto	u3371
  9416  002206  EF07  F011         	goto	u3370
  9417  00220A                     u3371:
  9418  00220A  EF08  F011         	goto	l1008
  9419  00220E                     u3370:
  9420  00220E  800F               	bsf	___fldiv@b^0,0,c
  9421  002210                     l1008:
  9422  002210  90D8               	bcf	status,0,c
  9423  002212  3622               	rlcf	___fldiv@grs^0,f,c
  9424  002214  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  9425  002216  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  9426  002218  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  9427  00221A                     l3578:
  9428  00221A  5013               	movf	___fldiv@a^0,w,c
  9429  00221C  5C1B               	subwf	___fldiv@rem^0,w,c
  9430  00221E  5014               	movf	(___fldiv@a+1)^0,w,c
  9431  002220  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  9432  002222  5015               	movf	(___fldiv@a+2)^0,w,c
  9433  002224  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  9434  002226  5016               	movf	(___fldiv@a+3)^0,w,c
  9435  002228  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  9436  00222A  A0D8               	btfss	status,0,c
  9437  00222C  EF1A  F011         	goto	u3381
  9438  002230  EF1C  F011         	goto	u3380
  9439  002234                     u3381:
  9440  002234  EF25  F011         	goto	l3584
  9441  002238                     u3380:
  9442  002238  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  9443  00223A  5013               	movf	___fldiv@a^0,w,c
  9444  00223C  5E1B               	subwf	___fldiv@rem^0,f,c
  9445  00223E  5014               	movf	(___fldiv@a+1)^0,w,c
  9446  002240  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  9447  002242  5015               	movf	(___fldiv@a+2)^0,w,c
  9448  002244  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  9449  002246  5016               	movf	(___fldiv@a+3)^0,w,c
  9450  002248  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  9451  00224A                     l3584:
  9452  00224A  2A27               	incf	___fldiv@aexp^0,f,c
  9453  00224C                     l1005:
  9454  00224C  0E19               	movlw	25
  9455  00224E  6427               	cpfsgt	___fldiv@aexp^0,c
  9456  002250  EF2C  F011         	goto	u3391
  9457  002254  EF2E  F011         	goto	u3390
  9458  002258                     u3391:
  9459  002258  EFEE  F010         	goto	l3570
  9460  00225C                     u3390:
  9461  00225C  501B               	movf	___fldiv@rem^0,w,c
  9462  00225E  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  9463  002260  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  9464  002262  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  9465  002264  B4D8               	btfsc	status,2,c
  9466  002266  EF37  F011         	goto	u3401
  9467  00226A  EF39  F011         	goto	u3400
  9468  00226E                     u3401:
  9469  00226E  EF51  F011         	goto	l3596
  9470  002272                     u3400:
  9471  002272  8022               	bsf	___fldiv@grs^0,0,c
  9472  002274  EF51  F011         	goto	l3596
  9473  002278                     l3590:
  9474  002278  90D8               	bcf	status,0,c
  9475  00227A  360F               	rlcf	___fldiv@b^0,f,c
  9476  00227C  3610               	rlcf	(___fldiv@b+1)^0,f,c
  9477  00227E  3611               	rlcf	(___fldiv@b+2)^0,f,c
  9478  002280  3612               	rlcf	(___fldiv@b+3)^0,f,c
  9479  002282  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9480  002284  EF46  F011         	goto	u3411
  9481  002288  EF48  F011         	goto	u3410
  9482  00228C                     u3411:
  9483  00228C  EF49  F011         	goto	l1014
  9484  002290                     u3410:
  9485  002290  800F               	bsf	___fldiv@b^0,0,c
  9486  002292                     l1014:
  9487  002292  90D8               	bcf	status,0,c
  9488  002294  3622               	rlcf	___fldiv@grs^0,f,c
  9489  002296  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  9490  002298  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  9491  00229A  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  9492  00229C  0620               	decf	___fldiv@new_exp^0,f,c
  9493  00229E  A0D8               	btfss	status,0,c
  9494  0022A0  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  9495  0022A2                     l3596:
  9496  0022A2  AE11               	btfss	(___fldiv@b+2)^0,7,c
  9497  0022A4  EF56  F011         	goto	u3421
  9498  0022A8  EF58  F011         	goto	u3420
  9499  0022AC                     u3421:
  9500  0022AC  EF3C  F011         	goto	l3590
  9501  0022B0                     u3420:
  9502  0022B0  0E00               	movlw	0
  9503  0022B2  6E27               	movwf	___fldiv@aexp^0,c
  9504  0022B4  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9505  0022B6  EF5F  F011         	goto	u3431
  9506  0022BA  EF61  F011         	goto	u3430
  9507  0022BE                     u3431:
  9508  0022BE  EF85  F011         	goto	l1016
  9509  0022C2                     u3430:
  9510  0022C2  0EFF               	movlw	255
  9511  0022C4  1422               	andwf	___fldiv@grs^0,w,c
  9512  0022C6  6E17               	movwf	??___fldiv^0,c
  9513  0022C8  0EFF               	movlw	255
  9514  0022CA  1423               	andwf	(___fldiv@grs+1)^0,w,c
  9515  0022CC  6E18               	movwf	(??___fldiv+1)^0,c
  9516  0022CE  0EFF               	movlw	255
  9517  0022D0  1424               	andwf	(___fldiv@grs+2)^0,w,c
  9518  0022D2  6E19               	movwf	(??___fldiv+2)^0,c
  9519  0022D4  0E7F               	movlw	127
  9520  0022D6  1425               	andwf	(___fldiv@grs+3)^0,w,c
  9521  0022D8  6E1A               	movwf	(??___fldiv+3)^0,c
  9522  0022DA  5017               	movf	??___fldiv^0,w,c
  9523  0022DC  1018               	iorwf	(??___fldiv+1)^0,w,c
  9524  0022DE  1019               	iorwf	(??___fldiv+2)^0,w,c
  9525  0022E0  101A               	iorwf	(??___fldiv+3)^0,w,c
  9526  0022E2  B4D8               	btfsc	status,2,c
  9527  0022E4  EF76  F011         	goto	u3441
  9528  0022E8  EF78  F011         	goto	u3440
  9529  0022EC                     u3441:
  9530  0022EC  EF7C  F011         	goto	l1017
  9531  0022F0                     u3440:
  9532  0022F0                     l3604:
  9533  0022F0  0E01               	movlw	1
  9534  0022F2  6E27               	movwf	___fldiv@aexp^0,c
  9535  0022F4  EF85  F011         	goto	l1016
  9536  0022F8                     l1017:
  9537  0022F8  A00F               	btfss	___fldiv@b^0,0,c
  9538  0022FA  EF81  F011         	goto	u3451
  9539  0022FE  EF83  F011         	goto	u3450
  9540  002302                     u3451:
  9541  002302  EF85  F011         	goto	l1016
  9542  002306                     u3450:
  9543  002306  EF78  F011         	goto	l3604
  9544  00230A                     l1016:
  9545  00230A  5027               	movf	___fldiv@aexp^0,w,c
  9546  00230C  B4D8               	btfsc	status,2,c
  9547  00230E  EF8B  F011         	goto	u3461
  9548  002312  EF8D  F011         	goto	u3460
  9549  002316                     u3461:
  9550  002316  EFB1  F011         	goto	l3616
  9551  00231A                     u3460:
  9552  00231A  0E01               	movlw	1
  9553  00231C  260F               	addwf	___fldiv@b^0,f,c
  9554  00231E  0E00               	movlw	0
  9555  002320  2210               	addwfc	(___fldiv@b+1)^0,f,c
  9556  002322  2211               	addwfc	(___fldiv@b+2)^0,f,c
  9557  002324  2212               	addwfc	(___fldiv@b+3)^0,f,c
  9558  002326  A012               	btfss	(___fldiv@b+3)^0,0,c
  9559  002328  EF98  F011         	goto	u3471
  9560  00232C  EF9A  F011         	goto	u3470
  9561  002330                     u3471:
  9562  002330  EFB1  F011         	goto	l3616
  9563  002334                     u3470:
  9564  002334  C00F  F017         	movff	___fldiv@b,??___fldiv
  9565  002338  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  9566  00233C  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  9567  002340  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  9568  002344  341A               	rlcf	(??___fldiv+3)^0,w,c
  9569  002346  321A               	rrcf	(??___fldiv+3)^0,f,c
  9570  002348  3219               	rrcf	(??___fldiv+2)^0,f,c
  9571  00234A  3218               	rrcf	(??___fldiv+1)^0,f,c
  9572  00234C  3217               	rrcf	??___fldiv^0,f,c
  9573  00234E  C017  F00F         	movff	??___fldiv,___fldiv@b
  9574  002352  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  9575  002356  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  9576  00235A  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  9577  00235E  4A20               	infsnz	___fldiv@new_exp^0,f,c
  9578  002360  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  9579  002362                     l3616:
  9580  002362  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9581  002364  EFBC  F011         	goto	u3481
  9582  002368  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  9583  00236A  E108               	bnz	u3480
  9584  00236C  2820               	incf	___fldiv@new_exp^0,w,c
  9585  00236E  A0D8               	btfss	status,0,c
  9586  002370  EFBC  F011         	goto	u3481
  9587  002374  EFBE  F011         	goto	u3480
  9588  002378                     u3481:
  9589  002378  EFC9  F011         	goto	l3620
  9590  00237C                     u3480:
  9591  00237C  0E00               	movlw	0
  9592  00237E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  9593  002380  6820               	setf	___fldiv@new_exp^0,c
  9594  002382  0E00               	movlw	0
  9595  002384  6E0F               	movwf	___fldiv@b^0,c
  9596  002386  0E00               	movlw	0
  9597  002388  6E10               	movwf	(___fldiv@b+1)^0,c
  9598  00238A  0E00               	movlw	0
  9599  00238C  6E11               	movwf	(___fldiv@b+2)^0,c
  9600  00238E  0E00               	movlw	0
  9601  002390  6E12               	movwf	(___fldiv@b+3)^0,c
  9602  002392                     l3620:
  9603  002392  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9604  002394  EFD6  F011         	goto	u3490
  9605  002398  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  9606  00239A  E106               	bnz	u3491
  9607  00239C  0420               	decf	___fldiv@new_exp^0,w,c
  9608  00239E  B0D8               	btfsc	status,0,c
  9609  0023A0  EFD4  F011         	goto	u3491
  9610  0023A4  EFD6  F011         	goto	u3490
  9611  0023A8                     u3491:
  9612  0023A8  EFE4  F011         	goto	l3624
  9613  0023AC                     u3490:
  9614  0023AC  0E00               	movlw	0
  9615  0023AE  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  9616  0023B0  0E00               	movlw	0
  9617  0023B2  6E20               	movwf	___fldiv@new_exp^0,c
  9618  0023B4  0E00               	movlw	0
  9619  0023B6  6E0F               	movwf	___fldiv@b^0,c
  9620  0023B8  0E00               	movlw	0
  9621  0023BA  6E10               	movwf	(___fldiv@b+1)^0,c
  9622  0023BC  0E00               	movlw	0
  9623  0023BE  6E11               	movwf	(___fldiv@b+2)^0,c
  9624  0023C0  0E00               	movlw	0
  9625  0023C2  6E12               	movwf	(___fldiv@b+3)^0,c
  9626  0023C4  0E00               	movlw	0
  9627  0023C6  6E1F               	movwf	___fldiv@sign^0,c
  9628  0023C8                     l3624:
  9629  0023C8  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  9630  0023CC  A026               	btfss	___fldiv@bexp^0,0,c
  9631  0023CE  EFEB  F011         	goto	u3501
  9632  0023D2  EFED  F011         	goto	u3500
  9633  0023D6                     u3501:
  9634  0023D6  EFF0  F011         	goto	l3630
  9635  0023DA                     u3500:
  9636  0023DA  8E11               	bsf	(___fldiv@b+2)^0,7,c
  9637  0023DC  EFF1  F011         	goto	l3632
  9638  0023E0                     l3630:
  9639  0023E0  9E11               	bcf	(___fldiv@b+2)^0,7,c
  9640  0023E2                     l3632:
  9641  0023E2  90D8               	bcf	status,0,c
  9642  0023E4  3026               	rrcf	___fldiv@bexp^0,w,c
  9643  0023E6  6E12               	movwf	(___fldiv@b+3)^0,c
  9644  0023E8  EFA7  F010         	goto	l3546
  9645  0023EC                     l1003:
  9646  0023EC  0012               	return		;funcret
  9647  0023EE                     __end_of___fldiv:
  9648                           	callstack 0
  9649                           
  9650 ;; *************** function _print *****************
  9651 ;; Defined at:
  9652 ;;		line 14 in file "./UART.h"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;  value           2    0[COMRAM] PTR unsigned char 
  9655 ;;		 -> send_ACCEL@message(9), send_GYRO@message(9), 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;		None
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  1    wreg      void 
  9660 ;; Registers used:
  9661 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9662 ;; Tracked objects:
  9663 ;;		On entry : 0/0
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9667 ;;      Params:         2       0       0       0       0       0       0
  9668 ;;      Locals:         0       0       0       0       0       0       0
  9669 ;;      Temps:          0       0       0       0       0       0       0
  9670 ;;      Totals:         2       0       0       0       0       0       0
  9671 ;;Total ram usage:        2 bytes
  9672 ;; Hardware stack levels used: 1
  9673 ;; This function calls:
  9674 ;;		Nothing
  9675 ;; This function is called by:
  9676 ;;		_send_GYRO
  9677 ;;		_send_ACCEL
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           	psect	text46
  9682  003B44                     __ptext46:
  9683                           	callstack 0
  9684  003B44                     _print:
  9685                           	callstack 28
  9686  003B44                     
  9687                           ;./UART.h: 16:     while(*value != '\0') {
  9688  003B44  EFB3  F01D         	goto	l4646
  9689  003B48                     l179:
  9690                           
  9691                           ;./UART.h: 17:         while(!TRMT1){
  9692  003B48  A2AC               	btfss	4012,1,c	;volatile
  9693  003B4A  EFA9  F01D         	goto	u5251
  9694  003B4E  EFAB  F01D         	goto	u5250
  9695  003B52                     u5251:
  9696  003B52  EFA4  F01D         	goto	l179
  9697  003B56                     u5250:
  9698  003B56                     
  9699                           ;./UART.h: 20:         TXREG1 = *value;
  9700  003B56  C001  FFD9         	movff	print@value,fsr2l
  9701  003B5A  C002  FFDA         	movff	print@value+1,fsr2h
  9702  003B5E  50DF               	movf	indf2,w,c
  9703  003B60  6EAD               	movwf	173,c	;volatile
  9704  003B62                     
  9705                           ;./UART.h: 21:         value++;
  9706  003B62  4A01               	infsnz	print@value^0,f,c
  9707  003B64  2A02               	incf	(print@value+1)^0,f,c
  9708  003B66                     l4646:
  9709                           
  9710                           ;./UART.h: 16:     while(*value != '\0') {
  9711  003B66  C001  FFD9         	movff	print@value,fsr2l
  9712  003B6A  C002  FFDA         	movff	print@value+1,fsr2h
  9713  003B6E  50DF               	movf	indf2,w,c
  9714  003B70  A4D8               	btfss	status,2,c
  9715  003B72  EFBD  F01D         	goto	u5261
  9716  003B76  EFBF  F01D         	goto	u5260
  9717  003B7A                     u5261:
  9718  003B7A  EFA4  F01D         	goto	l179
  9719  003B7E                     u5260:
  9720  003B7E  0012               	return		;funcret
  9721  003B80                     __end_of_print:
  9722                           	callstack 0
  9723                           
  9724 ;; *************** function _init_MPU6050 *****************
  9725 ;; Defined at:
  9726 ;;		line 130 in file "./MPU6050.h"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;  accel_range_    1    wreg     unsigned char 
  9729 ;;  gyro_range_i    1    5[COMRAM] unsigned char 
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;  accel_range_    1    8[COMRAM] unsigned char 
  9732 ;;  value2          1   10[COMRAM] unsigned char 
  9733 ;;  value           1    9[COMRAM] unsigned char 
  9734 ;; Return value:  Size  Location     Type
  9735 ;;                  1    wreg      void 
  9736 ;; Registers used:
  9737 ;;		wreg, status,2, status,0, cstack
  9738 ;; Tracked objects:
  9739 ;;		On entry : 0/0
  9740 ;;		On exit  : 0/0
  9741 ;;		Unchanged: 0/0
  9742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9743 ;;      Params:         1       0       0       0       0       0       0
  9744 ;;      Locals:         3       0       0       0       0       0       0
  9745 ;;      Temps:          2       0       0       0       0       0       0
  9746 ;;      Totals:         6       0       0       0       0       0       0
  9747 ;;Total ram usage:        6 bytes
  9748 ;; Hardware stack levels used: 1
  9749 ;; Hardware stack levels required when called: 3
  9750 ;; This function calls:
  9751 ;;		_sendI2C1
  9752 ;; This function is called by:
  9753 ;;		_main
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           	psect	text47
  9758  00311A                     __ptext47:
  9759                           	callstack 0
  9760  00311A                     _init_MPU6050:
  9761                           	callstack 27
  9762                           
  9763                           ;incstack = 0
  9764                           ;init_MPU6050@accel_range_input stored from wreg
  9765  00311A  6E09               	movwf	init_MPU6050@accel_range_input^0,c
  9766  00311C                     
  9767                           ;./MPU6050.h: 144:     accel_range = accel_range_input;
  9768  00311C  C009  F0F0         	movff	init_MPU6050@accel_range_input,_accel_range
  9769  003120                     
  9770                           ;./MPU6050.h: 145:     gyro_range = gyro_range_input;
  9771  003120  C006  F0EF         	movff	init_MPU6050@gyro_range_input,_gyro_range
  9772  003124                     
  9773                           ;./MPU6050.h: 148:     sendI2C1(0b11010000, 0x6B, 0x00);
  9774  003124  0E6B               	movlw	107
  9775  003126  6E03               	movwf	sendI2C1@address^0,c
  9776  003128  0E00               	movlw	0
  9777  00312A  6E04               	movwf	sendI2C1@data^0,c
  9778  00312C  0ED0               	movlw	208
  9779  00312E  EC90  F01E         	call	_sendI2C1
  9780  003132                     
  9781                           ;./MPU6050.h: 149:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9782  003132  0E11               	movlw	17
  9783  003134  6E08               	movwf	(??_init_MPU6050+1)^0,c
  9784  003136  0E3C               	movlw	60
  9785  003138  6E07               	movwf	??_init_MPU6050^0,c
  9786  00313A  0ECB               	movlw	203
  9787  00313C                     u5567:
  9788  00313C  2EE8               	decfsz	wreg,f,c
  9789  00313E  D7FE               	bra	u5567
  9790  003140  2E07               	decfsz	??_init_MPU6050^0,f,c
  9791  003142  D7FC               	bra	u5567
  9792  003144  2E08               	decfsz	(??_init_MPU6050+1)^0,f,c
  9793  003146  D7FA               	bra	u5567
  9794  003148  F000               	nop	
  9795                           
  9796                           ;./MPU6050.h: 162:     sendI2C1(0b11010000, 0x6B, 0b00000001);
  9797  00314A  0E6B               	movlw	107
  9798  00314C  6E03               	movwf	sendI2C1@address^0,c
  9799  00314E  0E01               	movlw	1
  9800  003150  6E04               	movwf	sendI2C1@data^0,c
  9801  003152  0ED0               	movlw	208
  9802  003154  EC90  F01E         	call	_sendI2C1
  9803                           
  9804                           ;./MPU6050.h: 172:     sendI2C1(0b11010000, 0x1A, 0b00000011);
  9805  003158  0E1A               	movlw	26
  9806  00315A  6E03               	movwf	sendI2C1@address^0,c
  9807  00315C  0E03               	movlw	3
  9808  00315E  6E04               	movwf	sendI2C1@data^0,c
  9809  003160  0ED0               	movlw	208
  9810  003162  EC90  F01E         	call	_sendI2C1
  9811                           
  9812                           ;./MPU6050.h: 179:     sendI2C1(0b11010000, 0x19, 0x04);
  9813  003166  0E19               	movlw	25
  9814  003168  6E03               	movwf	sendI2C1@address^0,c
  9815  00316A  0E04               	movlw	4
  9816  00316C  6E04               	movwf	sendI2C1@data^0,c
  9817  00316E  0ED0               	movlw	208
  9818  003170  EC90  F01E         	call	_sendI2C1
  9819  003174                     
  9820                           ;./MPU6050.h: 190:     uint8_t value = (uint8_t)(0b00000000 | gyro_range<<3);
  9821  003174  0100               	movlb	0	; () banked
  9822  003176  39EF               	swapf	_gyro_range& (0+255),w,b
  9823  003178  42E8               	rrncf	wreg,f,c
  9824  00317A  0BF8               	andlw	248
  9825  00317C  6E0A               	movwf	init_MPU6050@value^0,c
  9826  00317E                     
  9827                           ; BSR set to: 0
  9828                           ;./MPU6050.h: 191:     sendI2C1(0b11010000, 0x1B, value);
  9829  00317E  0E1B               	movlw	27
  9830  003180  6E03               	movwf	sendI2C1@address^0,c
  9831  003182  C00A  F004         	movff	init_MPU6050@value,sendI2C1@data
  9832  003186  0ED0               	movlw	208
  9833  003188  EC90  F01E         	call	_sendI2C1
  9834                           
  9835                           ;./MPU6050.h: 202:     uint8_t value2 = (uint8_t)(0b00000000 | accel_range<<3);
  9836  00318C  0100               	movlb	0	; () banked
  9837  00318E  39F0               	swapf	_accel_range& (0+255),w,b
  9838  003190  42E8               	rrncf	wreg,f,c
  9839  003192  0BF8               	andlw	248
  9840  003194  6E0B               	movwf	init_MPU6050@value2^0,c
  9841  003196                     
  9842                           ; BSR set to: 0
  9843                           ;./MPU6050.h: 203:     sendI2C1(0b11010000, 0x1C, value2);
  9844  003196  0E1C               	movlw	28
  9845  003198  6E03               	movwf	sendI2C1@address^0,c
  9846  00319A  C00B  F004         	movff	init_MPU6050@value2,sendI2C1@data
  9847  00319E  0ED0               	movlw	208
  9848  0031A0  EC90  F01E         	call	_sendI2C1
  9849  0031A4                     
  9850                           ;./MPU6050.h: 218:     sendI2C1(0b11010000, 0x23, 0b00000000);
  9851  0031A4  0E23               	movlw	35
  9852  0031A6  6E03               	movwf	sendI2C1@address^0,c
  9853  0031A8  0E00               	movlw	0
  9854  0031AA  6E04               	movwf	sendI2C1@data^0,c
  9855  0031AC  0ED0               	movlw	208
  9856  0031AE  EC90  F01E         	call	_sendI2C1
  9857  0031B2                     
  9858                           ;./MPU6050.h: 231:     sendI2C1(0b11010000, 0x24, 0b00000000);
  9859  0031B2  0E24               	movlw	36
  9860  0031B4  6E03               	movwf	sendI2C1@address^0,c
  9861  0031B6  0E00               	movlw	0
  9862  0031B8  6E04               	movwf	sendI2C1@data^0,c
  9863  0031BA  0ED0               	movlw	208
  9864  0031BC  EC90  F01E         	call	_sendI2C1
  9865  0031C0                     
  9866                           ;./MPU6050.h: 270:     sendI2C1(0b11010000, 0x38, 0b00000000);
  9867  0031C0  0E38               	movlw	56
  9868  0031C2  6E03               	movwf	sendI2C1@address^0,c
  9869  0031C4  0E00               	movlw	0
  9870  0031C6  6E04               	movwf	sendI2C1@data^0,c
  9871  0031C8  0ED0               	movlw	208
  9872  0031CA  EC90  F01E         	call	_sendI2C1
  9873  0031CE                     
  9874                           ;./MPU6050.h: 304:     sendI2C1(0b11010000, 0x67, 0b00000000);
  9875  0031CE  0E67               	movlw	103
  9876  0031D0  6E03               	movwf	sendI2C1@address^0,c
  9877  0031D2  0E00               	movlw	0
  9878  0031D4  6E04               	movwf	sendI2C1@data^0,c
  9879  0031D6  0ED0               	movlw	208
  9880  0031D8  EC90  F01E         	call	_sendI2C1
  9881  0031DC                     
  9882                           ;./MPU6050.h: 317:     sendI2C1(0b11010000, 0x6C, 0b00000000);
  9883  0031DC  0E6C               	movlw	108
  9884  0031DE  6E03               	movwf	sendI2C1@address^0,c
  9885  0031E0  0E00               	movlw	0
  9886  0031E2  6E04               	movwf	sendI2C1@data^0,c
  9887  0031E4  0ED0               	movlw	208
  9888  0031E6  EC90  F01E         	call	_sendI2C1
  9889  0031EA  0012               	return		;funcret
  9890  0031EC                     __end_of_init_MPU6050:
  9891                           	callstack 0
  9892                           
  9893 ;; *************** function _sendI2C1 *****************
  9894 ;; Defined at:
  9895 ;;		line 85 in file "./I2C.h"
  9896 ;; Parameters:    Size  Location     Type
  9897 ;;  module_addre    1    wreg     unsigned char 
  9898 ;;  address         1    2[COMRAM] unsigned char 
  9899 ;;  data            1    3[COMRAM] unsigned char 
  9900 ;; Auto vars:     Size  Location     Type
  9901 ;;  module_addre    1    4[COMRAM] unsigned char 
  9902 ;; Return value:  Size  Location     Type
  9903 ;;                  1    wreg      void 
  9904 ;; Registers used:
  9905 ;;		wreg, status,2, status,0, cstack
  9906 ;; Tracked objects:
  9907 ;;		On entry : 0/0
  9908 ;;		On exit  : 0/0
  9909 ;;		Unchanged: 0/0
  9910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9911 ;;      Params:         2       0       0       0       0       0       0
  9912 ;;      Locals:         1       0       0       0       0       0       0
  9913 ;;      Temps:          0       0       0       0       0       0       0
  9914 ;;      Totals:         3       0       0       0       0       0       0
  9915 ;;Total ram usage:        3 bytes
  9916 ;; Hardware stack levels used: 1
  9917 ;; Hardware stack levels required when called: 2
  9918 ;; This function calls:
  9919 ;;		_rawSendI2C1
  9920 ;;		_start_condition1
  9921 ;;		_stop_condition1
  9922 ;; This function is called by:
  9923 ;;		_init_MPU6050
  9924 ;;		_reset_ALL_SIGNAL_PATH_AND_DATA
  9925 ;;		_reset_EVERYTHING
  9926 ;;		_reset_signal_path
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930                           	psect	text48
  9931  003D20                     __ptext48:
  9932                           	callstack 0
  9933  003D20                     _sendI2C1:
  9934                           	callstack 27
  9935                           
  9936                           ;incstack = 0
  9937                           ;sendI2C1@module_address stored from wreg
  9938  003D20  6E05               	movwf	sendI2C1@module_address^0,c
  9939  003D22                     
  9940                           ;./I2C.h: 88:     start_condition1();
  9941  003D22  ECE2  F01E         	call	_start_condition1	;wreg free
  9942                           
  9943                           ;./I2C.h: 89:     rawSendI2C1(module_address);
  9944  003D26  5005               	movf	sendI2C1@module_address^0,w,c
  9945  003D28  ECC7  F01E         	call	_rawSendI2C1
  9946                           
  9947                           ;./I2C.h: 90:     rawSendI2C1(address);
  9948  003D2C  5003               	movf	sendI2C1@address^0,w,c
  9949  003D2E  ECC7  F01E         	call	_rawSendI2C1
  9950                           
  9951                           ;./I2C.h: 91:     rawSendI2C1(data);
  9952  003D32  5004               	movf	sendI2C1@data^0,w,c
  9953  003D34  ECC7  F01E         	call	_rawSendI2C1
  9954                           
  9955                           ;./I2C.h: 92:     stop_condition1();
  9956  003D38  ECDE  F01E         	call	_stop_condition1	;wreg free
  9957  003D3C  0012               	return		;funcret
  9958  003D3E                     __end_of_sendI2C1:
  9959                           	callstack 0
  9960                           
  9961 ;; *************** function _stop_condition1 *****************
  9962 ;; Defined at:
  9963 ;;		line 41 in file "./I2C.h"
  9964 ;; Parameters:    Size  Location     Type
  9965 ;;		None
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;		None
  9968 ;; Return value:  Size  Location     Type
  9969 ;;                  1    wreg      void 
  9970 ;; Registers used:
  9971 ;;		wreg, status,2, status,0, cstack
  9972 ;; Tracked objects:
  9973 ;;		On entry : 0/0
  9974 ;;		On exit  : 0/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9977 ;;      Params:         0       0       0       0       0       0       0
  9978 ;;      Locals:         0       0       0       0       0       0       0
  9979 ;;      Temps:          0       0       0       0       0       0       0
  9980 ;;      Totals:         0       0       0       0       0       0       0
  9981 ;;Total ram usage:        0 bytes
  9982 ;; Hardware stack levels used: 1
  9983 ;; Hardware stack levels required when called: 1
  9984 ;; This function calls:
  9985 ;;		_wait1
  9986 ;; This function is called by:
  9987 ;;		_sendI2C1
  9988 ;;		_readI2C1
  9989 ;;		_basicSendI2C1
  9990 ;;		_basicReadI2C1
  9991 ;; This function uses a non-reentrant model
  9992 ;;
  9993                           
  9994                           	psect	text49
  9995  003DBC                     __ptext49:
  9996                           	callstack 0
  9997  003DBC                     _stop_condition1:
  9998                           	callstack 26
  9999  003DBC                     
 10000                           ;./I2C.h: 43:   wait1();
 10001  003DBC  EC6D  F01E         	call	_wait1	;wreg free
 10002  003DC0                     
 10003                           ;./I2C.h: 44:   PEN1 = 1;
 10004  003DC0  84C5               	bsf	4037,2,c	;volatile
 10005  003DC2  0012               	return		;funcret
 10006  003DC4                     __end_of_stop_condition1:
 10007                           	callstack 0
 10008                           
 10009 ;; *************** function _start_condition1 *****************
 10010 ;; Defined at:
 10011 ;;		line 35 in file "./I2C.h"
 10012 ;; Parameters:    Size  Location     Type
 10013 ;;		None
 10014 ;; Auto vars:     Size  Location     Type
 10015 ;;		None
 10016 ;; Return value:  Size  Location     Type
 10017 ;;                  1    wreg      void 
 10018 ;; Registers used:
 10019 ;;		wreg, status,2, status,0, cstack
 10020 ;; Tracked objects:
 10021 ;;		On entry : 0/0
 10022 ;;		On exit  : 0/0
 10023 ;;		Unchanged: 0/0
 10024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10025 ;;      Params:         0       0       0       0       0       0       0
 10026 ;;      Locals:         0       0       0       0       0       0       0
 10027 ;;      Temps:          0       0       0       0       0       0       0
 10028 ;;      Totals:         0       0       0       0       0       0       0
 10029 ;;Total ram usage:        0 bytes
 10030 ;; Hardware stack levels used: 1
 10031 ;; Hardware stack levels required when called: 1
 10032 ;; This function calls:
 10033 ;;		_wait1
 10034 ;; This function is called by:
 10035 ;;		_sendI2C1
 10036 ;;		_readI2C1
 10037 ;;		_basicSendI2C1
 10038 ;;		_basicReadI2C1
 10039 ;; This function uses a non-reentrant model
 10040 ;;
 10041                           
 10042                           	psect	text50
 10043  003DC4                     __ptext50:
 10044                           	callstack 0
 10045  003DC4                     _start_condition1:
 10046                           	callstack 26
 10047  003DC4                     
 10048                           ;./I2C.h: 37:   wait1();
 10049  003DC4  EC6D  F01E         	call	_wait1	;wreg free
 10050  003DC8                     
 10051                           ;./I2C.h: 38:   SEN1 = 1;
 10052  003DC8  80C5               	bsf	4037,0,c	;volatile
 10053  003DCA  0012               	return		;funcret
 10054  003DCC                     __end_of_start_condition1:
 10055                           	callstack 0
 10056                           
 10057 ;; *************** function _rawSendI2C1 *****************
 10058 ;; Defined at:
 10059 ;;		line 70 in file "./I2C.h"
 10060 ;; Parameters:    Size  Location     Type
 10061 ;;  data            1    wreg     unsigned char 
 10062 ;; Auto vars:     Size  Location     Type
 10063 ;;  data            1    1[COMRAM] unsigned char 
 10064 ;; Return value:  Size  Location     Type
 10065 ;;                  1    wreg      unsigned char 
 10066 ;; Registers used:
 10067 ;;		wreg, status,2, status,0, cstack
 10068 ;; Tracked objects:
 10069 ;;		On entry : 0/0
 10070 ;;		On exit  : 0/0
 10071 ;;		Unchanged: 0/0
 10072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10073 ;;      Params:         0       0       0       0       0       0       0
 10074 ;;      Locals:         1       0       0       0       0       0       0
 10075 ;;      Temps:          0       0       0       0       0       0       0
 10076 ;;      Totals:         1       0       0       0       0       0       0
 10077 ;;Total ram usage:        1 bytes
 10078 ;; Hardware stack levels used: 1
 10079 ;; Hardware stack levels required when called: 1
 10080 ;; This function calls:
 10081 ;;		_wait1
 10082 ;; This function is called by:
 10083 ;;		_sendI2C1
 10084 ;;		_readI2C1
 10085 ;;		_basicSendI2C1
 10086 ;;		_basicReadI2C1
 10087 ;; This function uses a non-reentrant model
 10088 ;;
 10089                           
 10090                           	psect	text51
 10091  003D8E                     __ptext51:
 10092                           	callstack 0
 10093  003D8E                     _rawSendI2C1:
 10094                           	callstack 26
 10095                           
 10096                           ;incstack = 0
 10097                           ;rawSendI2C1@data stored from wreg
 10098  003D8E  6E02               	movwf	rawSendI2C1@data^0,c
 10099  003D90                     
 10100                           ;./I2C.h: 72:   wait1();
 10101  003D90  EC6D  F01E         	call	_wait1	;wreg free
 10102  003D94                     
 10103                           ;./I2C.h: 73:   SSP1BUF = data;
 10104  003D94  C002  FFC9         	movff	rawSendI2C1@data,4041	;volatile
 10105                           
 10106                           ;./I2C.h: 74:   wait1();
 10107  003D98  EC6D  F01E         	call	_wait1	;wreg free
 10108  003D9C  0012               	return		;funcret
 10109  003D9E                     __end_of_rawSendI2C1:
 10110                           	callstack 0
 10111                           
 10112 ;; *************** function _wait1 *****************
 10113 ;; Defined at:
 10114 ;;		line 18 in file "./I2C.h"
 10115 ;; Parameters:    Size  Location     Type
 10116 ;;		None
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;		None
 10119 ;; Return value:  Size  Location     Type
 10120 ;;                  1    wreg      void 
 10121 ;; Registers used:
 10122 ;;		wreg, status,2, status,0
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10128 ;;      Params:         0       0       0       0       0       0       0
 10129 ;;      Locals:         0       0       0       0       0       0       0
 10130 ;;      Temps:          1       0       0       0       0       0       0
 10131 ;;      Totals:         1       0       0       0       0       0       0
 10132 ;;Total ram usage:        1 bytes
 10133 ;; Hardware stack levels used: 1
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_start_condition1
 10138 ;;		_stop_condition1
 10139 ;;		_restart_condition1
 10140 ;;		_sendNACK1
 10141 ;;		_rawSendI2C1
 10142 ;;		_rawReadI2C1
 10143 ;;		_sendACK1
 10144 ;; This function uses a non-reentrant model
 10145 ;;
 10146                           
 10147                           	psect	text52
 10148  003CDA                     __ptext52:
 10149                           	callstack 0
 10150  003CDA                     _wait1:
 10151                           	callstack 26
 10152  003CDA                     l213:
 10153  003CDA  B4C7               	btfsc	199,2,c	;volatile
 10154  003CDC  EF72  F01E         	goto	u3261
 10155  003CE0  EF74  F01E         	goto	u3260
 10156  003CE4                     u3261:
 10157  003CE4  EF6D  F01E         	goto	l213
 10158  003CE8                     u3260:
 10159  003CE8  CFC5 F001          	movff	4037,??_wait1	;volatile
 10160  003CEC  0E1F               	movlw	31
 10161  003CEE  1601               	andwf	??_wait1^0,f,c
 10162  003CF0  A4D8               	btfss	status,2,c
 10163  003CF2  EF7D  F01E         	goto	u3271
 10164  003CF6  EF7F  F01E         	goto	u3270
 10165  003CFA                     u3271:
 10166  003CFA  EF6D  F01E         	goto	l213
 10167  003CFE                     u3270:
 10168  003CFE  0012               	return		;funcret
 10169  003D00                     __end_of_wait1:
 10170                           	callstack 0
 10171                           
 10172 ;; *************** function _init_I2C_Master1 *****************
 10173 ;; Defined at:
 10174 ;;		line 4 in file "./I2C.h"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;  baudRate        4   14[COMRAM] long 
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;		None
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  1    wreg      void 
 10181 ;; Registers used:
 10182 ;;		wreg, status,2, status,0, cstack
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10188 ;;      Params:         4       0       0       0       0       0       0
 10189 ;;      Locals:         0       0       0       0       0       0       0
 10190 ;;      Temps:          0       0       0       0       0       0       0
 10191 ;;      Totals:         4       0       0       0       0       0       0
 10192 ;;Total ram usage:        4 bytes
 10193 ;; Hardware stack levels used: 1
 10194 ;; Hardware stack levels required when called: 1
 10195 ;; This function calls:
 10196 ;;		___aldiv
 10197 ;; This function is called by:
 10198 ;;		_main
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           	psect	text53
 10203  003ABA                     __ptext53:
 10204                           	callstack 0
 10205  003ABA                     _init_I2C_Master1:
 10206                           	callstack 29
 10207  003ABA                     
 10208                           ;./I2C.h: 6:     TRISC3 = 1;
 10209  003ABA  8694               	bsf	3988,3,c	;volatile
 10210                           
 10211                           ;./I2C.h: 7:     TRISC4 = 1;
 10212  003ABC  8894               	bsf	3988,4,c	;volatile
 10213                           
 10214                           ;./I2C.h: 8:     ANSC3 = 0;
 10215  003ABE  010F               	movlb	15	; () banked
 10216  003AC0  973A               	bcf	58,3,b	;volatile
 10217                           
 10218                           ;./I2C.h: 9:     ANSC4 = 0;
 10219  003AC2  993A               	bcf	58,4,b	;volatile
 10220  003AC4                     
 10221                           ; BSR set to: 15
 10222                           ;./I2C.h: 11:     SSP1CON1bits.SSPM = 0b1000;
 10223  003AC4  50C6               	movf	198,w,c	;volatile
 10224  003AC6  0BF0               	andlw	-16
 10225  003AC8  0908               	iorlw	8
 10226  003ACA  6EC6               	movwf	198,c	;volatile
 10227  003ACC                     
 10228                           ; BSR set to: 15
 10229                           ;./I2C.h: 12:     SSP1CON1bits.SSPEN = 1;
 10230  003ACC  8AC6               	bsf	198,5,c	;volatile
 10231                           
 10232                           ;./I2C.h: 13:     SSP1CON2 = 0x00;
 10233  003ACE  0E00               	movlw	0
 10234  003AD0  6EC5               	movwf	197,c	;volatile
 10235                           
 10236                           ;./I2C.h: 14:     SSP1STAT = 0x00;
 10237  003AD2  0E00               	movlw	0
 10238  003AD4  6EC7               	movwf	199,c	;volatile
 10239  003AD6                     
 10240                           ; BSR set to: 15
 10241                           ;./I2C.h: 15:     SSP1ADD = (unsigned char)((64000000/4)/baudRate) - 1;
 10242  003AD6  0E00               	movlw	0
 10243  003AD8  6E01               	movwf	___aldiv@dividend^0,c
 10244  003ADA  0E24               	movlw	36
 10245  003ADC  6E02               	movwf	(___aldiv@dividend+1)^0,c
 10246  003ADE  0EF4               	movlw	244
 10247  003AE0  6E03               	movwf	(___aldiv@dividend+2)^0,c
 10248  003AE2  0E00               	movlw	0
 10249  003AE4  6E04               	movwf	(___aldiv@dividend+3)^0,c
 10250  003AE6  C00F  F005         	movff	init_I2C_Master1@baudRate,___aldiv@divisor
 10251  003AEA  C010  F006         	movff	init_I2C_Master1@baudRate+1,___aldiv@divisor+1
 10252  003AEE  C011  F007         	movff	init_I2C_Master1@baudRate+2,___aldiv@divisor+2
 10253  003AF2  C012  F008         	movff	init_I2C_Master1@baudRate+3,___aldiv@divisor+3
 10254  003AF6  ECA2  F014         	call	___aldiv	;wreg free
 10255  003AFA  0401               	decf	?___aldiv^0,w,c
 10256  003AFC  6EC8               	movwf	200,c	;volatile
 10257  003AFE  0012               	return		;funcret
 10258  003B00                     __end_of_init_I2C_Master1:
 10259                           	callstack 0
 10260                           
 10261 ;; *************** function _initUART1 *****************
 10262 ;; Defined at:
 10263 ;;		line 26 in file "./UART.h"
 10264 ;; Parameters:    Size  Location     Type
 10265 ;;  baud_rate       4   14[COMRAM] long 
 10266 ;; Auto vars:     Size  Location     Type
 10267 ;;  num1            2   22[COMRAM] unsigned short 
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  1    wreg      void 
 10270 ;; Registers used:
 10271 ;;		wreg, status,2, status,0, cstack
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10277 ;;      Params:         4       0       0       0       0       0       0
 10278 ;;      Locals:         6       0       0       0       0       0       0
 10279 ;;      Temps:          0       0       0       0       0       0       0
 10280 ;;      Totals:        10       0       0       0       0       0       0
 10281 ;;Total ram usage:       10 bytes
 10282 ;; Hardware stack levels used: 1
 10283 ;; Hardware stack levels required when called: 1
 10284 ;; This function calls:
 10285 ;;		___aldiv
 10286 ;; This function is called by:
 10287 ;;		_main
 10288 ;; This function uses a non-reentrant model
 10289 ;;
 10290                           
 10291                           	psect	text54
 10292  003700                     __ptext54:
 10293                           	callstack 0
 10294  003700                     _initUART1:
 10295                           	callstack 29
 10296  003700                     
 10297                           ;./UART.h: 27:     TXEN1 = 1;
 10298  003700  8AAC               	bsf	4012,5,c	;volatile
 10299                           
 10300                           ;./UART.h: 28:     CREN1 = 1;
 10301  003702  88AB               	bsf	4011,4,c	;volatile
 10302                           
 10303                           ;./UART.h: 29:     SYNC1 = 0;
 10304  003704  98AC               	bcf	4012,4,c	;volatile
 10305                           
 10306                           ;./UART.h: 30:     SPEN1 = 1;
 10307  003706  8EAB               	bsf	4011,7,c	;volatile
 10308                           
 10309                           ;./UART.h: 32:     TX91 = 0;
 10310  003708  9CAC               	bcf	4012,6,c	;volatile
 10311                           
 10312                           ;./UART.h: 33:     SENDB1 = 1;
 10313  00370A  86AC               	bsf	4012,3,c	;volatile
 10314                           
 10315                           ;./UART.h: 35:     TRISC6 = 1;
 10316  00370C  8C94               	bsf	3988,6,c	;volatile
 10317                           
 10318                           ;./UART.h: 36:     TRISC7 = 1;
 10319  00370E  8E94               	bsf	3988,7,c	;volatile
 10320                           
 10321                           ;./UART.h: 37:     ANSC6 = 0;
 10322  003710  010F               	movlb	15	; () banked
 10323  003712  9D3A               	bcf	58,6,b	;volatile
 10324                           
 10325                           ;./UART.h: 38:     ANSC7 = 0;
 10326  003714  9F3A               	bcf	58,7,b	;volatile
 10327                           
 10328                           ;./UART.h: 40:     BRGH1 = 1;
 10329  003716  84AC               	bsf	4012,2,c	;volatile
 10330                           
 10331                           ;./UART.h: 41:     BRG161 = 1;
 10332  003718  86B8               	bsf	4024,3,c	;volatile
 10333  00371A                     
 10334                           ; BSR set to: 15
 10335                           ;./UART.h: 43:     uint16_t num1 = (uint16_t)((64000000/baud_rate)/4 - 1);
 10336  00371A  C00F  F005         	movff	initUART1@baud_rate,___aldiv@divisor
 10337  00371E  C010  F006         	movff	initUART1@baud_rate+1,___aldiv@divisor+1
 10338  003722  C011  F007         	movff	initUART1@baud_rate+2,___aldiv@divisor+2
 10339  003726  C012  F008         	movff	initUART1@baud_rate+3,___aldiv@divisor+3
 10340  00372A  0E00               	movlw	0
 10341  00372C  6E01               	movwf	___aldiv@dividend^0,c
 10342  00372E  0E90               	movlw	144
 10343  003730  6E02               	movwf	(___aldiv@dividend+1)^0,c
 10344  003732  0ED0               	movlw	208
 10345  003734  6E03               	movwf	(___aldiv@dividend+2)^0,c
 10346  003736  0E03               	movlw	3
 10347  003738  6E04               	movwf	(___aldiv@dividend+3)^0,c
 10348  00373A  ECA2  F014         	call	___aldiv	;wreg free
 10349  00373E  C001  F013         	movff	?___aldiv,_initUART1$2026
 10350  003742  C002  F014         	movff	?___aldiv+1,_initUART1$2026+1
 10351  003746  C003  F015         	movff	?___aldiv+2,_initUART1$2026+2
 10352  00374A  C004  F016         	movff	?___aldiv+3,_initUART1$2026+3
 10353                           
 10354                           ;./UART.h: 43:     uint16_t num1 = (uint16_t)((64000000/baud_rate)/4 - 1);
 10355  00374E  C013  F001         	movff	_initUART1$2026,___aldiv@dividend
 10356  003752  C014  F002         	movff	_initUART1$2026+1,___aldiv@dividend+1
 10357  003756  C015  F003         	movff	_initUART1$2026+2,___aldiv@dividend+2
 10358  00375A  C016  F004         	movff	_initUART1$2026+3,___aldiv@dividend+3
 10359  00375E  0E04               	movlw	4
 10360  003760  6E05               	movwf	___aldiv@divisor^0,c
 10361  003762  0E00               	movlw	0
 10362  003764  6E06               	movwf	(___aldiv@divisor+1)^0,c
 10363  003766  0E00               	movlw	0
 10364  003768  6E07               	movwf	(___aldiv@divisor+2)^0,c
 10365  00376A  0E00               	movlw	0
 10366  00376C  6E08               	movwf	(___aldiv@divisor+3)^0,c
 10367  00376E  ECA2  F014         	call	___aldiv	;wreg free
 10368  003772  0EFF               	movlw	255
 10369  003774  2401               	addwf	?___aldiv^0,w,c
 10370  003776  6E17               	movwf	initUART1@num1^0,c
 10371  003778  0EFF               	movlw	255
 10372  00377A  2002               	addwfc	(?___aldiv+1)^0,w,c
 10373  00377C  6E18               	movwf	(initUART1@num1+1)^0,c
 10374  00377E                     
 10375                           ;./UART.h: 44:     SPBRGH1 = ((uint16_t)num1 >> 8) & 0xFF;
 10376  00377E  5018               	movf	(initUART1@num1+1)^0,w,c
 10377  003780  6EB0               	movwf	176,c	;volatile
 10378  003782                     
 10379                           ;./UART.h: 45:     SPBRG1 = ((uint16_t)num1 >> 0) & 0xFF;
 10380  003782  C017  FFAF         	movff	initUART1@num1,4015	;volatile
 10381  003786                     
 10382                           ;./UART.h: 54:     GIE = 1;
 10383  003786  8EF2               	bsf	4082,7,c	;volatile
 10384  003788                     
 10385                           ;./UART.h: 55:     PEIE = 1;
 10386  003788  8CF2               	bsf	4082,6,c	;volatile
 10387  00378A                     
 10388                           ;./UART.h: 56:     RC1IE = 1;
 10389  00378A  8A9D               	bsf	3997,5,c	;volatile
 10390  00378C  0012               	return		;funcret
 10391  00378E                     __end_of_initUART1:
 10392                           	callstack 0
 10393                           
 10394 ;; *************** function ___aldiv *****************
 10395 ;; Defined at:
 10396 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aldiv.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;  dividend        4    0[COMRAM] long 
 10399 ;;  divisor         4    4[COMRAM] long 
 10400 ;; Auto vars:     Size  Location     Type
 10401 ;;  quotient        4   10[COMRAM] long 
 10402 ;;  sign            1    9[COMRAM] unsigned char 
 10403 ;;  counter         1    8[COMRAM] unsigned char 
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  4    0[COMRAM] long 
 10406 ;; Registers used:
 10407 ;;		wreg, status,2, status,0
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10413 ;;      Params:         8       0       0       0       0       0       0
 10414 ;;      Locals:         6       0       0       0       0       0       0
 10415 ;;      Temps:          0       0       0       0       0       0       0
 10416 ;;      Totals:        14       0       0       0       0       0       0
 10417 ;;Total ram usage:       14 bytes
 10418 ;; Hardware stack levels used: 1
 10419 ;; This function calls:
 10420 ;;		Nothing
 10421 ;; This function is called by:
 10422 ;;		_initUART1
 10423 ;;		_init_I2C_Master1
 10424 ;;		_initUART2
 10425 ;;		_init_I2C_Master2
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429                           	psect	text55
 10430  002944                     __ptext55:
 10431                           	callstack 0
 10432  002944                     ___aldiv:
 10433                           	callstack 29
 10434  002944  0E00               	movlw	0
 10435  002946  6E0A               	movwf	___aldiv@sign^0,c
 10436  002948  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
 10437  00294A  EFAB  F014         	goto	u5330
 10438  00294E  EFA9  F014         	goto	u5331
 10439  002952                     u5331:
 10440  002952  EFB5  F014         	goto	l4742
 10441  002956                     u5330:
 10442  002956  1E08               	comf	(___aldiv@divisor+3)^0,f,c
 10443  002958  1E07               	comf	(___aldiv@divisor+2)^0,f,c
 10444  00295A  1E06               	comf	(___aldiv@divisor+1)^0,f,c
 10445  00295C  6C05               	negf	___aldiv@divisor^0,c
 10446  00295E  0E00               	movlw	0
 10447  002960  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
 10448  002962  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
 10449  002964  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
 10450  002966  0E01               	movlw	1
 10451  002968  6E0A               	movwf	___aldiv@sign^0,c
 10452  00296A                     l4742:
 10453  00296A  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
 10454  00296C  EFBC  F014         	goto	u5340
 10455  002970  EFBA  F014         	goto	u5341
 10456  002974                     u5341:
 10457  002974  EFC6  F014         	goto	l4748
 10458  002978                     u5340:
 10459  002978  1E04               	comf	(___aldiv@dividend+3)^0,f,c
 10460  00297A  1E03               	comf	(___aldiv@dividend+2)^0,f,c
 10461  00297C  1E02               	comf	(___aldiv@dividend+1)^0,f,c
 10462  00297E  6C01               	negf	___aldiv@dividend^0,c
 10463  002980  0E00               	movlw	0
 10464  002982  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
 10465  002984  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
 10466  002986  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
 10467  002988  0E01               	movlw	1
 10468  00298A  1A0A               	xorwf	___aldiv@sign^0,f,c
 10469  00298C                     l4748:
 10470  00298C  0E00               	movlw	0
 10471  00298E  6E0B               	movwf	___aldiv@quotient^0,c
 10472  002990  0E00               	movlw	0
 10473  002992  6E0C               	movwf	(___aldiv@quotient+1)^0,c
 10474  002994  0E00               	movlw	0
 10475  002996  6E0D               	movwf	(___aldiv@quotient+2)^0,c
 10476  002998  0E00               	movlw	0
 10477  00299A  6E0E               	movwf	(___aldiv@quotient+3)^0,c
 10478  00299C  5005               	movf	___aldiv@divisor^0,w,c
 10479  00299E  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
 10480  0029A0  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
 10481  0029A2  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
 10482  0029A4  B4D8               	btfsc	status,2,c
 10483  0029A6  EFD7  F014         	goto	u5351
 10484  0029AA  EFD9  F014         	goto	u5350
 10485  0029AE                     u5351:
 10486  0029AE  EF0F  F015         	goto	l4770
 10487  0029B2                     u5350:
 10488  0029B2  0E01               	movlw	1
 10489  0029B4  6E09               	movwf	___aldiv@counter^0,c
 10490  0029B6  EFE3  F014         	goto	l4756
 10491  0029BA                     l4754:
 10492  0029BA  90D8               	bcf	status,0,c
 10493  0029BC  3605               	rlcf	___aldiv@divisor^0,f,c
 10494  0029BE  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
 10495  0029C0  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
 10496  0029C2  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
 10497  0029C4  2A09               	incf	___aldiv@counter^0,f,c
 10498  0029C6                     l4756:
 10499  0029C6  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
 10500  0029C8  EFE8  F014         	goto	u5361
 10501  0029CC  EFEA  F014         	goto	u5360
 10502  0029D0                     u5361:
 10503  0029D0  EFDD  F014         	goto	l4754
 10504  0029D4                     u5360:
 10505  0029D4                     l4758:
 10506  0029D4  90D8               	bcf	status,0,c
 10507  0029D6  360B               	rlcf	___aldiv@quotient^0,f,c
 10508  0029D8  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
 10509  0029DA  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
 10510  0029DC  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
 10511  0029DE  5005               	movf	___aldiv@divisor^0,w,c
 10512  0029E0  5C01               	subwf	___aldiv@dividend^0,w,c
 10513  0029E2  5006               	movf	(___aldiv@divisor+1)^0,w,c
 10514  0029E4  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
 10515  0029E6  5007               	movf	(___aldiv@divisor+2)^0,w,c
 10516  0029E8  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
 10517  0029EA  5008               	movf	(___aldiv@divisor+3)^0,w,c
 10518  0029EC  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
 10519  0029EE  A0D8               	btfss	status,0,c
 10520  0029F0  EFFC  F014         	goto	u5371
 10521  0029F4  EFFE  F014         	goto	u5370
 10522  0029F8                     u5371:
 10523  0029F8  EF07  F015         	goto	l4766
 10524  0029FC                     u5370:
 10525  0029FC  5005               	movf	___aldiv@divisor^0,w,c
 10526  0029FE  5E01               	subwf	___aldiv@dividend^0,f,c
 10527  002A00  5006               	movf	(___aldiv@divisor+1)^0,w,c
 10528  002A02  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
 10529  002A04  5007               	movf	(___aldiv@divisor+2)^0,w,c
 10530  002A06  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
 10531  002A08  5008               	movf	(___aldiv@divisor+3)^0,w,c
 10532  002A0A  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
 10533  002A0C  800B               	bsf	___aldiv@quotient^0,0,c
 10534  002A0E                     l4766:
 10535  002A0E  90D8               	bcf	status,0,c
 10536  002A10  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
 10537  002A12  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
 10538  002A14  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
 10539  002A16  3205               	rrcf	___aldiv@divisor^0,f,c
 10540  002A18  2E09               	decfsz	___aldiv@counter^0,f,c
 10541  002A1A  EFEA  F014         	goto	l4758
 10542  002A1E                     l4770:
 10543  002A1E  500A               	movf	___aldiv@sign^0,w,c
 10544  002A20  B4D8               	btfsc	status,2,c
 10545  002A22  EF15  F015         	goto	u5381
 10546  002A26  EF17  F015         	goto	u5380
 10547  002A2A                     u5381:
 10548  002A2A  EF1F  F015         	goto	l4774
 10549  002A2E                     u5380:
 10550  002A2E  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
 10551  002A30  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
 10552  002A32  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
 10553  002A34  6C0B               	negf	___aldiv@quotient^0,c
 10554  002A36  0E00               	movlw	0
 10555  002A38  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
 10556  002A3A  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
 10557  002A3C  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
 10558  002A3E                     l4774:
 10559  002A3E  C00B  F001         	movff	___aldiv@quotient,?___aldiv
 10560  002A42  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
 10561  002A46  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
 10562  002A4A  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
 10563  002A4E  0012               	return		;funcret
 10564  002A50                     __end_of___aldiv:
 10565                           	callstack 0
 10566                           
 10567                           	psect	rparam
 10568  0000                     
 10569                           	psect	idloc
 10570                           
 10571                           ;Config register IDLOC0 @ 0x200000
 10572                           ;	unspecified, using default values
 10573  200000                     	org	2097152
 10574  200000  FF                 	db	255
 10575                           
 10576                           ;Config register IDLOC1 @ 0x200001
 10577                           ;	unspecified, using default values
 10578  200001                     	org	2097153
 10579  200001  FF                 	db	255
 10580                           
 10581                           ;Config register IDLOC2 @ 0x200002
 10582                           ;	unspecified, using default values
 10583  200002                     	org	2097154
 10584  200002  FF                 	db	255
 10585                           
 10586                           ;Config register IDLOC3 @ 0x200003
 10587                           ;	unspecified, using default values
 10588  200003                     	org	2097155
 10589  200003  FF                 	db	255
 10590                           
 10591                           ;Config register IDLOC4 @ 0x200004
 10592                           ;	unspecified, using default values
 10593  200004                     	org	2097156
 10594  200004  FF                 	db	255
 10595                           
 10596                           ;Config register IDLOC5 @ 0x200005
 10597                           ;	unspecified, using default values
 10598  200005                     	org	2097157
 10599  200005  FF                 	db	255
 10600                           
 10601                           ;Config register IDLOC6 @ 0x200006
 10602                           ;	unspecified, using default values
 10603  200006                     	org	2097158
 10604  200006  FF                 	db	255
 10605                           
 10606                           ;Config register IDLOC7 @ 0x200007
 10607                           ;	unspecified, using default values
 10608  200007                     	org	2097159
 10609  200007  FF                 	db	255
 10610                           
 10611                           	psect	config
 10612                           
 10613                           ; Padding undefined space
 10614  300000                     	org	3145728
 10615  300000  FF                 	db	255
 10616                           
 10617                           ;Config register CONFIG1H @ 0x300001
 10618                           ;	Oscillator Selection bits
 10619                           ;	FOSC = INTIO67, Internal oscillator block
 10620                           ;	4X PLL Enable
 10621                           ;	PLLCFG = 0x0, unprogrammed default
 10622                           ;	Primary clock enable bit
 10623                           ;	PRICLKEN = OFF, Primary clock can be disabled by software
 10624                           ;	Fail-Safe Clock Monitor Enable bit
 10625                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10626                           ;	Internal/External Oscillator Switchover bit
 10627                           ;	IESO = ON, Oscillator Switchover mode enabled
 10628  300001                     	org	3145729
 10629  300001  88                 	db	136
 10630                           
 10631                           ;Config register CONFIG2L @ 0x300002
 10632                           ;	Power-up Timer Enable bit
 10633                           ;	PWRTEN = ON, Power up timer enabled
 10634                           ;	Brown-out Reset Enable bits
 10635                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
 10636                           ;	Brown Out Reset Voltage bits
 10637                           ;	BORV = 190, VBOR set to 1.90 V nominal
 10638  300002                     	org	3145730
 10639  300002  1A                 	db	26
 10640                           
 10641                           ;Config register CONFIG2H @ 0x300003
 10642                           ;	Watchdog Timer Enable bits
 10643                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 10644                           ;	Watchdog Timer Postscale Select bits
 10645                           ;	WDTPS = 32768, 1:32768
 10646  300003                     	org	3145731
 10647  300003  3C                 	db	60
 10648                           
 10649                           ; Padding undefined space
 10650  300004                     	org	3145732
 10651  300004  FF                 	db	255
 10652                           
 10653                           ;Config register CONFIG3H @ 0x300005
 10654                           ;	CCP2 MUX bit
 10655                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 10656                           ;	PORTB A/D Enable bit
 10657                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 10658                           ;	P3A/CCP3 Mux bit
 10659                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 10660                           ;	HFINTOSC Fast Start-up
 10661                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 10662                           ;	Timer3 Clock input mux bit
 10663                           ;	T3CMX = PORTC0, T3CKI is on RC0
 10664                           ;	ECCP2 B output mux bit
 10665                           ;	P2BMX = PORTD2, P2B is on RD2
 10666                           ;	MCLR Pin Enable bit
 10667                           ;	MCLRE = INTMCLR, RE3 input pin enabled; MCLR disabled
 10668  300005                     	org	3145733
 10669  300005  3D                 	db	61
 10670                           
 10671                           ;Config register CONFIG4L @ 0x300006
 10672                           ;	Stack Full/Underflow Reset Enable bit
 10673                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10674                           ;	Single-Supply ICSP Enable bit
 10675                           ;	LVP = OFF, Single-Supply ICSP disabled
 10676                           ;	Extended Instruction Set Enable bit
 10677                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10678                           ;	Background Debug
 10679                           ;	DEBUG = 0x1, unprogrammed default
 10680  300006                     	org	3145734
 10681  300006  81                 	db	129
 10682                           
 10683                           ; Padding undefined space
 10684  300007                     	org	3145735
 10685  300007  FF                 	db	255
 10686                           
 10687                           ;Config register CONFIG5L @ 0x300008
 10688                           ;	Code Protection Block 0
 10689                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 10690                           ;	Code Protection Block 1
 10691                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 10692                           ;	Code Protection Block 2
 10693                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 10694                           ;	Code Protection Block 3
 10695                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 10696  300008                     	org	3145736
 10697  300008  0F                 	db	15
 10698                           
 10699                           ;Config register CONFIG5H @ 0x300009
 10700                           ;	Boot Block Code Protection bit
 10701                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10702                           ;	Data EEPROM Code Protection bit
 10703                           ;	CPD = OFF, Data EEPROM not code-protected
 10704  300009                     	org	3145737
 10705  300009  C0                 	db	192
 10706                           
 10707                           ;Config register CONFIG6L @ 0x30000A
 10708                           ;	Write Protection Block 0
 10709                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 10710                           ;	Write Protection Block 1
 10711                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 10712                           ;	Write Protection Block 2
 10713                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 10714                           ;	Write Protection Block 3
 10715                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 10716  30000A                     	org	3145738
 10717  30000A  0F                 	db	15
 10718                           
 10719                           ;Config register CONFIG6H @ 0x30000B
 10720                           ;	Configuration Register Write Protection bit
 10721                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10722                           ;	Boot Block Write Protection bit
 10723                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10724                           ;	Data EEPROM Write Protection bit
 10725                           ;	WRTD = OFF, Data EEPROM not write-protected
 10726  30000B                     	org	3145739
 10727  30000B  E0                 	db	224
 10728                           
 10729                           ;Config register CONFIG7L @ 0x30000C
 10730                           ;	Table Read Protection Block 0
 10731                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 10732                           ;	Table Read Protection Block 1
 10733                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 10734                           ;	Table Read Protection Block 2
 10735                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 10736                           ;	Table Read Protection Block 3
 10737                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10738  30000C                     	org	3145740
 10739  30000C  0F                 	db	15
 10740                           
 10741                           ;Config register CONFIG7H @ 0x30000D
 10742                           ;	Boot Block Table Read Protection bit
 10743                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10744  30000D                     	org	3145741
 10745  30000D  40                 	db	64
 10746                           tosu	equ	0xFFF
 10747                           tosh	equ	0xFFE
 10748                           tosl	equ	0xFFD
 10749                           stkptr	equ	0xFFC
 10750                           pclatu	equ	0xFFB
 10751                           pclath	equ	0xFFA
 10752                           pcl	equ	0xFF9
 10753                           tblptru	equ	0xFF8
 10754                           tblptrh	equ	0xFF7
 10755                           tblptrl	equ	0xFF6
 10756                           tablat	equ	0xFF5
 10757                           prodh	equ	0xFF4
 10758                           prodl	equ	0xFF3
 10759                           indf0	equ	0xFEF
 10760                           postinc0	equ	0xFEE
 10761                           postdec0	equ	0xFED
 10762                           preinc0	equ	0xFEC
 10763                           plusw0	equ	0xFEB
 10764                           fsr0h	equ	0xFEA
 10765                           fsr0l	equ	0xFE9
 10766                           wreg	equ	0xFE8
 10767                           indf1	equ	0xFE7
 10768                           postinc1	equ	0xFE6
 10769                           postdec1	equ	0xFE5
 10770                           preinc1	equ	0xFE4
 10771                           plusw1	equ	0xFE3
 10772                           fsr1h	equ	0xFE2
 10773                           fsr1l	equ	0xFE1
 10774                           bsr	equ	0xFE0
 10775                           indf2	equ	0xFDF
 10776                           postinc2	equ	0xFDE
 10777                           postdec2	equ	0xFDD
 10778                           preinc2	equ	0xFDC
 10779                           plusw2	equ	0xFDB
 10780                           fsr2h	equ	0xFDA
 10781                           fsr2l	equ	0xFD9
 10782                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    0
    Data        38
    BSS         117
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    101     145
    BANK1           256      0     112
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 9
		 -> send_TEMP@message(BANK0[9]), send_ACCEL@message(BANK0[9]), send_GYRO@message(BANK0[9]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 9
		 -> send_TEMP@message(BANK0[9]), send_ACCEL@message(BANK0[9]), send_GYRO@message(BANK0[9]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1398_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 9
		 -> send_TEMP@message(BANK0[9]), send_ACCEL@message(BANK0[9]), send_GYRO@message(BANK0[9]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 9
		 -> send_TEMP@message(BANK0[9]), send_ACCEL@message(BANK0[9]), send_GYRO@message(BANK0[9]), 

    print@value	PTR unsigned char  size(2) Largest target is 9
		 -> send_ACCEL@message(BANK0[9]), send_GYRO@message(BANK0[9]), 


Critical Paths under _main in COMRAM

    _read_TEMPERATURE->___fladd
    _send_GYROS->_send_GYRO
    _read_GYRO->___fldiv
    _send_ACCELS->_send_ACCEL
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flge->___flmul
    _ctoa->_fputc
    _atoi->_isspace
    _read_ACCEL->___fldiv
    _readI2C1->_rawReadI2C1
    _readI2C1->_rawSendI2C1
    _restart_condition1->_wait1
    _rawReadI2C1->_wait1
    _sendNACK1->_wait1
    ___fldiv->___xxtofl
    _init_MPU6050->_sendI2C1
    _sendI2C1->_rawSendI2C1
    _stop_condition1->_wait1
    _start_condition1->_wait1
    _rawSendI2C1->_wait1
    _init_I2C_Master1->___aldiv
    _initUART1->___aldiv

Critical Paths under _main in BANK0

    _send_TEMP->_sprintf
    _send_GYROS->_send_GYRO
    _send_GYRO->_sprintf
    _send_ACCELS->_send_ACCEL
    _send_ACCEL->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  121566
                                             99 BANK0      2     2      0
                          _initUART1
                   _init_I2C_Master1
                       _init_MPU6050
                        _send_ACCELS
                         _send_GYROS
                          _send_TEMP
                            _setGPIO
   _set_internal_oscillator_with_PLL
 ---------------------------------------------------------------------------------
 (1) _set_internal_oscillator_with_PLL                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setGPIO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_TEMP                                            9     9      0   40142
                                             86 BANK0      9     9      0
                   _read_TEMPERATURE
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _read_TEMPERATURE                                    10     6      4    7761
                                             55 COMRAM    10     6      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
                           _readI2C1
 ---------------------------------------------------------------------------------
 (1) _send_GYROS                                           0     0      0   38025
                          _send_GYRO
 ---------------------------------------------------------------------------------
 (2) _send_GYRO                                           14    14      0   38025
                                             93 COMRAM     1     1      0
                                             86 BANK0     13    13      0
                              _print
                          _read_GYRO
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _read_GYRO                                           11     7      4    5355
                                             39 COMRAM    11     7      4
                            ___fldiv
                           ___xxtofl
                           _readI2C1
 ---------------------------------------------------------------------------------
 (1) _send_ACCELS                                          0     0      0   38025
                         _send_ACCEL
 ---------------------------------------------------------------------------------
 (2) _send_ACCEL                                          14    14      0   38025
                                             93 COMRAM     1     1      0
                                             86 BANK0     13    13      0
                              _print
                         _read_ACCEL
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   32355
                                             68 BANK0     18     8     10
                         _read_ACCEL (ARG)
                          _read_GYRO (ARG)
                   _read_TEMPERATURE (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   31692
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   31317
                                             75 COMRAM    10     4      6
                                             56 BANK0     12    12      0
                               _atoi
                               _ctoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   23760
                                             63 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4077
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3041
                                             55 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2566
                                             39 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    1645
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1198
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     357
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _read_ACCEL                                          11     7      4    5355
                                             39 COMRAM    11     7      4
                            ___fldiv
                           ___xxtofl
                           _readI2C1
 ---------------------------------------------------------------------------------
 (3) _readI2C1                                             3     2      1    2110
                                              2 COMRAM     3     2      1
                        _rawReadI2C1
                        _rawSendI2C1
                 _restart_condition1
                   _start_condition1
                    _stop_condition1
 ---------------------------------------------------------------------------------
 (4) _restart_condition1                                   0     0      0       0
                              _wait1
 ---------------------------------------------------------------------------------
 (4) _rawReadI2C1                                          1     1      0      23
                                              1 COMRAM     1     1      0
                          _sendNACK1
                              _wait1
 ---------------------------------------------------------------------------------
 (5) _sendNACK1                                            0     0      0       0
                              _wait1
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2463
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _print                                                2     0      2     197
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_MPU6050                                         6     5      1    2686
                                              5 COMRAM     6     5      1
                           _sendI2C1
 ---------------------------------------------------------------------------------
 (2) _sendI2C1                                             3     1      2    2520
                                              2 COMRAM     3     1      2
                        _rawSendI2C1
                   _start_condition1
                    _stop_condition1
 ---------------------------------------------------------------------------------
 (4) _stop_condition1                                      0     0      0       0
                              _wait1
 ---------------------------------------------------------------------------------
 (4) _start_condition1                                     0     0      0       0
                              _wait1
 ---------------------------------------------------------------------------------
 (4) _rawSendI2C1                                          1     1      0      22
                                              1 COMRAM     1     1      0
                              _wait1
 ---------------------------------------------------------------------------------
 (5) _wait1                                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_I2C_Master1                                     4     0      4    1310
                                             14 COMRAM     4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _initUART1                                           10     6      4    1378
                                             14 COMRAM    10     6      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1212
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initUART1
     ___aldiv
   _init_I2C_Master1
     ___aldiv
   _init_MPU6050
     _sendI2C1
       _rawSendI2C1
         _wait1
       _start_condition1
         _wait1
       _stop_condition1
         _wait1
   _send_ACCELS
     _send_ACCEL
       _print
       _read_ACCEL
         ___fldiv
           ___xxtofl (ARG)
         ___xxtofl
         _readI2C1
           _rawReadI2C1
             _sendNACK1
               _wait1
             _wait1
           _rawSendI2C1
           _restart_condition1
             _wait1
           _start_condition1
           _stop_condition1
       _sprintf
         _read_ACCEL (ARG)
         _read_GYRO (ARG)
           ___fldiv
           ___xxtofl
           _readI2C1
         _read_TEMPERATURE (ARG)
           ___fladd
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___fldiv
           ___xxtofl
           _readI2C1
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _fputc
                 _putch
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                 _fputs
                   _fputc
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isdigit
             _isupper
             _strncmp
             _tolower
   _send_GYROS
     _send_GYRO
       _print
       _read_GYRO
       _sprintf
   _send_TEMP
     _read_TEMPERATURE
     _sprintf
   _setGPIO
   _set_internal_oscillator_with_PLL

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      70       6       43.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     65      91       4       90.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     160       9        0.0%
DATA                 0      0     160      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Mar 14 09:42:57 2022

                         read_ACCEL@output 002E                               ___fldiv@aexp 0027  
                             ___fldiv@bexp 0026                         read_ACCEL@output_H 0031  
                       read_ACCEL@output_L 0032                               ___fldiv@sign 001F  
                             ___awdiv@sign 0006                  __size_of_init_I2C_Master1 0046  
                      ___wmul@multiplicand 0003                       ??_restart_condition1 0002  
                 __end_of_start_condition1 3DCC                                        l210 3AFE  
                                      l213 3CDA                                        l222 3DC2  
                                      l302 31EA                                        l231 3DB2  
                                      l216 3CFE                                        l240 3D3C  
                                      l225 3DBA                                        l234 3D9C  
                                      l170 3D8C                                        l219 3DCA  
                                      l243 3D52                                        l500 2A4E  
                                      l340 2C62                                        l324 2B58  
                                      l421 3CD8                                        l183 3B7E  
                                      l351 3D66                                        l343 3654  
                                      l167 3DA8                                        l249 3CB2  
                                      l186 378C                                        l362 3C88  
                                      l179 3B48                                        l356 3912  
                                      l348 38B2                                        l359 3D7A  
                                      l652 343E                                        l718 2D68  
                                      l680 36FE                                        l665 35A8  
                                      l691 2E6C                                        l686 2E26  
                                      l950 1946                                        l695 3BEE  
                                      l951 190C                                        l949 1958  
                                      l966 1A72                                        l958 1C28  
                                      l975 1B42                                        l991 3AB8  
                                      l976 1B30                                        _GIE 007F97  
                                      _pad 32B6                               ___awmod@sign 0006  
                                      prod 000FF3                                        wreg 000FE8  
                             ___flmul@aexp 0012                               ___flmul@bexp 0013  
                             ___flmul@sign 000D                               ___flmul@temp 0018  
                             ___flmul@prod 0014                   __end_of_read_TEMPERATURE 3656  
                             ___fltol@exp1 000A                                       l1003 23EC  
                                     l1005 224C                                       l1014 2292  
                                     l1016 230A                                       l1008 2210  
                                     l1017 22F8                                       l1042 1EE4  
                                     l1035 1CEE                                       l1052 2014  
                                     l1044 1F5C                                       l1140 32FC  
                                     l1045 1F4A                                       l1039 2052  
                                     l1143 333E                                       l1400 3118  
                                     l1161 3042                                       l1145 337A  
                                     l1225 0E62                                       l1090 274A  
                                     l1410 396A                                       l1083 26EE  
                                     l1076 2656                                       l1156 2FD2  
                                     l1325 293A                                       l1334 25FE  
                                     l1079 27B2                                       l1159 3014  
                                     l1415 3972                                       l1271 1768  
                                     l1344 3C26                                       l1352 3A72  
                                     l1328 2942                                       l4000 395C  
                                     l1337 2542                                       l4010 2478  
                                     l1179 128C                                       l1099 3A20  
                                     l3300 1810                                       l4012 2486  
                                     l4020 2566                                       l4004 23EE  
                                     l4100 06BC                                       l1373 32B4  
                                     l1381 3B42                                       l1197 0A22  
                                     l1285 384A                                       l3310 184A  
                                     l3302 1820                                       l4022 25A2  
                                     l4006 240E                                       l1390 39CE  
                                     l1358 3BB6                                       l4110 06EA  
                                     l4102 06CE                                       l1286 3852  
                                     l1279 16B2                                       l4032 3BF0  
                                     l4040 3A3A                                       l1384 3DD2  
                                     l3400 1A52                                       l3320 1876  
                                     l3312 185C                                       l3304 1830  
                                     l1296 2F6A                                       l4024 25B6  
                                     l4016 24F6                                       l4008 2464  
                                     l4200 0ACA                                       l4120 075E  
                                     l4104 06DA                                       l4112 06F0  
                                     l4050 3DAE                                       l4042 3A68  
                                     l3410 1AAC                                       l3402 1A62  
                                     l3330 188A                                       l3322 187A  
                                     l3314 186A                                       l3306 1832  
                                     l4026 25DE                                       l4018 2532  
                                     l4210 0B0E                                       l4202 0ADC  
                                     l4122 077A                                       l4114 0716  
                                     l4130 07C4                                       l4106 06E2  
                                     l4052 3DB0                                       l4044 3A6C  
                                     l4036 3A22                                       l3260 321A  
                                     l4060 2F98                                       l3420 1ADC  
                                     l3412 1AB6                                       l3404 1A88  
                                     l3340 189E                                       l3332 188E  
                                     l3324 187E                                       l3316 186E  
                                     l3308 183A                                       l4028 25EE  
                                     l1396 3C5C                                       l4300 0FB6  
                                     l4220 0B58                                       l4212 0B26  
                                     l4204 0AEA                                       l4140 084E  
                                     l4132 07EA                                       l4124 0792  
                                     l4108 06E6                                       l3510 2080  
                                     l3502 2054                                       l4038 3A26  
                                     l3262 3238                                       l3254 31EC  
                                     l4070 2FDE                                       l4062 2FA6  
                                     l4054 2F6C                                       l3430 1B04  
                                     l3422 1AE0                                       l3414 1AC4  
                                     l3406 1A98                                       l3350 18D8  
                                     l3342 18A2                                       l3334 1892  
                                     l3326 1882                                       l3318 1872  
                                     l3270 1776                                       l4310 1054  
                                     l4302 0FBA                                       l4222 0B6C  
                                     l4230 0C62                                       l4214 0B38  
                                     l4206 0AEE                                       l4150 0884  
                                     l4126 079C                                       l4118 074C  
                                     l3600 22B4                                       l3520 20BA  
                                     l3512 2090                                       l3504 2060  
                                     l4048 3DAA                                       l4400 2822  
                                     l3264 326E                                       l3256 31FE  
                                     l4072 2FF2                                       l4064 2FB8  
                                     l4056 2F80                                       l3440 1B5E  
                                     l3432 1B12                                       l3424 1AF0  
                                     l3416 1AC6                                       l3360 192A  
                                     l3352 18F4                                       l3344 18A6  
                                     l3336 1896                                       l3328 1886  
                                     l3280 17B6                                       l3272 1784  
                                     l4320 10B2                                       l4304 0FC0  
                                     l4312 1058                                       l4240 0D2E  
                                     l4232 0C80                                       l4224 0BD0  
                                     l4208 0B00                                       l4216 0B40  
                                     l4160 094E                                       l4136 0820  
                                     l3610 2326                                       l3602 22C2  
                                     l3530 20E6                                       l3522 20C0  
                                     l3514 20A0                                       l3506 206E  
                                     l4410 284A                                       l4402 2826  
                                     l3258 3210                                       l4074 2FF6  
                                     l4058 2F8C                                       l3450 1BC8  
                                     l3442 1B6C                                       l3434 1B28  
                                     l3418 1AD4                                       l3426 1AF2  
                                     l3370 1976                                       l3362 1938  
                                     l3354 1904                                       l3338 189A  
                                     l3346 18AA                                       l3290 17E8  
                                     l3282 17B8                                       l3274 1786  
                                     l4330 10F0                                       l4322 10C2  
                                     l4314 1076                                       l4306 1018  
                                     l4250 0DDE                                       l4242 0D3E  
                                     l4234 0CB4                                       l4226 0C28  
                                     l4218 0B48                                       l4170 09D0  
                                     l4162 0982                                       l4154 08BA  
                                     l4138 0832                                       l4090 0666  
                                     l4082 0636                                       l3620 2392  
                                     l3612 2334                                       l3604 22F0  
                                     l3540 2120                                       l3532 20F6  
                                     l3524 20C6                                       l3516 20A2  
                                     l3508 2070                                       l4412 2852  
                                     l4076 3024                                       l4068 2FCA  
                                     l3700 1DB4                                       l3460 1C02  
                                     l3452 1BE8                                       l3444 1BA6  
                                     l3380 19B6                                       l3428 1B00  
                                     l3364 193A                                       l3356 191A  
                                     l3348 18AE                                       l3292 17EA  
                                     l3276 1796                                       l3284 17C0  
                                     l3268 176A                                       l4340 1126  
                                     l4332 1100                                       l4324 10C6  
                                     l4316 1092                                       l4308 104C  
                                     l4260 0E4E                                       l4252 0E12  
                                     l4244 0D4E                                       l4236 0CE6  
                                     l4228 0C5C                                       l4172 09E2  
                                     l4180 0A2E                                       l4164 098A  
                                     l4156 08EE                                       l4148 086A  
                                     l4092 068A                                       l4084 0640  
                                     l4500 136E                                       l3630 23E0  
                                     l3622 23AC                                       l3614 235E  
                                     l3542 2136                                       l3534 2106  
                                     l3526 20D4                                       l3518 20AA  
                                     l4422 28FA                                       l4414 2886  
                                     l4406 282C                                       l4078 3036  
                                     l3710 1E16                                       l3702 1DC0  
                                     l3462 1C08                                       l3454 1BEC  
                                     l3438 1B52                                       l3446 1BA8  
                                     l3390 19E0                                       l3382 19C2  
                                     l3374 198A                                       l3366 1944  
                                     l3358 1926                                       l3294 17F0  
                                     l3286 17D0                                       l3278 17A6  
                                     l3470 3B00                                       l4350 1182  
                                     l4342 1132                                       l4334 1108  
                                     l4326 10D6                                       l4318 10A4  
                                     l4270 0F04                                       l4262 0E5A  
                                     l4254 0E26                                       l4246 0D82  
                                     l4238 0CFC                                       l4190 0A6E  
                                     l4174 09F4                                       l4158 08F4  
                                     l4166 09BC                                       l4094 0694  
                                     l4086 0650                                       l4502 138E  
                                     l4510 13F6                                       l3632 23E2  
                                     l3624 23C8                                       l3608 231A  
                                     l3616 2362                                       l3560 218A  
                                     l3544 2146                                       l3552 2166  
                                     l3536 2108                                       l3528 20D6  
                                     l4600 2698                                       l4424 290C  
                                     l4408 2842                                       l3800 33EC  
                                     l3720 1EAC                                       l3712 1E22  
                                     l3704 1DD0                                       l3640 1C2A  
                                     l3464 1C16                                       l3456 1BFA  
                                     l3448 1BB8                                       l3384 19C6  
                                     l3376 199A                                       l3368 1966  
                                     l3392 19E6                                       l3296 17FE  
                                     l3288 17D6                                       l3472 3B0C  
                                     l3480 3C34                                       l4360 11CC  
                                     l4344 1138                                       l4352 1188  
                                     l4336 1116                                       l4328 10E8  
                                     l4280 0F4C                                       l4272 0F16  
                                     l4264 0E7E                                       l4248 0DD8  
                                     l4256 0E2A                                       l4192 0AA4  
                                     l4176 09FC                                       l4168 09CC  
                                     l4096 069C                                       l4088 065E  
                                     l4440 3088                                       l4432 3044  
                                     l4520 149C                                       l4512 1418  
                                     l4504 139C                                       l3626 23CC  
                                     l3618 237C                                       l3570 21DC  
                                     l3562 21A4                                       l3554 2176  
                                     l3546 214E                                       l3538 2110  
                                     l4610 2720                                       l4602 26A4  
                                     l4426 291E                                       l4418 28BC  
                                     l3810 3418                                       l3802 33F2  
                                     l3730 1F02                                       l3722 1ECA  
                                     l3714 1E3E                                       l3706 1DEA  
                                     l3650 1C66                                       l3642 1C36  
                                     l3466 1C18                                       l3458 1C00  
                                     l3394 1A0C                                       l3386 19D4  
                                     l3378 19A8                                       l3298 1800  
                                     l3474 3B1E                                       l3482 3C38  
                                     l4370 11FC                                       l4362 11D8  
                                     l4354 119A                                       l4346 115E  
                                     l4338 111E                                       l4290 0F82  
                                     l4282 0F5C                                       l4274 0F24  
                                     l4266 0EE2                                       l4258 0E3A  
                                     l4194 0AAC                                       l4186 0A40  
                                     l4178 0A16                                       l4098 06AE  
                                     l4442 30A0                                       l4434 306E  
                                     l4530 1520                                       l4522 14C0  
                                     l4514 1428                                       l3492 3CDA  
                                     l4452 3DC4                                       l3628 23DA  
                                     l3580 2238                                       l3572 21EC  
                                     l3564 21B4                                       l3556 2176  
                                     l3548 2152                                       l4620 275E  
                                     l4612 272C                                       l4604 26D6  
                                     l4460 3DB4                                       l3804 3408  
                                     l3812 341E                                       l3820 34FA  
                                     l3740 1F6C                                       l3732 1F06  
                                     l3724 1ED4                                       l3716 1E68  
                                     l3708 1DFA                                       l3660 1C98  
                                     l3652 1C76                                       l3644 1C44  
                                     l3396 1A40                                       l3388 19D6  
                                     l3476 3B22                                       l3484 3C50  
                                     l4380 1256                                       l4364 11E0  
                                     l4356 11B4                                       l4348 117A  
                                     l4292 0F86                                       l4284 0F60  
                                     l4268 0EF2                                       l4276 0F2C  
                                     l4188 0A52                                       l4196 0AB0  
                                     l4444 30BC                                       l4532 1536  
                                     l4540 15A0                                       l4524 14F2  
                                     l4516 145A                                       l4508 13E4  
                                     l4700 39EA                                       l3494 3CE8  
                                     l4454 3DC8                                       l3590 2278  
                                     l3582 223A                                       l3574 2200  
                                     l3566 21C4                                       l4622 2782  
                                     l4614 273A                                       l4606 26D8  
                                     l4462 3DB8                                       l4390 27B4  
                                     l3814 342E                                       l3806 3410  
                                     l3830 3526                                       l3822 34FE  
                                     l3750 1FCE                                       l3742 1F78  
                                     l3734 1F14                                       l3726 1EE2  
                                     l3718 1E9E                                       l3670 1CD8  
                                     l3662 1CA6                                       l3654 1C7C  
                                     l3646 1C46                                       l3398 1A42  
                                     l3910 2CB8                                       l3902 2C64  
                                     l3478 3C28                                       l4382 1266  
                                     l4374 1230                                       l4366 11F0  
                                     l4358 11BA                                       l4294 0F8C  
                                     l4286 0F66                                       l4278 0F3E  
                                     l4198 0AB8                                       l4446 30CE  
                                     l4438 307A                                       l4550 1682  
                                     l4542 15CE                                       l4534 1544  
                                     l4518 146A                                       l4702 39F2  
                                     l4710 35AA                                       ?_pad 0011  
                                     l4800 3ABA                                       l4464 3D90  
                                     l4456 3DBC                                       l4640 3B44  
                                     l3592 2282                                       l3584 224A  
                                     l3576 220E                                       l3568 21D4  
                                     l4624 2792                                       l4616 2758  
                                     l4608 26E4                                       l4472 3D3E  
                                     l3496 3CB4                                       l4392 27C8  
                                     l3816 3436                                       l3808 3412  
                                     l3840 355E                                       l3832 352E  
                                     l3824 350C                                       l3760 2036  
                                     l3752 1FE2                                       l3744 1F86  
                                     l3736 1F42                                       l3728 1EF4  
                                     l3680 1D22                                       l3672 1CDE  
                                     l3664 1CA8                                       l3656 1C8C  
                                     l3648 1C56                                       l3912 2CBA  
                                     l3904 2C7A                                       l3488 3B80  
                                     l4384 126C                                       l4376 1242  
                                     l4368 11F6                                       l4288 0F72  
                                     l4296 0F92                                       l4448 30F6  
                                     l4560 16F8                                       l4536 1574  
                                     l4528 150E                                       l4632 37F2  
                                     l4704 3A0E                                       l4712 35B6  
                                     l4802 3AC4                                       l4466 3D94  
                                     l4458 3DC0                                       l4810 3120  
                                     l4642 3B56                                       l3594 2290  
                                     l3586 225C                                       l3578 221A  
                                     l4626 27A0                                       l4618 275A  
                                     l4474 3D42                                       l3498 3CD0  
                                     l4394 27CC                                       l3850 3598  
                                     l3842 3574                                       l3834 3540  
                                     l3826 3514                                       l3762 2038  
                                     l3754 1FFC                                       l3746 1FB0  
                                     l3690 1D72                                       l3682 1D2E  
                                     l3674 1CFE                                       l3666 1CB8  
                                     l3658 1C92                                       l3770 3A74  
                                     l3914 2CCA                                       l4378 124E  
                                     l4298 0FA4                                       l4562 170C  
                                     l4546 163C                                       l4490 12D6  
                                     l4482 128E                                       l4634 37FA  
                                     l4730 38C4                                       l4650 2A5E  
                                     l4722 3858                                       l4714 35C2  
                                     l4740 2966                                       l4804 3ACC  
                                     l4468 3D9C                                       l4708 3D22  
                                     l4820 3196                                       l4812 3124  
                                     l4644 3B62                                       l3588 2272  
                                     l3596 22A2                                       l4628 27A2  
                                     l4476 3D48                                       l4580 3C8C  
                                     l4396 27D0                                       l3780 338E  
                                     l3852 35A0                                       l3844 357C  
                                     l3836 3548                                       l3828 3518  
                                     l3860 3694                                       l3756 2018  
                                     l3764 203E                                       l3748 1FB4  
                                     l3692 1D7E                                       l3684 1D38  
                                     l3676 1D0E                                       l3668 1CC8  
                                     l3772 3A84                                       l3940 2D48  
                                     l3924 2CF4                                       l3916 2CCE  
                                     l3908 2C8E                                       l4548 164E  
                                     l4556 16C6                                       l4492 12FA  
                                     l4484 12B2                                       l4572 1732  
                                     l4636 3808                                       l4732 3906  
                                     l4652 2A6E                                       l4724 3864  
                                     l4716 35CE                                       l4750 299C  
                                     l4742 296A                                       l4734 2944  
                                     l4806 3AD6                                       l4830 31DC  
                                     l4822 31A4                                       l4814 3132  
                                     l4646 3B66                                       l3598 22B0  
                                     l4590 2620                                       l4478 3D50  
                                     l4582 3CB0                                       l4398 27EC  
                                     l3790 33B4                                       l3782 3396  
                                     l3846 3582                                       l3838 3550  
                                     l3862 36C2                                       l3766 2042  
                                     l3758 2028                                       l3694 1D8A  
                                     l3686 1D4E                                       l3942 2D58  
                                     l3934 2D1C                                       l3926 2CFE  
                                     l3918 2CDC                                       l3950 32DA  
                                     l4574 1756                                       l4558 16EA  
                                     l4566 1718                                       l4494 1302  
                                     l4486 12C0                                       l4638 382E  
                                     l4662 2ACC                                       l4654 2A86  
                                     l4726 38A6                                       l4718 35E4  
                                     l4760 29DE                                       l4752 29B2  
                                     l4744 2978                                       l4736 2948  
                                     l4824 31B2                                       l4816 3174  
                                     l4808 311C                                       l4592 2666  
                                     l4680 2BAA                                       l4672 2B5C  
                                     l3792 33BC                                       l3784 339A  
                                     l3776 337C                                       l3848 3588  
                                     l3864 36D2                                       l3856 3656  
                                     l3880 2DE6                                       l3872 2D6A  
                                     l3696 1D98                                       l3688 1D5A  
                                     l3936 2D28                                       l3928 2D08  
                                     l3960 3320                                       l3952 32E8  
                                     l4568 1726                                       l4496 1310  
                                     l4488 12D2                                       l4728 38B8  
                                     l4664 2ADE                                       l4656 2AA0  
                                     l4648 2A52                                       l4832 3D54  
                                     l4762 29FC                                       l4754 29BA  
                                     l4770 2A1E                                       l4746 2988  
                                     l4738 2956                                       l4826 31C0  
                                     l4818 317E                                       l4594 267C  
                                     l4586 2602                                       l4682 2BBA  
                                     l4674 2B68                                       l3794 33CE  
                                     l3786 33A8                                       l3778 3380  
                                     l3866 36F6                                       l3858 3684  
                                     l3890 2E6A                                       l3882 2DF4  
                                     l3874 2D98                                       l3698 1DA4  
                                     l3938 2D38                                       l3970 2E8E  
                                     l3962 334E                                       l3954 32F4  
                                     l3946 32B6                                       l4498 1334  
                                     l4834 3D68                                       l4658 2AB0  
                                     l4772 2A2E                                       l4764 2A0C  
                                     l4756 29C6                                       l4748 298C  
                                     l4828 31CE                                       l4588 2612  
                                     l4692 2C04                                       l4676 2B78  
                                     l3796 33D6                                       l3788 33B0  
                                     l3868 36FC                                       l3884 2E06  
                                     l3876 2DA8                                       l3972 2ECC  
                                     l3980 2F0C                                       l3964 3362  
                                     l3956 3308                                       l3948 32C6  
                                     l4668 2AFA                                       l4836 3C5E  
                                     l4780 3DA6                                       l4774 2A3E  
                                     l4766 2A0E                                       l4758 29D4  
                                     l4790 377E                                       l4598 2690  
                                     l4686 2BD6                                       l4678 2B90  
                                     l3798 33DE                                       l3886 2E14  
                                     l3878 2DD6                                       l3894 3BB8  
                                     l3982 2F1E                                       l3974 2EF4  
                                     l3958 331C                                       l3990 3974  
                                     l4782 3D7C                                       l4950 3448  
                                     l4768 2A18                                       l4792 3782  
                                     l4688 2BE8                                       l3888 2E64  
                                     l3896 3BCE                                       l3976 2F00  
                                     l3968 2E6E                                       l3992 3984  
                                     l4696 39D0                                       l4784 3D88  
                                     l4960 34A0                                       l4952 345C  
                                     l4794 3786                                       l4786 3700  
                                     l3898 3BDE                                       l3986 2F62  
                                     l3994 3914                                       l4698 39E2  
                                     l4778 3D9E                                       l4962 34BA  
                                     l4954 3470                                       l4796 3788  
                                     l4788 371A                                       l4964 34CC  
                                     l4956 347A                                       l4948 3440  
                                     l4798 378A                                       l3998 394A  
                                     l4966 34D8                                       l4958 3488  
                                     l4988 2870                                       STR_1 060D  
                                     STR_2 0601                                       STR_3 0619  
                                     STR_4 0625                                       STR_5 062D  
                                     STR_8 0629                                       STR_9 0631  
                                     u3000 19A8                                       u3001 19A4  
                                     u3010 19B6                                       u3011 19B2  
                                     u3100 1B00                                       u3020 19D4  
                                     u3101 1AFC                                       u3021 19D0  
                                     u3110 1B12                                       u3030 1A0C  
                                     u3111 1B0E                                       u3031 1A08  
                                     u3200 1BFA                                       u3120 1B28  
                                     u3040 1A52                                       u4000 333E  
                                     u3201 1BF6                                       u3121 1B24  
                                     u3041 1A4E                                       u4001 333A  
                                     u3210 1C16                                       u3130 1B3E  
                                     u3050 1A88                                       u4010 334E  
                                     u3211 1C12                                       u3131 1B3A  
                                     u3051 1A84                                       u4011 334A  
                                     u3300 2090                                       u3140 1B52  
                                     u3060 1A98                                       u4020 2EAE  
                                     u3220 3B42                                       u4100 39CE  
                                     u3301 208C                                       u3141 1B4E  
                                     u3061 1A94                                       u3221 3B3E  
                                     u4101 39CA                                       u3310 20D4  
                                     u3150 1B6C                                       u3070 1AC4  
                                     u4030 2ECC                                       u3230 3C50  
                                     u4110 3944                                       u3311 20D0  
                                     u3151 1B68                                       u3071 1AC0  
                                     u4031 2EC8                                       u3231 3C4C  
                                     u4111 393E                                       u3400 2272  
                                     u3320 20E6                                       u3160 1BA6  
                                     u3080 1AD4                                       u4040 2EF4  
                                     u4200 2532                                       u3240 3BB0  
                                     u4120 3946                                       u5000 12FA  
                                     u3401 226E                                       u3321 20E2  
                                     u3161 1BA2                                       u3081 1AD0  
                                     u4041 2EF0                                       u4025 2EA4  
                                     u4201 252E                                       u3241 3BAA  
                                     u5001 12F6                                       u3410 2290  
                                     u3330 20F6                                       u3170 1BB8  
                                     u3090 1AF0                                       u4050 2F1E  
                                     u4210 2586                                       u3250 3BB2  
                                     u4130 395C                                       u5010 1334  
                                     u3411 228C                                       u3331 20F2  
                                     u3171 1BB4                                       u3091 1AEC  
                                     u4051 2F1A                                       u4131 3958  
                                     u5011 1330                                       u3260 3CE8  
                                     u3500 23DA                                       u3420 22B0  
                                     u3340 2136                                       u4300 2FC6  
                                     u3180 1BC8                                       u4220 25A2  
                                     u4140 2436                                       u5100 1634  
                                     u5020 13DC                                       u3261 3CE4  
                                     u3501 23D6                                       u3421 22AC  
                                     u3341 2132                                       u4301 2FC2  
                                     u3181 1BC4                                       u4221 259E  
                                     u5101 162E                                       u5021 13D6  
                                     u3270 3CFE                                       u3430 22C2  
                                     u3350 2176                                       u4310 3014  
                                     u3510 1C44                                       u3190 1BE8  
                                     u4070 2F58                                       u4230 25DE  
                                     u4150 2464                                       u5110 1636  
                                     u5030 13DE                                       u3271 3CFA  
                                     u3431 22BE                                       u3351 2172  
                                     u4311 3010                                       u3511 1C40  
                                     u3191 1BE4                                       u4071 2F52  
                                     u4231 25DA                                       u4215 257C  
                                     u4151 2460                                       u3440 22F0  
                                     u3360 21EC                                       u3280 206E  
                                     u5200 274A                                       u4240 3C20  
                                     u2800 3210                                       u4320 3024  
                                     u3600 1EE2                                       u3520 1C56  
                                     u4080 2F5A                                       u4160 2486  
                                     u4400 075E                                       u5120 164E  
                                     u5040 13F6                                       u3441 22EC  
                                     u3361 21E8                                       u3281 206A  
                                     u5201 2746                                       u4241 3C1A  
                                     u2801 320C                                       u4321 3020  
                                     u3601 1EDE                                       u3521 1C52  
                                     u4065 2F30                                       u4161 2482  
                                     u4145 242C                                       u4401 075A  
                                     u5121 164A                                       u5041 13F2  
                                     _PEN1 007E2A                                       u3450 2306  
                                     u3370 220E                                       u3290 2080  
                                     u5210 2758                                       u4250 3C22  
                                     u2810 3238                                       u3610 1F02  
                                     u3530 1C66                                       u4090 39BC  
                                     u4410 07EA                                       u4330 065E  
                                     u5130 16EA                                       u5050 1428  
                                     _PEN2 007B5A                                       u3451 2302  
                                     u3371 220A                                       u3291 207C  
                                     u5211 2754                                       u2811 3234  
                                     u3611 1EFE                                       u3531 1C62  
                                     u4411 07E6                                       u4331 065A  
                                     u5131 16E6                                       u5051 1424  
                                     u3460 231A                                       u3380 2238  
                                     u5220 2792                                       u5140 2612  
                                     u5300 2B78                                       u4260 3A3A  
                                     u2820 326E                                       u3700 338E  
                                     u3620 1F14                                       u3540 1CA6  
                                     u2900 185C                                       u4180 24F2  
                                     u4500 0A16                                       u4420 0818  
                                     u4340 06AE                                       u5060 146A  
                                     u3461 2316                                       u3381 2234  
                                     u5221 278E                                       u5141 260E  
                                     u5301 2B74                                       u4261 3A36  
                                     u2821 326A                                       u3701 338A  
                                     u3621 1F10                                       u3541 1CA2  
                                     u2901 1858                                       u4181 24EE  
                                     u4501 0A12                                       u4421 0812  
                                     u4341 06AA                                       u5061 1466  
                                     u3470 2334                                       u3390 225C  
                                     u5230 27A0                                       u5150 2620  
                                     u5310 2BBA                                       u4270 3A68  
                                     u3710 33A8                                       u3630 1F42  
                                     u3550 1CB8                                       u2910 186A  
                                     u2830 1784                                       u4190 2516  
                                     u4510 0A3C                                       u4430 081A  
                                     u4350 06BC                                       u5070 14C0  
                                     u3471 2330                                       u3391 2258  
                                     u5231 279C                                       u5151 261C  
                                     u5311 2BB6                                       u4271 3A64  
                                     u3711 33A4                                       u3631 1F3E  
                                     u3551 1CB4                                       u2911 1866  
                                     u2831 1780                                       u4175 249A  
                                     u4511 0A38                                       u4351 06B8  
                                     u5071 14BC                                       u3480 237C  
                                     u5160 267C                                       u5320 2BE8  
                                     u4280 2F80                                       u3720 33CE  
                                     u3800 3574                                       u3640 1F58  
                                     u3560 1CC8                                       u2920 18D8  
                                     u2840 1796                                       u4176 24A4  
                                     u4600 0B38                                       u4520 0A52  
                                     u4440 0832                                       u4360 06CE  
                                     u5080 1520                                       u5240 384A  
                                     u3481 2378                                       u5161 2678  
                                     u5321 2BE4                                       u4281 2F7C  
                                     u3721 33CA                                       u3801 3570  
                                     u3641 1F54                                       u3561 1CC4  
                                     u2921 18D4                                       u2841 1792  
                                     u4177 24B4                                       u4097 39B2  
                                     u4601 0B34                                       u4521 0A4E  
                                     u4441 082E                                       u4361 06CA  
                                     u5081 151C                                       u5241 3846  
                                     u5330 2956                                       u5250 3B56  
                                     u3490 23AC                                       u5170 26D2  
                                     u4290 2FA6                                       u3730 33EC  
                                     u3810 3598                                       u3650 1F6C  
                                     u3570 1CFE                                       u2930 18F0  
                                     u2850 17A6                                       u4610 0C80  
                                     u4530 0A6E                                       u4450 08B6  
                                     u4370 0716                                       u5090 15CE  
                                     u5331 2952                                       u5251 3B52  
                                     u3491 23A8                                       u5171 26CE  
                                     u4291 2FA2                                       u3731 33E8  
                                     u3811 3594                                       u3651 1F68  
                                     u3571 1CFA                                       u2931 18EA  
                                     u2851 17A2                                       u4195 250C  
                                     u4611 0C7C                                       u4531 0A6A  
                                     u4451 08B2                                       u4371 0712  
                                     u5091 15CA                                       _PEIE 007F96  
                                     u5340 2978                                       u5260 3B7E  
                                     u5180 271C                                       u3740 3408  
                                     u3820 3684                                       u3660 1F86  
                                     u3580 1D0E                                       u3900 3BCE  
                                     u2940 18F2                                       u2860 17E8  
                                     u4700 0F16                                       u4620 0CE6  
                                     u4540 0AA4                                       u4460 094A  
                                     u4380 0744                                       u5500 3488  
                                     u5341 2974                                       u5261 3B7A  
                                     u5181 2718                                       u3741 3404  
                                     u3821 3680                                       u3661 1F82  
                                     u3581 1D0A                                       u3901 3BCA  
                                     u2861 17E4                                       u4701 0F12  
                                     u4621 0CE2                                       u4541 0AA0  
                                     u4461 0946                                       u4381 073E  
                                     u5501 3484                                       u5350 29B2  
                                     u5190 273A                                       u2790 31FE  
                                     u3750 342E                                       u3830 36C2  
                                     u3670 1FCE                                       u3590 1E88  
                                     u2950 191A                                       u2870 17FE  
                                     u3910 2C7A                                       u4710 0F24  
                                     u4630 0D2E                                       u4550 0ACA  
                                     u4470 09BC                                       u4390 0746  
                                     u5270 2A6E                                       u5510 349C  
                                     u5351 29AE                                       u5191 2736  
                                     u2791 31FA                                       u3751 342A  
                                     u3831 36BE                                       u3671 1FCA  
                                     u2951 1916                                       u2871 17FA  
                                     u3911 2C76                                       u4711 0F20  
                                     u4631 0D2A                                       u4551 0AC6  
                                     u4471 09B8                                       u5271 2A6A  
                                     u5511 3496                                       u5360 29D4  
                                     u3760 350C                                       u3840 36F6  
                                     u3680 1FFC                                       u2960 1938  
                                     u2880 1810                                       u3920 2CAE  
                                     u4800 1116                                       u4720 0F3E  
                                     u4640 0D3E                                       u4560 0ADC  
                                     u4480 09E2                                       u5280 2AB0  
                                     u5520 349E                                       u5361 29D0  
                                     u3761 3508                                       u3841 36F2  
                                     u3681 1FF8                                       u2961 1934  
                                     u2881 180C                                       u4801 1112  
                                     u4721 0F3A                                       u4641 0D3A  
                                     u4561 0AD8                                       u4481 09DE  
                                     u5281 2AAC                                       u5370 29FC  
                                     u3770 3526                                       u3850 2D98  
                                     u3690 2036                                       u2970 1958  
                                     u2890 1820                                       u3930 2CDC  
                                     u4810 119A                                       u4730 0F4C  
                                     u4650 0DD8                                       u4570 0AEA  
                                     u4490 09F4                                       u5290 2ADE  
                                     u5530 34CC                                       u5371 29F8  
                                     u3771 3522                                       u3851 2D94  
                                     u3691 2032                                       u3595 1E7E  
                                     u2971 1954                                       u2891 181C  
                                     u3931 2CD8                                       u4811 1196  
                                     u4731 0F48                                       u4651 0DD4  
                                     u4571 0AE6                                       u4491 09F0  
                                     u5291 2ADA                                       u5531 34C8  
                                     u5380 2A2E                                       u4900 28F4  
                                     u3780 3540                                       u3860 2DD6  
                                     u2980 1966                                       u3940 2CF0  
                                     u4820 11B4                                       u4740 0FA4  
                                     u4660 0E26                                       u4580 0B00  
                                     u5381 2A2A                                       u4901 28EE  
                                     u3781 353C                                       u3861 2DD2  
                                     u2981 1962                                       u3941 2CEC  
                                     u3925 2CA4                                       u4821 11B0  
                                     u4741 0FA0                                       u4661 0E22  
                                     u4581 0AFC                                       u4910 28F6  
                                     u3790 355E                                       u3870 2DF4  
                                     u2990 1976                                       u3950 2D18  
                                     u4830 11CC                                       u4750 1076  
                                     u4670 0E4E                                       u4590 0B0E  
                                     u3791 355A                                       u3871 2DF0  
                                     u2991 1972                                       u3951 2D14  
                                     u4831 11C8                                       u4751 1072  
                                     u4671 0E4A                                       u4591 0B0A  
                                     u4920 290C                                       u3880 2E14  
                                     u3960 2D38                                       u4840 122A  
                                     u4760 1092                                       u4680 0EF2  
                                     u4921 2908                                       u3881 2E10  
                                     u3961 2D34                                       u4841 1224  
                                     u4761 108E                                       u4681 0EEE  
                                     _SEN1 007E28                                       u4930 291E  
                                     u3890 2E64                                       u3970 2D48  
                                     u4850 122C                                       u4770 10A4  
                                     u4690 0F04                                       _SEN2 007B58  
                                     u4931 291A                                       u3891 2E60  
                                     u3971 2D44                                       u4771 10A0  
                                     u4691 0F00                                       u5547 34AC  
                                     u3980 32C6                                       u4860 1242  
                                     u4780 10B2                                       u4940 306E  
                                     u3981 32C2                                       u4861 123E  
                                     u4781 10AE                                       u4941 306A  
                                     u5557 34E4                                       u4870 27EC  
                                     u3990 32E8                                       u4790 10E8  
                                     u4950 30A0                                       u5567 313C  
                                     u4871 27E8                                       u3991 32E4  
                                     u4791 10E4                                       u4951 309C  
                                     u4880 2822                                       u4960 30BC  
                                     u4881 281E                                       u4961 30B8  
                                     u4890 283E                                       u4970 30CE  
                                     u4891 283A                                       u4971 30CA  
                                     u4980 30F6                                       u4981 30F2  
                                     u4990 12B2                                       u4991 12AE  
                                     _TX91 007D66                                       _TX92 007B96  
                                     _dbuf 0100                                       _atoi 27B4  
                                     _ctoa 2F6C                                       _main 3440  
                                     _gyro 00C5                                       _prec 00DD  
                                     _temp 00E1                                       _nout 00D9  
                                     _test 00E3                                       pad@i 0018  
                                     pad@p 0015                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 001A                                       fsr2l 000FD9  
                            ___fpclassifyf 2E6E                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0000  
                          ___fldiv@new_exp 0020                               _tolower$1688 000D  
                             ___param_bank 000000                                      ??_pad 0017  
                            ___fltol@sign1 0009                            __end_of___aldiv 2A50  
                                    ?_atoi 0008                                      ?_ctoa 000A  
                          __end_of___fladd 1C2A                                      ?_main 0001  
                          __end_of___fldiv 23EE                            __end_of___awdiv 3440  
                          __end_of___flneg 3BF0                                      STR_14 0622  
                          __end_of___awmod 35AA                            __end_of___flmul 2054  
                          __end_of___flsub 3ABA                                      _ANSD0 0079D8  
                          __end_of___fltol 2D6A                                      _ANSD1 0079D9  
                                    _ANSC3 0079D3                                      _ANSD2 0079DA  
                                    _ANSC4 0079D4                                      _ANSC6 0079D6  
                                    _ANSC7 0079D7                                      _BRGH1 007D62  
                                    _BRGH2 007B92                                      _CREN1 007D5C  
                                    _CREN2 007B8C                            ___awdiv@divisor 0003  
                                    _RC1IE 007CED                                      _RC1IF 007CF5  
                                    _RC2IE 007D1D                                      _RC2IF 007D25  
                                    _RCEN1 007E2B                                      _RCEN2 007B5B  
                          ___awdiv@counter 0005                                      _PLLEN 007CDE  
                             vfpfcnvrt@fmt 004E                                      _SPEN1 007D5F  
                                    _SPEN2 007B8F                                      _RSEN1 007E29  
                                    _RSEN2 007B59                                      _TRMT1 007D61  
                                    _TRMT2 007B91                                      _TXEN1 007D65  
                                    _TXEN2 007B95                                      _SYNC1 007D64  
                                    _SYNC2 007B94                                      _accel 00CB  
                                    _flags 00DF                                      _fputc 31EC  
                          __end_of_setGPIO 3D8E                                      _fputs 3B00  
                          __end_of_isdigit 3C28                                      _wait1 3CDA  
                  __end_of_stop_condition1 3DC4                                      _print 3B44  
                                    atoi@n 0015                                      pad@fp 0011  
                                    atoi@s 0008                                      _width 00DB  
                                    ctoa@c 000C                                      _putch 3DD2  
                                    ctoa@l 000E                                      _start 00E5  
                                    ctoa@w 0010                            __end_of_isspace 3A74  
                             ?_rawReadI2C1 0001                          init_MPU6050@value 000A  
                          __end_of_isupper 3BB8                                      tablat 000FF5  
                                    status 000FD8                            __end_of_sprintf 3A22  
                           ?___fpclassifyf 0001                            __end_of_tolower 3974  
                             ?_rawSendI2C1 0001                              ?_init_MPU6050 0006  
                          __end_of_strncmp 311A                               ?_send_ACCELS 0001  
                          __initialization 378E                               __end_of_atoi 2944  
                             __end_of_ctoa 3044                               __end_of_main 34FA  
                          rawReadI2C1@Data 0002                                     ??_atoi 000A  
                                   ??_ctoa 000D                                     ??_main 00C3  
                            __activetblptr 000002                                     _ACKEN1 007E2C  
                                   _ACKEN2 007B5C                                     _ACKDT1 007E2D  
                                   _ACKDT2 007B5D                                     ?_fputc 0001  
                                   ?_fputs 000A                                     _BRG161 007DC3  
                                   _BRG162 007B83                                     ?_wait1 0001  
                         ___awdiv@dividend 0001                                     ?_print 0001  
                                   _ANSELA 000F38                                     ?_putch 0001  
                                   _RCREG1 000FAE                                     _RCREG2 000F74  
                             readI2C1@data 0004                                     _SENDB1 007D63  
                                   _SENDB2 007B93                                     _SPBRG1 000FAF  
                                   _SPBRG2 000F75                             ??_init_MPU6050 0007  
                                   _SSP1IE 007CEB                                     _SSP1IF 007CF3  
                                   _SSP2IE 007D1F                                     _SSP2IF 007D27  
                                   _TRISD0 007CA8                                     _TRISD1 007CA9  
                                   _TRISC3 007CA3                                     _TRISD2 007CAA  
                                   _TRISC4 007CA4                                     _TRISC6 007CA6  
                                   _TRISC7 007CA7                                     _TXREG1 000FAD  
                                   _TXREG2 000F73                           __end_of___xxtofl 27B4  
                            send_ACCEL@axe 00C2                          send_ACCEL@message 00B6  
                             vfprintf@cfmt 005C                                     ___flge 2D6A  
                                   ___fleq 3656                                  ??___aldiv 0009  
                         __end_of_readI2C1 3CB4                                  ??___fladd 0030  
                                   ___wmul 3CB4                                  ??___fldiv 0017  
                                ??___awdiv 0005                                  ??___flneg 0005  
                                ??___awmod 0005                                  ??___flmul 0009  
                                ??___flsub 0040                                  ??___fltol 0005  
                                   _efgtoa 0636                                     _floorf 23EE  
                         _init_I2C_Master1 3ABA                                     clear_0 37D4  
                                   clear_1 37E0                           __end_of_sendI2C1 3D3E  
                         ___awdiv@quotient 0007                            ___awmod@divisor 0003  
                                   isa$std 000001                            ___awmod@counter 0005  
                                   pad@buf 0013                                     ctoa@fp 000A  
                                   _strcpy 3974                                     _strlen 3C28  
                           _initUART1$2026 0013                         init_MPU6050@value2 000B  
                                   fputc@c 0001                                     fputs@c 000E  
                                   fputs@i 000F                                  ??_setGPIO 0001  
                                   fputs@s 000A                                  ??_isdigit 0003  
                          ___fpclassifyf@e 0009                            ___fpclassifyf@u 000B  
                          ___fpclassifyf@x 0001                               __mediumconst 0000  
                                ??_isspace 0003                                     tblptrh 000FF7  
                                ??_isupper 0003                                     tblptrl 000FF6  
                                   tblptru 000FF8                                     putch@c 0001  
                         __end_of_vfprintf 3854                                  ??_sprintf 005E  
                                ??_tolower 0009                                  ??_strncmp 0007  
                         ?_stop_condition1 0001                                 ___flge@ff1 001A  
                               ___flge@ff2 001E                            ??___fpclassifyf 0005  
                             ___xxtofl@arg 000B                             read_ACCEL@axis 0030  
                             ___xxtofl@exp 000A                               ___xxtofl@val 0001  
                               ___fleq@ff1 0001                                 ___fleq@ff2 0005  
                               __accesstop 0060                    __end_of__initialization 37E8  
                               ___flneg@f1 0001                              ___rparam_used 000001  
                               ___fltol@f1 0001                             __pcstackCOMRAM 0001  
                             __pidataBANK0 3DCC                               __pidataBANK1 3D00  
                            __end_of_fputc 32B6                              __end_of_fputs 3B44  
                            __end_of_wait1 3D00                     readI2C1@module_address 0005  
                            __end_of_print 3B80                              __end_of_putch 3DD4  
                        ?_start_condition1 0001                         ??_start_condition1 0002  
                            send_GYRO@axes 00BF                                    ??_fputc 0005  
                                  ??_fputs 000E                                    ??_wait1 0001  
                                  ??_print 0003                                    ??_putch 0001  
                        ?_read_TEMPERATURE 0038                                 __pbssBANK0 00C5  
                               __pbssBANK1 0100                          _accel_sensitivity 0150  
                       __size_of_initUART1 008E                         ??_read_TEMPERATURE 003C  
                       __size_of_read_GYRO 010A                       __size_of_rawReadI2C1 0016  
                 init_I2C_Master1@baudRate 000F                       __size_of_rawSendI2C1 0010  
                       __size_of_sendNACK1 000A                                    ?___flge 001A  
                                  ?___fleq 0001                         __size_of_send_GYRO 0060  
                       __size_of_send_TEMP 002C                                    ?___wmul 0001  
                     __size_of_send_ACCELS 0014                                    ?_efgtoa 0040  
                                  ?_floorf 0028                __size_of_restart_condition1 0008  
                                  ?_strcpy 0001                                    ?_strlen 0001  
                     __end_of_init_MPU6050 31EC                                  ?___xxtofl 0001  
                         send_GYRO@message 00B6                         __size_of_vfpfcnvrt 04DC  
                                  _SPBRGH1 000FB0                                    _SPBRGH2 000F76  
                                  _SSP1ADD 000FC8                                    _SSP2ADD 000F6E  
                                  _SSP1BUF 000FC9                                    _SSP2BUF 000F6F  
                                ?_readI2C1 0003                         initUART1@baud_rate 000F  
                                ?_sendI2C1 0003                           _gyro_sensitivity 0160  
                                  __Hparam 0000                                 _read_ACCEL 2B5A  
                                  __Lparam 0000                             send_ACCEL@axes 00BF  
                                  ___aldiv 2944                            __size_of___flge 0104  
                          __size_of___fleq 00AA                                    ___fladd 176A  
                                  ___fldiv 2054                                    ___awdiv 337C  
                                  ___flneg 3BB8                                    ___awmod 34FA  
                                  ___flmul 1C2A                                    ___flsub 3A74  
                                  ___fltol 2C64                            __size_of___wmul 0026  
                                ?_vfprintf 0056                               __psmallconst 0600  
                          __size_of_efgtoa 0C58                            __size_of_floorf 0212  
                                  __pcinit 378E                          __end_of_initUART1 378E  
                                  __ramtop 0600                                    __ptext0 3440  
                                  __ptext1 3D9E                                    __ptext2 3D7C  
                                  __ptext3 3C5E                                    __ptext4 35AA  
                                  __ptext5 3D54                                    __ptext6 3854  
                                  __ptext7 2A50                                    __ptext8 3D68  
                                  __ptext9 38B4                          __end_of_read_GYRO 2B5A  
                          __size_of_strcpy 005C                            __size_of_strlen 0036  
                             __size_of_pad 00C6                                    _setGPIO 3D7C  
                                  _isdigit 3BF0                                 ??___xxtofl 0005  
                         ___awmod@dividend 0001                           send_TEMP@message 00B6  
                         ___aldiv@dividend 0001                                    _isspace 3A22  
                        __end_of_sendNACK1 3DB4                                    _isupper 3B80  
                                  efgtoa@c 0046                                    efgtoa@d 0078  
                                  efgtoa@e 0090                                    efgtoa@f 0042  
                                  efgtoa@g 008C                                 _send_ACCEL 38B4  
                                  efgtoa@h 0082                                    efgtoa@i 008A  
                                  efgtoa@l 0086                                    efgtoa@m 0072  
                                  efgtoa@n 0092                                    efgtoa@p 007C  
                                  efgtoa@t 006C                                    efgtoa@u 0094  
                                  efgtoa@w 007E                                    atoi@neg 000E  
                               _send_GYROS 3D54                          __end_of_send_GYRO 38B4  
                                  _sprintf 39D0                                    _tolower 3914  
                        __end_of_send_TEMP 3C8A                            rawSendI2C1@data 0002  
                                  _strncmp 3044                       end_of_initialization 37E8  
                               ??_readI2C1 0004                                    floorf@e 0036  
                                  floorf@m 0032                                    floorf@u 0038  
                                  floorf@x 0028                   __end_of_init_I2C_Master1 3B00  
                                  fputc@fp 0003                            readI2C1@address 0003  
                            __Lmediumconst 0000                                    fputs@fp 000C  
                               ??_sendI2C1 0005                                 _gyro_range 00EF  
                        __end_of_vfpfcnvrt 176A                                 efgtoa@mode 0081  
                               efgtoa@sign 007A                               sendI2C1@data 0004  
                         ___aldiv@quotient 000B                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                   read_TEMPERATURE@output 003E                                 ??_vfprintf 005C  
                                  strcpy@d 0009                                    strlen@a 0003  
                                  strcpy@s 0007                                    strlen@s 0001  
                                _PORTDbits 000F83               init_MPU6050@gyro_range_input 0006  
                              ___fladd@grs 0037                              ___xxtofl@sign 0009  
                              ___fldiv@grs 0022                                ___fldiv@rem 001B  
                            initUART1@num1 0017                                ___flmul@grs 000E  
                              ?_read_ACCEL 0028                      __size_of_init_MPU6050 00D2  
                           __end_of___flge 2E6E                             __end_of___fleq 3700  
                              vfpfcnvrt@ap 0050                                vfpfcnvrt@ct 00A0  
                              vfpfcnvrt@fp 004C                             __end_of___wmul 3CDA  
                        read_GYRO@output_H 0031                          read_GYRO@output_L 0032  
                           __end_of_efgtoa 128E                                _accel_range 00F0  
                           __end_of_floorf 2600                                 floorf@F527 00D1  
                           __end_of_strcpy 39D0                             __end_of_strlen 3C5E  
                      start_initialization 378E                                ?_send_ACCEL 0001  
                           send_GYRO@F6410 00EC                                __end_of_pad 337C  
                              ?_send_GYROS 0001                  __size_of_start_condition1 0008  
                    __end_of___fpclassifyf 2F6C                               _init_MPU6050 311A  
                 __size_of_stop_condition1 0008              init_MPU6050@accel_range_input 0009  
                              vfprintf@fmt 0058                                   ??___flge 0022  
                                 ??___fleq 0009                                   ??___wmul 0005  
                __size_of_read_TEMPERATURE 00AC                                   ??_efgtoa 0047  
                              __pdataBANK0 00E9                                __pdataBANK1 0150  
                                 ??_floorf 002C   __end_of_set_internal_oscillator_with_PLL 3DAA  
__size_of_set_internal_oscillator_with_PLL 000C         ??_set_internal_oscillator_with_PLL 0001  
        ?_set_internal_oscillator_with_PLL 0001           _set_internal_oscillator_with_PLL 3D9E  
                                 ??_strcpy 0005                                   ??_strlen 0003  
                                ___fladd@a 002C                                  ___fladd@b 0028  
                                ___fldiv@a 0013                                  ___fldiv@b 000F  
                                ___flmul@a 0005                                  ___flmul@b 0001  
                              __pbssCOMRAM 005F                                  ___flsub@a 003C  
                                ___flsub@b 0038                              __pcstackBANK0 0060  
                      __size_of_read_ACCEL 010A                          __size_of___xxtofl 01B4  
                            ??_rawReadI2C1 0002                               send_GYRO@axe 00C2  
                            ??_rawSendI2C1 0002                          __size_of_readI2C1 002A  
                                _atoi$1593 0010                                  _atoi$1594 0014  
                                _atoi$1595 0012                                  __pnvBANK0 00EF  
                              _efgtoa$1540 006A                                _efgtoa$1534 0064  
                              _efgtoa$1528 0060                                _efgtoa$1529 0062  
                              _efgtoa$1538 0066                                _efgtoa$1539 0068  
                            ??_send_ACCELS 005F                          __size_of_sendI2C1 001E  
                      __size_of_send_ACCEL 0060                                   ?___aldiv 0001  
                                 ?___fladd 0028                                   ?___fldiv 000F  
                                 ?___awdiv 0001                                   ?___flneg 0001  
               __end_of_restart_condition1 3DBC                                   ?___awmod 0001  
                                 ?___flmul 0001                                   ?___flsub 0038  
                                 ?___fltol 0001                        __size_of_send_GYROS 0014  
                        __size_of_vfprintf 0062                                __smallconst 0600  
                                 _ACKSTAT1 007E2E                                   _ACKSTAT2 007B5E  
                                 ?_setGPIO 0001                                   ?_isdigit 0001  
                                _initUART1 3700                                   ?_isspace 0001  
                                 ?_isupper 0001                                  _read_GYRO 2A50  
                                 ?_sprintf 00A4                                   ?_tolower 0007  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                           __size_of_wait1 0026                                   ?_strncmp 0001  
                           __size_of_print 003C                             __size_of_putch 0002  
                                _sendNACK1 3DAA                                  _received2 00E6  
                          ___aldiv@divisor 0005                          ?_init_I2C_Master1 000F  
                          ___aldiv@counter 0009                              read_GYRO@axis 0030  
                                _send_GYRO 3854                             ___wmul@product 0005  
                                _send_TEMP 3C5E                         ??_init_I2C_Master1 0013  
                      __end_of_rawReadI2C1 3D54                        __end_of_rawSendI2C1 3D9E  
                                _uartdata2 00E7                                   _SSP1CON2 000FC5  
                                 _SSP2CON2 000F6B                                   _SSP1STAT 000FC7  
                                 _SSP2STAT 000F6D                          ??_stop_condition1 0002  
                                _vfpfcnvrt 128E                        __end_of_send_ACCELS 3D7C  
                               print@value 0001                          ___wmul@multiplier 0001  
                          sendI2C1@address 0003                                 ?_initUART1 000F  
                               ?_read_GYRO 0028                               _isspace$1624 0007  
                               vfpfcnvrt@c 00A3                                 vfpfcnvrt@f 009C  
                                copy_data0 37A2                                  copy_data1 37C2  
                          send_ACCEL@F6416 00E9                                 ?_sendNACK1 0001  
                         _start_condition1 3DC4                                 ?_send_GYRO 0001  
                               ?_send_TEMP 0001                               ??_read_ACCEL 002C  
                                 __Hrparam 0000                                 vfprintf@ap 005A  
                                 __Lrparam 0000                                 vfprintf@fp 0056  
                         _read_TEMPERATURE 35AA                           __size_of___aldiv 010C  
                         __size_of___fladd 04C0                           __size_of___fldiv 039A  
                         __size_of___awdiv 00C4                           __size_of___flneg 0038  
                         __size_of___awmod 00B0                           __size_of___flmul 042A  
                         __size_of___flsub 0046                           __size_of___fltol 0106  
                               ?_vfpfcnvrt 004C                         ___fpclassifyf@F465 00D5  
                               sprintf@fmt 00A6                                   ___xxtofl 2600  
                         __size_of_setGPIO 0012                           __size_of_isdigit 0038  
                             ??_send_ACCEL 005E                           __size_of_isspace 0052  
                                 __ptext10 39D0                                   __ptext11 37F2  
                                 __ptext20 3B00                                   __ptext12 128E  
                                 __ptext21 23EE                                   __ptext13 3044  
                                 __ptext30 34FA                                   __ptext22 2E6E  
                                 __ptext14 0636                                   __ptext31 337C  
                                 __ptext23 2C64                                   __ptext15 3914  
                                 __ptext40 3C8A                                   __ptext32 2F6C  
                                 __ptext24 3A74                                   __ptext16 3B80  
                                 __ptext41 3DB4                                   __ptext33 31EC  
                                 __ptext25 176A                                   __ptext17 3974  
                                 __ptext50 3DC4                                   __ptext42 3D3E  
                                 __ptext34 3DD2                                   __ptext26 3BB8  
                                 __ptext18 32B6                                   __ptext51 3D8E  
                                 __ptext43 3DAA                                   __ptext35 27B4  
                                 __ptext27 1C2A                                   __ptext19 3C28  
                                 __ptext52 3CDA                                   __ptext44 2600  
                                 __ptext36 3A22                                   __ptext28 2D6A  
                                 __ptext53 3ABA                                   __ptext45 2054  
                                 __ptext37 3BF0                                   __ptext29 3656  
                                 __ptext54 3700                                   __ptext46 3B44  
                                 __ptext38 3CB4                                   __ptext55 2944  
                                 __ptext47 311A                                   __ptext39 2B5A  
                                 __ptext48 3D20                                   __ptext49 3DBC  
                         __size_of_isupper 0038                               ??_send_GYROS 005F  
                       __end_of_read_ACCEL 2C64                               _SSP1CON1bits 000FC6  
                             _SSP2CON1bits 000F6C                           __size_of_sprintf 0052  
                         __size_of_tolower 0060                                   _readI2C1 3C8A  
                              _rawReadI2C1 3D3E                                 strcpy@dest 0001  
                         __size_of_strncmp 00D6                              __size_of_atoi 0190  
                            __size_of_ctoa 00D8                              __size_of_main 00BA  
                                 _sendI2C1 3D20                                _rawSendI2C1 3D8E  
                                 _received 00E8                                _send_ACCELS 3D68  
                                 efgtoa@fp 0040                                   efgtoa@ne 0070  
                                 efgtoa@pp 006E                                   efgtoa@ou 0074  
                                 isa$xinst 000000                                   _uartdata 005F  
                       __end_of_send_ACCEL 3914                                   _vfprintf 37F2  
                             _SSP1STATbits 000FC7                         __end_of_send_GYROS 3D68  
                             _SSP2STATbits 000F6D                            read_GYRO@output 002E  
                 read_TEMPERATURE@output_H 0040                   read_TEMPERATURE@output_L 0041  
                           _vfpfcnvrt$1554 0098                             _vfpfcnvrt$1559 009A  
                              ??_initUART1 0013                                ??_read_GYRO 002C  
                                 isdigit@c 0001                                ??_sendNACK1 0002  
                                sprintf@ap 00AE                                ??_send_GYRO 005E  
                              ??_send_TEMP 005E                                   isspace@c 0001  
                                strcpy@src 0003                                   isupper@c 0001  
                                strncmp@_l 0001                                  strncmp@_r 0003  
                               _OSCCONbits 000FD3                                efgtoa@nmode 0080  
                              ??_vfpfcnvrt 0052                     sendI2C1@module_address 0005  
                                 sprintf@f 00B0                                   tolower@c 0007  
                                 sprintf@s 00A4                     __size_of___fpclassifyf 00FE  
                                 strncmp@l 0008                                   strncmp@n 0005  
                                 strncmp@r 000A                               ___aldiv@sign 000A  
                       _restart_condition1 3DB4                              ___fladd@signs 0034  
                      ?_restart_condition1 0001                               ___fladd@aexp 0035  
                             ___fladd@bexp 0036                            _stop_condition1 3DBC  
